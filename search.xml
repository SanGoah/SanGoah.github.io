<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Manjaro Linux下配置DosBox+MASM汇编环境</title>
    <url>/2019/11/24/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEDosBox-MASM%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>sudo pacman -S dosbox</p>
<p>mount c ~/Workspaces/MASM</p>
<p>MASM5.0，更高的版本需要Win行命令提示符环境才能运行</p>
<p>masm hw.asm</p>
<p>文件名长度不能超过8</p>
<p>link hw</p>
<p>hw</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>汇编</tag>
        <tag>DosBox</tag>
        <tag>MASM</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下使用opencv_traincascade</title>
    <url>/2019/11/18/Manjaro-Linux%E4%B8%8B%E4%BD%BF%E7%94%A8opencv-traincascade/</url>
    <content><![CDATA[<p>OpenCV中有个神奇的AdaBoost，通过读入一个xml即可识别出目标区域。此物中文名唤“级联分类器”，“级联”指它由简单分类器级联组成，通过所有分类器的区域即为目标区域。训练时通过对样本的一定操作可生成样本的Haar/LBP/HOG等特征，检测时遍历待识别图片各区域进行特征匹配。</p>
<h1 id="训练">训练</h1>
<h2 id="文件准备">文件准备</h2>
<p>训练文件夹的结构应当如下：</p>
<ul>
<li><训练文件夹>
<ul>
<li><code>data</code>（训练结果文件夹）</li>
<li><code>vec</code>（样本集文件夹）</li>
<li><code>bg</code>（背景集文件夹）</li>
<li><code>vec.bat</code>（样本集相关信息）</li>
<li><code>vec.vec</code>（样本集相关信息）</li>
<li><code>bg.txt</code>（背景集相关信息）</li>
<li><code>opencv_createsamples</code>（生成<code>pos.vec</code>的工具）</li>
<li><code>opencv_traincascade</code>（训练的工具）</li>
</ul></li>
</ul>
<p>其中这些东西的名字都可以变。</p>
<p>首先建立训练文件夹和三个子文件夹，并分别放入样本集图片和背景集图片。样本的大小大约应当几十见方，太大会爆栈；背景应当远大于训练图片，几百见方，且内容较复杂。这是因为程序将训练图片作为滑动窗口在背景上滑动来采集训练图像，如果无法采集到足够多的样本就会报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>错误。</p>
<p>关于样本集与背景集的比例，有帖子认为一比三是比较合适的，我理解是生活中没有样本的情况（背景）多于有样本，但如果给太多背景影响训练效率。</p>
<p>放好后在训练文件夹下进入终端，<code>ls ./bg/&gt;bg.txt</code>生成背景集相关信息，<code>ls ./vec/&gt;vec.bat</code>生成样本集相关信息。自动生成的文件最后有个空行需要删掉。有帖子指出这里的文件对换行格式也有要求，实测VSCode中的“LF”格式没问题。</p>
<p>此时生成的两个文件内应当是形如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr></table></figure>
<p>将之改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr></table></figure>
<p>这是因为待会调用训练程序时无法指定图片地址，所以地址要在这两个文件中显式指出。</p>
<p>除此之外，还要指出样本图片（背景不需要）的该样本数目、起始坐标和表示样本宽高</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr></table></figure>
<p>那两个工具在电脑里查找一下，通过anaconda装的就是在anaconda文件夹里某个角落，复制过去即可。</p>
<h2 id="创建样本">创建样本</h2>
<p><code>./opencv_createsamples -vec vec.vec -info vec.bat -bg bg.txt -w xx -h xx</code></p>
<p>注意图片尺寸要对，否则报<code>Error: Assertion failed (_img.rows * _img.cols == vecSize)</code>。</p>
<p>这里的工具是直接拉过来用的，配套环境可能跟不上。如果报错他想找个啥库找不到之类，以<code>libopencv_core.so.3.2</code>为例：</p>
<blockquote>
<p>Find the folder containing the shared library <code>libopencv_core.so.3.2</code>using the following command line. <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;sudo find &#x2F; -name&quot;libopencv_core.so.3.2*&quot;</span></pre></td></tr></table></figure> Then I got the result: <code>/usr/local/&gt;lib/libopencv_core.so.3.2</code>.</p>
<p>Create a file called <code>/etc/ld.so.conf.d/opencv.conf</code> and write to it the path to the folder where the binary is stored.For example, I wrote <code>/usr/local/lib/</code> to my opencv.conf file.</p>
<p>Run the command line as follows. <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ldconfig -v</span></pre></td></tr></table></figure> Try to run the test binary again.</p>
</blockquote>
<p>生成<code>vec.vec</code>就是好了。</p>
<p>可能需要给工具一个执行权限。</p>
<h2 id="训练-1">训练</h2>
<p><code>./opencv_traincascade -data data -vec vec.vec -bg bg.txt -numPos xxx -numNeg xxx -numStages 20 -w xx -h xx -minHitRate 0.9999 -maxFalseAlarmRate 0.5 -mode ALL</code>，其中<code>numPos</code>和<code>numNeg</code>是每次训练使用的样本数量，而非你提供了多少样本。这个数量应当足够多（样本数应当大于10，否则报<code>Cascade classifier can’t be trained. Check the used training parameters.</code>），和提供的数量一样保持一比三，并且少于提供的样本数（否则报<code>Traincascade Error:Bad argument(Can not get new positive sample.The most possible reason is insufficient count of samples in given vec-file.</code>）；<code>numStage</code>是训练的级数，默认为20；<code>minHitRate</code>指“分类器的每一级希望得到最小检测率”，一般0.9999；<code>maxFalseAlarmRate</code>，最大虚警率，“影响弱分类器的阈值，表示每个弱分类器将负样本误分为正样本的比例”，一般默认值为0.5。还有其它贼多参数，用到再去查吧。</p>
<p>官方给的<code>numPos</code>和<code>numNeg</code>计算方法是<code>vec-file number &gt;= (numPos + (numStages-1) * (1 – minHitRate) * numPos) + S</code>。<code>vec-file number</code>是指提供的样本数。</p>
<p>训练过程中经常报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>，排除背景信息那个文本文档格式问题的话就是需要更多更大更复杂的背景的意思。</p>
<h1 id="检测">检测</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">xx = cv2.CascadeClassifier(&lt;xml路径&gt;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">xxx = xx.detectMultiScale(&lt;图片&gt;, scaleFactor=<span class="number">1.1</span>, minNeighbors=<span class="number">55</span>, minSize=(<span class="number">10</span>, <span class="number">10</span>),maxSize=(<span class="number">90</span>,<span class="number">90</span>),flags=cv2.CASCADE_SCALE_IMAGE)</span></pre></td></tr></table></figure>
<p><code>scaleFactor</code>指每次检测区域扩大多少，1.1就是每次扩大百分之十；<code>minNeighbors</code>大概意思是一个目标区域附近允许有多少目标区域——因为往往对同一个目标，程序会识别出许多临近的目标区域，看情况调调这个参数留一个就行。</p>
]]></content>
      <categories>
        <category>中医</category>
        <category>分类器</category>
      </categories>
      <tags>
        <tag>OpenCV</tag>
        <tag>AdaBoost</tag>
        <tag>cascade</tag>
      </tags>
  </entry>
  <entry>
    <title>有关摆脱祸乱之源的尝试</title>
    <url>/2019/11/11/%E6%9C%89%E5%85%B3%E6%91%86%E8%84%B1%E7%A5%B8%E4%B9%B1%E4%B9%8B%E6%BA%90%E7%9A%84%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<p>因为整天昏昏欲睡，玩Dota的同学称我为啥啥之主记不清了，刚刚查了下可能是叫祸乱之源？</p>
<p>知乎上有一些类似“如何保持精力旺盛”的问题，答者众，然而翻翻回答，要么是一些傻逼励志书的类似读书笔记的东西（这些书有一个算一个都是傻逼，引用这玩意的答主也是傻逼，有不同意见的请将本网址添加至<code>C:\WINDOWS\system32\drivers\etc\host</code>，自己搭博客写字的好处就是特么的不用管这些友善度），要么是一些莫名其妙似是而非八成就是为了推销保健品的科学术语使劲堆，还有就是分好几十条小tips每一条都令人无法理解这玩意有啥用的例如想着待会你要去吃个啥啥一直想吃的小点心然后你就精神了我觉得我想着待会就能去把你打一顿了比较有用点。</p>
<p>与其看网上这些编出来骗赞的“经验贴”，不如自己实验。毕竟就算真的是答主发自肺腑的经验之谈，由于人与人之间生活环境、个人身体条件巨大的差别恐怕也很难直接套用，有个答主说他找了女朋友就好了，一想woc真特么有道理，问题是国家不给发我去哪找，充一万话费送吗那我充十万。</p>
<h1 id="睡眠">1. 睡眠</h1>
<p>精力不好最大的表现就是昏昏欲睡，所以第一反应是研究睡眠。</p>
<h2 id="时间">1.1. 时间</h2>
<p>目前11点到2点间睡，具体没规律。典型的情况是11点半上床，十二点半或更晚些睡着——话说怎么知道自己是几点睡着的啊百度搜出来全是怎么知道自己电脑是32位还是64位。早晨会在上课前半小时起床，无论是几点的课。如果上午没课的话就11点到2点起，不一定。</p>
<p>如果上午没课睡到中午自然是没有午睡的，否则会有。时间大致是从回到宿舍睡到再不起就迟到，时间根据季节、课表可能从不到20分钟到3小时以上。</p>
<p>早晨或中午醒来后通常会感觉没睡够，大部分情况下会坚持不睡去上课也就慢慢清醒些，但如果决定趴倒接着睡的话睡他个两节课也无压力。所以必修课选睡选修课必睡——可能是在教室睡也可能是在宿舍，取决于教室与宿舍的距离。</p>
<h2 id="入睡情况">1.2. 入睡情况</h2>
<p>午觉通常能迅速睡着，晚上则大概率不可以。说起来我应该算是夜里精神的一类人，即使在全国大学生天文爱好者——勉强算是世界上最能熬夜的一批人——云集的活动里也是少数能连续通宵的……不过毕竟野外天冷，刺激肾上腺素分泌，而且鼓捣些器材啥的也不算废脑子，熬夜难度比不上修福报的程序员。</p>
<p>晚上临睡会刷B站，上床后入睡前没有玩手机的习惯，但通常会听些什么，郭德纲、唱间小姐姐直播、音声故事和ASMR都有听，主要是为了遮蔽舍友闹出的动静。大晚上的跟那洗衣服洗头也就算了，一会嘿嘿嘿嘿一会哈哈哈哈一会输钱了砸桌子的。</p>
<h2 id="计划">1.3. 计划</h2>
<p>睡午觉可能是导致晚上难以迅速入睡的重要原因，大约从高一或略微更早养成的这个习惯，考虑戒掉。其实从三五天前起就开始强制自己不睡午觉了——上课也不睡——目前感受不太好，尤其是下午的课，别说听课，连网络小说都看不太懂了，晚上会有好转，写写作业看看书的智力水平勉强能保持。再过一段时间看看。</p>
<p><strong>【W+1】</strong>好像现在影响不大了。但还是有影响而且想睡。试试中午看人文社科类的书。</p>
<p>不睡午觉的话晚上的睡眠时间可能需要相应增加。暂且尝试11点前出现在床上，如果不睡午觉达成了晚上可以快速入眠的目的的话就是可以睡7个半到八个小时，早晨早起些，把晚上刷B站放在早晨，也算是刺激刺激大脑。</p>
<p>另外有人整天讲什么蓝光什么褪黑素什么的，强烈怀疑是为了卖保健品。听说蓝色可以使人冷静而理性，所以码代码时把编辑器调成深蓝色背景，蓝色够多吧抑制褪黑素吧，照样困。</p>
<h1 id="饮食">2. 饮食</h1>
<h2 id="概况">2.1. 概况</h2>
<p>早餐10点吃（起得晚来不及只能抽课间），1点以后吃午餐（人少不用排队）。晚餐5点到7点间吃，内容都是食堂标配。</p>
<p>基本不喝牛奶，每天都吃水果。</p>
<h2 id="计划-1">2.2. 计划</h2>
<p>有一些人提到饮食的影响，尤其是具体到午睡时比较常见的说法是“中国人午餐吃米高碳水血糖高所以下午困”，早餐上的建议与之类似，也是高蛋白低碳水啥啥啥的。另外也有讨论高油盐、喝水少的影响的。</p>
<p>高碳水、高油盐这些问题几乎不可能解决，食堂里能顶饱的也就是米饭了，而肉类主要是炸鸡腿、炸鸡排、炸鸡块，少见的家常做法的肉通常比较咸。另外——某些人每顿饭都强调要低碳水、高蛋白——这是不把膳食指南放在眼里吗？</p>
<p>多喝水是容易做到的。另外可以一定程度上考虑早晨和中午时减少碳水摄入以期在下午获得更好的表现。</p>
<p>考虑早餐分开两次在8点和10点吃茶鸡蛋，午餐以肉类为主，已屯三箱王光烧牛肉，晚餐照常。</p>
<p><strong>【W+1】</strong>午餐只吃肉胃受不了，挺难受的。王光烧牛肉的油冬天会冻成粉状，超级恶心。</p>
<p>保持吃水果的习惯，另外临睡加一包奶。</p>
<p>吃上的开销几乎不会增加。</p>
<h1 id="运动">3. 运动</h1>
<h2 id="概况-1">3.1. 概况</h2>
<p>通常不专门运动，但学校大，日常上课破万步。</p>
<h2 id="计划-2">3.2. 计划</h2>
<p>把每天晚上刷B站的时间用来跑步试试。</p>
<p><strong>【W+1】</strong>也不一定跑步，总之晚上不要娱乐，放在早晨起来不太清醒的时候加速清醒。</p>
]]></content>
  </entry>
  <entry>
    <title>虚拟存储器</title>
    <url>/2019/11/11/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |5|5| |          |1|1|1|1| | |5|5|5|5|4|4|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |3|3| |          | |2|2|2| | |2|1|1|1|1|5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|4| |          | | |3|3| | |3|3|2|2|2|2|</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4|4|4|3|3|3|</span></pre></td></tr><tr><td class="code"><pre><span class="line">       1 2 3 4     5 6             +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                1 2 3 4 5 6</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |3|3|3|          |1|1|1|1| | |1| | |1|1|5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |1|4|4|          | |2|2|2| | |2| | |2|2|2|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|2|5|          | | |3|3| | |5| | |5|4|4|</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4| | |3|3|3|</span></pre></td></tr><tr><td class="code"><pre><span class="line">       1 2 3 4     5 6 7           +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                1     2 3 4</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">  +-----------------------------------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">  |5  0  1  2  0  3  0  4  2  3  0  3  2  1  2  0  1  5  0  1       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-+---------------------------------------------------------+-------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|51|51|51|21|  |20|01|00|21|  |20|31|21|20|  |01|  |00|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|  |01|01|00|  |31|31|30|30|  |01|01|00|11|  |11|  |10|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|  |  |11|10|  |10|10|41|41|  |41|41|40|40|  |40|  |51|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">          1     2  3  4  5     6  7  8  9     10    11</span></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Struts2中Action的几种传值方式</title>
    <url>/2019/11/07/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>struts2中，传统的servlet中的request和response传递参数法仍可使用（但略有不同），并且增加了船新的传值方式。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="requestresponse">1. request/response</h1>
<blockquote>
<p>为避免与Servlet API耦合在一起，方便Action类做单元测试，Struts2对HttpServletRequest、HttpSession、ServletContext进行了封装，构造了三个Map对象来替代这三种对象。注意，这三个对象与Servlet API中的三个对象是相同的，即，在Action中放入Session中信息，在JSP页面中是可以读出来的。</p>
</blockquote>
<p>在Action类中引入上下文类ActionContext，使用<code>getContext()</code>实例化一个对象，就可以通过这个对象获取session和application的map对象，而ActionContext对象本身包含了request的map对象。</p>
<p>向它们中添加属性只需使用<code>put()</code>方法，若向request添加属性，只需向ActionContext对象中添加。</p>
<h1 id="getset">2. get/set</h1>
<p>之前带有传值的示例就是用的这种方式。在action类中定义与jsp页面中上传参数的东西同名的私有成员变量并生成get/set方法即可直接使用，贼方便。</p>
<p>这种方法的进阶版是传JavaBean——而不是一个个传数据。也非常简单，唯一需要注意的是jsp页面中上传参数的东西的name必须是<code>&lt;JavaBean的名字&gt;.名字</code>。</p>
<h1 id="示例">3. 示例</h1>
<p>一个学生登录的界面。用户在<code>index.jsp</code>填写表单，提交后跳转至欢迎界面，在欢迎界面显示输入的信息。</p>
<h2 id="index.jsp">3.1. index.jsp</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用JavaBean传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transJB"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.id"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.name"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.school"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"stud.pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用HttpServletRequest传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transSERVLET"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"school"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="struts.xml">3.2. struts.xml</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"TransTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transJB"</span> <span class="attr">class</span>=<span class="string">"transTest.JBtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succJB.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transSERVLET"</span> <span class="attr">class</span>=<span class="string">"transTest.SERVLETtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succSERVLET.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="transtest">3.3. transTest</h2>
<h3 id="servlettrans.java">3.3.1. SERVLETtrans.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext; </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SERVLETtrans</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ActionContext ctx=ActionContext.getContext();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Map&lt;String,Object&gt; application=ctx.getApplication();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        String id=request.getParameter(<span class="string">"id"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String school = request.getParameter(<span class="string">"school"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String pw =  request.getParameter(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String mail =  request.getParameter(<span class="string">"mail"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"id: "</span> + id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"name: "</span> + name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"school: "</span> + school);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"pw: "</span> + pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"mail: "</span> + mail);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"id"</span>,id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"name"</span>,name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"school"</span>,school);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"pw"</span>,pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"mail"</span>,mail);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="jbtrans.java">3.3.2. JBtrans.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> transTest.StudentBean;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JBtrans</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">	 * </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">	 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> StudentBean stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> StudentBean <span class="title">getStud</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStud</span><span class="params">(StudentBean stud)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.stud = stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//public StudentBean stud = new StudentBean();</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">/*System.out.println(stud.getName());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getSchool());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getPw());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getMail());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getId());*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="studentbean.java">3.3.3. StudentBean.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentBean</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> String name,id,school,pw,mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSchool</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> school;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(String school)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.school = school;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPw</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> pw;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPw</span><span class="params">(String pw)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.pw = pw;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMail</span><span class="params">(String mail)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.mail = mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="succjb和succservlet.jsp">3.4. succJB和succSERVLET.jsp</h2>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">jb:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号&lt;s:property value="stud.id"/&gt;，&lt;s:property value="stud.school"/&gt;学院的&lt;s:property value="stud.name"/&gt;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是&lt;s:property value="stud.mail"/&gt;，口令是&lt;s:property value="stud.pw"/&gt;。&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">servlet:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号$&#123;applicationScope.id&#125;，$&#123;applicationScope.school&#125;学院的$&#123;applicationScope.name&#125;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是$&#123;applicationScope.mail&#125;，口令是$&#123;applicationScope.pw&#125;。&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JSP</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>JSP</tag>
        <tag>Struts</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2中Action的几种Result</title>
    <url>/2019/11/02/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8DResult/</url>
    <content><![CDATA[<p>Struts中调用Action后应当获得一个Result。它告诉Struts接下来该干啥。它的属性可以是以下类型：</p>
<ul>
<li>dispatcher：请求转发，用于整合JSP的结果类型。</li>
<li>redirect：请求重定向。值为一个请求URL。</li>
<li>redirect-action：请求重定向到action。值为定义的action的name。</li>
<li>plaintext：用于显示某个页面的源代码。</li>
<li>还有好多种不会的……</li>
</ul>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="dispatcher">1. dispatcher</h1>
<p>如果在result标签中没有指定type，则默认是dispatcher类型。此时它指定一个视图资源——通常是JSP页面。</p>
<h1 id="redirect">2. redirect</h1>
<p>使用该type的action重定向到一个页面，另一个action或一个网址。</p>
<h1 id="redirect-action">3. redirect-action</h1>
<p>使用该type的action使用ActionMapperFactory提供的ActionMapper来重定向请求到另外一个action。与redirect相比，在使用上没有什么区别。</p>
<h1 id="测试">4. 测试</h1>
<h2 id="struts.xml中的packge">4.1. struts.xml中的packge</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"ActionTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2JSP"</span> <span class="attr">class</span>=<span class="string">"actionTest.JSPaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succ.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"failed"</span>&gt;</span>/fail.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2URL"</span> <span class="attr">class</span>=<span class="string">"actionTest.URLaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>http://www.bing.com<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2ACT"</span> <span class="attr">class</span>=<span class="string">"actionTest.ACTaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirectAction"</span>&gt;</span>action2URL<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="actiontest包">4.2. actionTest包</h2>
<h3 id="jspaction类">4.2.1. JSPaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSPaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> String text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(String text)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"JSPaction set text:"</span>+<span class="keyword">this</span>.text);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.text = text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"JSPaction get text:"</span>+text);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span>(<span class="string">"hello world"</span>.equals(<span class="keyword">this</span>.text))&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"JSPaction execute success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"JSPaction execute failed."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">return</span> <span class="string">"failed"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="urlaction类">4.2.2. URLaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"URLaction execute success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="actaction类">4.2.3. ACTaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ACTaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"ACTaction return success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="jsp页面">4.3. JSP页面</h2>
<h3 id="index">4.3.1. index</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2JSP"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"text"</span>&gt;</span>Please enter hello world<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call JSP action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2URL"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call URL action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2ACT"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call ACT action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<h3 id="succ和fail">4.3.2. succ和fail</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>success或者fial:get <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"text"</span>/&gt;</span> .<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr></table></figure>
<h1 id="带参数的重定向">5. 带参数的重定向</h1>
<h2 id="redirect-1">5.1. redirect&quot;</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>/login.do?userId=$&#123;userId &#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="redirect-action-1">5.2. redirect-action&quot;：</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect-action"</span>&gt;</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"actionName"</span>&gt;</span>login.do<span class="tag">&lt;/<span class="name">param</span>&gt;</span> 重定向action名</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"userId"</span>&gt;</span>userId<span class="tag">&lt;/<span class="name">param</span>&gt;</span>带的参数</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JSP</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>JSP</tag>
        <tag>Struts</tag>
      </tags>
  </entry>
  <entry>
    <title>自底向上语法分析</title>
    <url>/2019/10/28/%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="概述">概述</h1>
<p>基本思想：从输入符号串出发，在每一分析步对相应句型中的某个简单短语进行归约。如果最终能归约到识别符号，则该输入符号串是相应文法的句子，否则就不是。</p>
<p>基本问题：（假设句型分析过程中每个分析步都对最左的简单短语进行直接归约）如何找出句柄及把此句柄直接归约为哪个非终结符号。</p>
<p>基本思路： + 找出句柄u + 找出规则U∷=u + 把u直接归约成U</p>
<p>基本概念：</p>
<p>活前缀: <strong>右句型</strong>（最右推导可得到的句型）的<strong>前缀</strong>（如<code>abc</code>的前缀为<code>a</code>、<code>ab</code>、<code>abc</code>），而且其右端不会超过该句型的最右边<strong>句柄</strong>（句柄是和某个产生式右部匹配的字符串，可以把句柄归约成产生式左部的非终结符）的末端。</p>
<p>举例： 设有文法<span class="math inline">\(G[E]\)</span>：</p>
<p><span class="math display">\[
E\rightarrow E+E|E\times E
\]</span></p>
<p><span class="math inline">\(E+E\times E\)</span>归约成<span class="math inline">\(E+E\)</span>，句柄是<span class="math inline">\(E\times E\)</span>，那么它的活前缀就是<span class="math inline">\(E\)</span>、<span class="math inline">\(E+\)</span>、<span class="math inline">\(E+E\)</span>、<span class="math inline">\(E+E\times\)</span>、<span class="math inline">\(E+E\times E\)</span>。</p>
<p>这里又可以分为两种情况：</p>
<p>归态活前缀： 活前缀的尾部正好是句柄之尾，这时可以进行规约，规约之后又成为另一句型的活前缀。</p>
<p>非归态活前缀：句柄尚未形成，需继续移入若干符号之后才能形成句柄。</p>
<h1 id="自底向上优先分析">自底向上优先分析</h1>
<h1 id="lr分析">LR分析</h1>
<h2 id="概述-1">概述</h2>
<p>LR(K)分析器包括总控程序和分析表。</p>
<p>总控程序根据不同的分析表决定下一步的处理动作。不同文法的总控程序相同，只是分析表不同。</p>
<p>分析表是LR(K)分析技术的核心，根据具体文法按某种规则构造，由分析动作表和转换表构成。</p>
<p>分析动作表<code>ACTION[S,y]</code>指明当状态<code>S</code>与向前看符号串<code>y</code>相匹配时所应采取的动作。包括：移进、归约、接受、出错 。</p>
<p>状态转换表<code>GOTO[S,U]</code>指明当状态<code>S</code>与非终结符号<code>U</code>相匹配时所转换到的下一状态。</p>
<h2 id="分析过程">分析过程</h2>
<ol type="1">
<li>将初始状态S0与#压进分析栈</li>
<li>根据栈顶状态和当前输入符号查动作表进行以下工作
<ul>
<li>移进(Si)：当前输入符号进符号栈,新的状态进状态栈,继续扫描.</li>
<li>归约(rj)：按某规则归约,若规则的右部长度n,则符号栈顶和状态栈顶n个元素同时退栈. 把归约后的左部符号进符号栈,查状态转换表,新的状态进状态栈.</li>
<li>接受(acc): 分析成功,结束.</li>
<li>出错(空白): 报告出错信息.</li>
</ul></li>
<li>重复(1),直到接受或出错为止.</li>
</ol>
<h2 id="lr0分析">LR(0)分析</h2>
<p>设有文法<span class="math inline">\(G[S]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(1)S\rightarrow A\\
&amp;(2)S\rightarrow B\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow c\\
&amp;(5)B\rightarrow aBb\\
&amp;(6)B\rightarrow d\\
\end{aligned}
\]</span></p>
<p>为了确保起始符号不出现在产生式右部，并显式地表示EOF，增加一个起始符号S'，得到增广文法<span class="math inline">\(G&#39;[S&#39;]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(0)S&#39;\rightarrow S\#\\
&amp;(1)S\rightarrow A\\
&amp;(2)S\rightarrow B\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow c\\
&amp;(5)B\rightarrow aBb\\
&amp;(6)B\rightarrow d\\
\end{aligned}
\]</span></p>
<p>并引入一个“・”记号，这个记号之前的部分为已经读入（并且匹配）的部分，之后的部分为期望为读入的部分匹配的部分。为了便于识别，手写时将点记号写作“<span class="math inline">\(\Delta\)</span>”。</p>
<p>为了得到想要的两个表，需要先构建这个文法的自动机。</p>
<p>首先看起始状态，现在面对一个未知的串，期望其匹配G'，也就是未读入的部分匹配<span class="math inline">\(S \#\)</span>。将现在的状态称为<span class="math inline">\(S_0\)</span>，也就是：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>既然期待<span class="math inline">\(S\)</span>，那左部符号为<span class="math inline">\(S\)</span>的产生式也可以被期待。加进去，就变成：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>同理，都期待<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>了，那左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>现在假设对每个项目，真的都读到了它的后继符号，那将进入新的状态。给它们起名字：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td><span class="math inline">\(S_1\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td><span class="math inline">\(S_2\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td><span class="math inline">\(S_3\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td><span class="math inline">\(S_5\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td><span class="math inline">\(S_6\)</span></td>
</tr>
</tbody>
</table>
<p>对于两个后继为<span class="math inline">\(a\)</span>的，由于其都是“第一个读到<span class="math inline">\(a\)</span>”的情况，所以对应的下一个状态是相同的。</p>
<p>现在考虑<span class="math inline">\(S_1\)</span>。现在已经读入了<span class="math inline">\(S\)</span>（或者不能叫读入了，因为<span class="math inline">\(S\)</span>并不是一个终结符，不过意思是这么个意思……），所以<span class="math inline">\(\Delta\)</span>要放在<span class="math inline">\(S\)</span>后面，那就是后面没有没有待匹配的东西了，期望读入EOF：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_1\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow S\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p><span class="math inline">\(S_2\)</span>和<span class="math inline">\(S_3\)</span>同理：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td><span class="math inline">\(S\rightarrow A\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td><span class="math inline">\(S\rightarrow B\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>对<span class="math inline">\(S_4\)</span>，已经读入了<span class="math inline">\(a\)</span>，对于<span class="math inline">\(A\rightarrow aAb\)</span>，期望看到<span class="math inline">\(A\)</span>；对于<span class="math inline">\(B\rightarrow aBb\)</span>，期望看到<span class="math inline">\(B\)</span>，所以左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待——注意此时的<span class="math inline">\(\Delta\)</span>在右部式的最左，而不是<span class="math inline">\(a\)</span>后，因为这个期待的<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>还没被读取：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow a\Delta Ab\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td><span class="math inline">\(S_7\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow a\Delta Bb\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td><span class="math inline">\(S_8\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td><span class="math inline">\(S_5\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td><span class="math inline">\(S_6\)</span></td>
</tr>
</tbody>
</table>
<p>这里头两个项目时已经读入了<span class="math inline">\(a\)</span>，期待<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>，是新状态；之后的是已有的状态。</p>
<p>对于<span class="math inline">\(S_5\)</span>和<span class="math inline">\(S_6\)</span>，当读到期待的符号后后面就没了，期待EOF：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_5\)</span></td>
<td><span class="math inline">\(A\rightarrow c\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_6\)</span></td>
<td><span class="math inline">\(B\rightarrow d\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>对于<span class="math inline">\(S_7\)</span>和<span class="math inline">\(S_8\)</span>，当读到期待的符号后再后还有得读，又多了两种状态：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_7\)</span></td>
<td><span class="math inline">\(A\rightarrow aA\Delta b\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_9\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_8\)</span></td>
<td><span class="math inline">\(B\rightarrow aB\Delta b\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_{10}\)</span></td>
</tr>
</tbody>
</table>
<p>对于<span class="math inline">\(S_9\)</span>和<span class="math inline">\(S_10\)</span>，当读到期待的符号后期待EOF：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_9\)</span></td>
<td><span class="math inline">\(A\rightarrow aAb\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_10\)</span></td>
<td><span class="math inline">\(B\rightarrow aBb\Delta\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>这样所有的状态都分析完了。整合一下这个表，就是：</p>
<table>
<colgroup>
<col style="width: 2%" />
<col style="width: 73%" />
<col style="width: 8%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th>状态</th>
<th>项目集</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(\{\\S&#39; \rightarrow \Delta S\\S\rightarrow \Delta A\\S\rightarrow \Delta B\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td>
<td><span class="math inline">\(S\\A\\B\\a\\c\\a\\d\)</span></td>
<td><span class="math inline">\(S_1\\S_2\\S_3\\S_4\\S_5\\S_4\\S_6\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_1\)</span></td>
<td><span class="math inline">\(\{\\S&#39;\rightarrow S\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow A\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow B\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow a\Delta Ab\\B\rightarrow a\Delta Bb\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td>
<td><span class="math inline">\(A\\B\\a\\c\\a\\d\)</span></td>
<td><span class="math inline">\(S_7\\S_8\\S_4\\S_5\\S_4\\S_6\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_5\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow c\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_6\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow d\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_7\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aA\Delta b\\\}\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_9\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_8\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow aB\Delta b\\\}\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_10\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_9\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aAb\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_{10}\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow aBb\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td>END</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>这样就获得了这个文法的自动机。分析表与自动机是等价的，但更容易看出遇到啥时要干啥。下面构造分析表。</p>
<p>当位于状态<span class="math inline">\(S_0\)</span>时，下一位可能的符号有<span class="math inline">\(a\)</span>，<span class="math inline">\(b\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>和<span class="math inline">\(\#\)</span>。由自动机知此时下一位若为<span class="math inline">\(a\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>是符合规则的。因此若下一位是<span class="math inline">\(a\)</span>则移进（shift）一位（就是把<span class="math inline">\(S_0,a\)</span>入分析栈，读入的指针右移一位）并转换到到<span class="math inline">\(S_4\)</span>，<span class="math inline">\(c\)</span>则<span class="math inline">\(S_5\)</span>，<span class="math inline">\(d\)</span>则<span class="math inline">\(S_6\)</span>。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td>s4</td>
<td></td>
<td>s5</td>
<td>s6</td>
<td></td>
</tr>
</tbody>
</table>
<p>也就是从这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>变成这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S4      |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |a       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>当位于状态<span class="math inline">\(S_1\)</span>时，如果遇到<span class="math inline">\(\#\)</span>就是分析完了，称之为“acc(ept)”，其它情况不符合自动机。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_1\)</span></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>acc</td>
</tr>
</tbody>
</table>
<p>当位于状态<span class="math inline">\(S_2\)</span>时，栈中的内容是<span class="math inline">\(A\)</span>，虽然右面没有期待的符号了，但由于其左部符号不是起始符号，所以不能像<span class="math inline">\(S_1\)</span>那样直接acc。而是要首先规约（reduce）。</p>
<p>根据<span class="math inline">\(S_2\)</span>的规则，也就是规则1（因为凡是需要规约的都是后面没有的，也就是不存在一个状态对应多个项目的情况，所以只会对应一条规则），<span class="math inline">\(A\)</span>规约后将变成<span class="math inline">\(S\)</span>。所以在表里填上“r1”表示根据规则1规约，并弹出栈顶的<span class="math inline">\(S_0,A\)</span>，将<span class="math inline">\(S入栈\)</span>。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
</tr>
</tbody>
</table>
<p>也就是由：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S2      |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |A       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>变成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |S       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>那么问题来了，现在在状态<span class="math inline">\(Sn\)</span>并后面是<span class="math inline">\(S\)</span>，应该进入哪个状态呢？这个时候需要知道<span class="math inline">\(Sn\)</span>遇到S会进入哪个状态。因此在之前将状态与终结符联系起来的表的基础上，还要再搞一个将状态与非终结符联系起来的表，为表区分，前者称为“ACTION”表，后者称为“GOTO”表。这里要找哪个项目的符号栈顶也就是<span class="math inline">\(\Delta\)</span>前的符号是<span class="math inline">\(S\)</span>，这里只有<span class="math inline">\(S_1\)</span>。而只有<span class="math inline">\(S_0\)</span>后继符号是<span class="math inline">\(S\)</span>时后继状态是<span class="math inline">\(S_1\)</span>。所以这里栈里的状态只能是“<span class="math inline">\(S_0\)</span>后继符号是<span class="math inline">\(S\)</span>，递进到<span class="math inline">\(S_1\)</span>”，因此在GOTO表<span class="math inline">\(S_0\)</span>行<span class="math inline">\(S\)</span>列写上1。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(S\)</span></th>
<th><span class="math inline">\(A\)</span></th>
<th><span class="math inline">\(B\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td>1</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>操作后栈变成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S1      |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |S       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p><span class="math inline">\(S_3\)</span>同样是要规约，要从<span class="math inline">\(B\)</span>规约到<span class="math inline">\(S\)</span>也就是按规则2:</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_3\)</span></td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
</tr>
</tbody>
</table>
<p>其余同上。</p>
<p><span class="math inline">\(S_4\)</span>同<span class="math inline">\(S_0\)</span>。</p>
<p><span class="math inline">\(S_5\)</span>要规约，要从<span class="math inline">\(c\)</span>规约到<span class="math inline">\(A\)</span>也就是按规则4，以<span class="math inline">\(A\)</span>结尾的项目有<span class="math inline">\(S_2\)</span>和<span class="math inline">\(S_7\)</span>，前者由<span class="math inline">\(S_0\)</span>过来，后者由<span class="math inline">\(S_4\)</span>过来，故在GOTO表<span class="math inline">\(S_0\)</span>行<span class="math inline">\(A\)</span>列写上2，<span class="math inline">\(S_4\)</span>行<span class="math inline">\(A\)</span>列写上7。同理，在GOTO表<span class="math inline">\(S_0\)</span>行<span class="math inline">\(B\)</span>列写上3，<span class="math inline">\(S_4\)</span>行<span class="math inline">\(B\)</span>列写上9。</p>
<p>当然GOTO表用和ACTION表一样的方法也就是根据后继直接填也一样，更方便。</p>
<p>依此类推即可获得分析表。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>语法分析</tag>
      </tags>
  </entry>
  <entry>
    <title>在MyEclipse中使用Struts框架</title>
    <url>/2019/10/24/%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8Struts%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<p>CSDN——尤其是CSDN论坛，是好东西，也是坏东西。里面有许许多多大神分享有用的经验，但更多的是半吊子误人子弟，给出一些过时的、没用的建议。小白面对茫茫多的信息只能一边望洋兴叹，祈祷下一个看到的解决方案能稍微粘点边；一边对遇到的每行代码、每条命令追根究底，努力摆脱NOOB的身份。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="struts2的下载">1. Struts2的下载</h1>
<p>在<code>http://struts.apache.org/download.cgi</code>下载zip包<code>struts-版本-min-lib.zip</code>和<code>struts-版本-all.zip</code>。</p>
<p>前者包含的Struts2所必须的最少的包，后者包含了所有的包和例程。</p>
<h1 id="新建项目与导包">2. 新建项目与导包</h1>
<p>新建一个动态Web项目——有人说这里对动态Web项目的版本有要求需要2.5，实测没有——然后例如取名为“Struts2_HelloWorld”。先不急着完成，去下一步勾选“Generate Web.xml 啥啥啥”那一项和“Generate index.jsp 啥啥啥”（这个缺省是勾选的）。前者将在WEB-INF下创建一个Web.xml，Struts2请求需要先通过其中定义的过滤器。有人说这里需要将“WebRoot”修改为“WebContent”，实测两者均可，估计改其它名也没影响。</p>
<p>将前面下载的<code>struts-版本-min-lib.zip</code>中的包丢到<code>WEB-INF/lib/</code>，选中这些包（选中的是包而不是文件夹lib），右键构建路径。随后工作空间栏中项目根目录下将出现一个“Web应用程序库”，里面显示这些包。不要导入ALL版的lib，因为这些包有一些冲突，最简单的冲突原因例如如果两个包中有同样路径的类，此时某包先加载，则后加载的包中同名的类无法加载，导致一些函数无法找到等。网上很多人都介绍了最小需求包集合，但不少都与官方的有出入。</p>
<p>如果包导多了，由于已经建立了依赖所以无法直接删除。在工作目录视图中右击项目根文件夹，选构建路径，配置构建路径，这里显示了所有已导入的包，移除想删的——或者所有的也行，再移除整个Web应用程序库。然后可以在lib文件夹下删除包，再重新导入即可。</p>
<h1 id="编写action">3. 编写Action</h1>
<p>在<code>src/</code>新建一个类，例如包名为“helloWorld.action”，类名为“HelloWorld”。在自动生成的类中添加一个<code>execute()</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	System.out.println(<span class="string">"进入action。"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	System.out.println(<span class="string">"赋值text。"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="string">"Hello World !"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>这里HelloWorld类并不需要继承什么东西，有<code>execute()</code>并返回一个String即可。这里希望执行action后跳转到的页面能够根据action的情况决定显示什么内容，而不是一个写死的jsp，所以加一个get函数，命名规则和JavaBean一样，跳转过去后struts2的<code>s:property</code>标签可以通过函数名找到这个函数从中获取值。多加一个<code>println()</code>便于判断是否成功进入action。</p>
<h1 id="编写页面">4. 编写页面</h1>
<p>这个测试例程将有两个页面，一个是主页，一个是执行action后将要跳转到的页面。主页已经生成好了，为<code>body</code>添加一个按钮：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"hello"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Say Hello to the World!"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<p>用户按下这个按钮，将调用<code>hello.action</code>。</p>
<p>除此之外还需要在jsp第一行加上<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>，这句话指明了这个页面将使用struts2的标签，而且这些标签将在s之前。</p>
<p>另外再创建action将跳转到的页面，例如命名为helloworld.jsp，与index同样位于<code>WebRoot/</code>。</p>
<p>在body中添加<code>&lt;h1&gt;&lt;s:property value=&quot;text&quot;/&gt;&lt;/h1&gt;</code>，并在一开始添加<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>。</p>
<h1 id="添加配置文件">5. 添加配置文件</h1>
<h2 id="struts.xml">5.1. struts.xml</h2>
<p><code>struts.xml</code>将URL、action类和jsp页面相关联。它规定了当收到某个URL请求时应当调用哪个类，并根据这个类的返回值决定跳转至哪个jsp页面。</p>
<p>可以从之前下载的<code>struts-版本-all.zip</code>中的<code>apps/</code>找一个例程，在其<code>WEB-INF/classes/</code>会有一个该文件。将该文件复制到项目的<code>src/</code>——或者什么其它地方，这个似乎无所谓，无论这个文件在项目的哪里IDE都会在<code>WEB-INF/classes/</code>下创建一个对应的配置文件。建议复制例程的该文件而不是自己编写，因为这样更不容易出错。</p>
<p>复制过来后将<code>&lt;struts&gt;&lt;/struts&gt;</code>中的内容修改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.devMode"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"HelloWorldPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">class</span>=<span class="string">"helloWorld.action.HelloWorld"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/helloworld.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<p>设置<code>struts.devMode</code>为true可以输出更多日志信息，HelloWorldPkg中的hello这个action规定：当URL为<code>&lt;网站地址&gt;/hello</code>时，调用<code>helloWorld.action</code>包中的<code>HelloWorld</code>类，根据<code>execute()</code>的返回值决定跳转；当返回值为<code>&quot;success&quot;</code>时跳转至<code>/helloworld.jsp</code>。</p>
<h2 id="web.xml">5.2. Web.xml</h2>
<p>新建项目时已经自动生成了这个文件。将<code>&lt;Web-app&gt;&lt;/Web-app&gt;</code>内的内容修改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Struts2_HelloWorld<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr></table></figure>
<p>这一段内容指定index.jsp为welcome文件。然后配置了Struts2的过滤器来运行任何匹配模式/*的URL，即所有的URL都需要拦截后由Struts进行判断，如果程序决定要调用某个action，再由前面的<code>struts.xml</code>决定调用哪一个。这需要使用一个<code>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</code>类。注意在不同版本中这个类是不同的。</p>
<p>有帖子指出<code>welcome-file-list</code>必须放在最后。似乎这并不是必须的。</p>
<h2 id="log4j2.xml">5.3. log4j2.xml</h2>
<p>这个包似乎与日志生成有关，导入方法类似<code>struts.xml</code>，不导入的话会报错<code>ERROR StatusLogger Log4j2 could not find a logging implementation.</code>，但因为只是日志相关所以不影响使用。我导入了也会报错。可能是因为有依赖没搞好？先不管它。</p>
<h1 id="尾声">6. 尾声</h1>
<p>右击项目，运行方式-&gt;在服务器上运行即可。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>JSP</tag>
        <tag>Struts</tag>
      </tags>
  </entry>
  <entry>
    <title>编写一个注册页面并使用JS函数校验</title>
    <url>/2019/10/11/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%B9%B6%E4%BD%BF%E7%94%A8JS%E5%87%BD%E6%95%B0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<p>首先新建一个Web Project，在WebRoot下新建一个html、一个js和一个css文件。将html自动生成的添加css文件的那段注释改成能用的，再添加<code>&lt;script type=&quot;text/javascript&quot; src=&quot;./js.js&quot;&gt;&lt;/script&gt;</code>引入js文件。</p>
<p>body中就是一个表格，action是跳转，单击时希望使用js文件中的函数进行校验。</p>
<p>在表单中加上<code>οnsubmit=&quot;return false;&quot;</code>可以阻止表单提交。但是对于如下的代码<code>οnsubmit=&quot;submitTest();&quot;</code>，如果提交表单时submitTest()返回false，实际情况是表单正常提交。原因在于如果这样写，相当于：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    submitTest();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
<p>而我们希望得到这样的函数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    return submitTest();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"succ.jsp"</span> <span class="attr">name</span>=<span class="string">"form"</span> <span class="attr">onsubmit</span>=<span class="string">"return signIn();"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">""</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">caption</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkName();"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onfocus</span>=<span class="string">"clearName();"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">value</span>=<span class="string">"在此输入用户名"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_name"</span>&gt;</span>请输入用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkPw();"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_pw"</span>&gt;</span>密码由六个或以上字符组成<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkRepw();"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_repw"</span>&gt;</span>请确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex1"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex0"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"PE"</span>&gt;</span>体育</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"music"</span>&gt;</span>音乐</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"chinese"</span>&gt;</span>文学</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"other"</span>&gt;</span>其他</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>出生年月<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"year"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1990"</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1991"</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1992"</span>&gt;</span>1992<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1993"</span>&gt;</span>1993<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1994"</span>&gt;</span>1994<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1995"</span>&gt;</span>1995<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1996"</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1997"</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1998"</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1999"</span>&gt;</span>1999<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2000"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;/<span class="name">select</span>&gt;</span>年</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"month"</span> &gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"7"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"8"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"9"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"10"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"11"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"12"</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;/<span class="name">select</span>&gt;</span>月</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>个人简介<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"4"</span> <span class="attr">cols</span>=<span class="string">"25"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<p><code>required=&quot;required&quot;</code>可以要求该项为必填，否则无法提交。select中无法使用该属性，可以使用<code>&lt;option selected=&quot;selected&quot;&gt;2000&lt;/option&gt;</code>设定默认选择的项。</p>
<p>onblur和onfocus分别在对象失去和获得焦点时调用函数，可以实时地提醒用户一些信息。</p>
<p>比如将检查是否提交的函数分为几个小部分，在用户填写表单各小部分对应的对象获得和失去焦点时就调用，即时地给出提醒：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value==<span class="string">"在此输入用户名"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value = <span class="literal">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value !=<span class="string">"在此输入用户名"</span>&amp;&amp;<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"你好，"</span>+<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"请输入用户名"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value=<span class="string">"在此输入用户名"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)([0-9A-Za-z]*[\x00-\x2F\x3A-\x40\x5B-\xFF][0-9A-Za-z]*)&#123;2,&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"天呐这么复杂的密码你记得住？"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)[0-9A-Za-z]*[\x00-\x2f\x3A-\x40\x5B-\xFF][0-9A-Za-z]*$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这强度凑活吧……"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^[0-9A-Za-z]&#123;6,16&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这密码我一刻钟就能破解！"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"密码由六至十六个字符组成"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkRepw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> pw = <span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> repw = <span class="built_in">document</span>.getElementById(<span class="string">'repw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> tip_repw = <span class="built_in">document</span>.getElementById(<span class="string">'tip_repw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(pw.value == repw.value&amp;&amp;pw.value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"√"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(repw.value==<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"请确认密码"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"密码不一致"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">signIn</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkName())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请检查用户名！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkPw())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请检查密码！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkRepw())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请重新确认密码！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>HTML DOM 定义了多种查找元素的方法，如果需要查找文档中的一个特定的元素，最有效的方法是 getElementById()。在写html时给需要被查找的元素一个id属性，为它指定一个（在文档中）唯一的名称，然后就可以用该id查找想要的元素，该函数返回元素对象。<strong>注意要用.value获取它的“值”</strong>，因为返回的只是标签，而想要的“值”是标签里的东西。而修改的话就是修改<code>innerHTML</code>也就是标签里面的html语句，另外还有一个<code>innerText</code>类似前者，但是把内容都当文本理解（有点类似赋值给value？）。例如添加<code>&lt;h1&gt;test&lt;\h1&gt;</code>，前者显示h1级别的<code>test</code>，后者显示<code>&lt;h1&gt;test&lt;\h1&gt;</code>。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置JS&amp;jQuery开发环境</title>
    <url>/2019/10/11/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJS-jQuery%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>javaScript是一种脚本语言。可以以<code>&lt;script&gt; code &lt;/script&gt;</code>的形式混合在HTML页面中编写动态网页。之前的JSP环境直接就可以拿来写JS,但是并没有语法提示等,因此需要装个插件解决这个问题。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>MyEclipse 2017 Ci10</li>
<li>jquery-migrate-1.4.1.js</li>
<li>spket-1.6.23</li>
</ul>
<h1 id="安装spket">1. 安装spket</h1>
<p>spket是一个JS的IDE，但也可以作为eclipse或MyEclipse的插件使用。下载<code>https://spket.com/download.html</code>中的plugin版本得到一个zip，将其中两个文件夹直接与MyEclipse目录下同名文件夹合并即可。</p>
<p>为了让它可以对jQuery进行智能提示，还需为它指定jQuery的文件，在<code>https://jquery.com/download/</code>右击另存为uncompressed版本。网上说压缩过的min版本会各种报错。</p>
<h1 id="配置spket">2. 配置spket</h1>
<p>使用<code>.../&quot;MyEclipse 2017 CI&quot;/myeclipse -clean</code>启动MyEclipse。直接启动会报错，可能是因为插件缓存的缘故。注意因为MyEclipse 2017默认安装目录中间有空格所以要加引号。启动后在窗口-&gt;首选项-&gt;spket-&gt;JavaScript Profiles中new一个profile，比如取名为”jQuery“，点击Add Library，选择jQuery；再点击Add File，选择jQuery的<code>.js</code>。最后点Default。</p>
<p>在窗口-&gt;首选项–&gt;常规–&gt;编辑器–&gt;文件关联中将<code>*.js</code>的缺省编辑器设为“Spket JavaScript Editor”即可。</p>
<p>右键项目名称，点击Reload JavaScript Profile然后再打开JS文件（可能需要重启），应当会出现语法提示和智能补全。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>MyEclipse</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>《城市：天际线》中的有用模组</title>
    <url>/2019/10/07/%E3%80%8A%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%8B%E4%B8%AD%E7%9A%84%E6%9C%89%E7%94%A8%E6%A8%A1%E7%BB%84/</url>
    <content><![CDATA[<p>本文记录好用的《发际线》模组。尽管即使打开蓝灯也无法在steam客户端和游戏内访问创意工房，但在浏览器中的订阅也可以立即生效。因此可以在游戏中打开游戏内浏览器，再将地址复制至浏览器进行订阅操作。</p>
<p><strong>感谢所有模组的作者！</strong></p>
<h1 id="影响建造的模组">影响建造的模组</h1>
<h2 id="fine-road-anarchy和fine-road-tool">fine road anarchy和fine road tool</h2>
<p>前者屏蔽道路的碰撞判定。是极重要的前置模组。后者 强化了道路编辑模式下那个调整每次抬升高度的功能，点开后分为三行，除第一行保留原有功能外，第二行允许强制道路类型，第三行四个功能分别为取消道路角度限制、智能弯曲道路、自动吸附和道路与其它元素的无冲突（例如开启后升级道路不会挤没建筑）。</p>
<h2 id="move-it">Move It</h2>
<p>启用该模组后将在右下角推土机的左边新增一个十字箭头样的按钮，提供了移动已安放物品的功能。</p>
<p>点开后从左至右共九个按钮。</p>
<p>前两个按钮是导入与导出，可以导入与导出当前选中的元素。导出似乎与主题相关，将导出的内容导入到不同主题的地图时，不兼容的建筑不会被导入（似乎是因为这个，有待继续测试，总之道路没问题，低密度住宅区没问题，会成为“历史性建筑”出现，太阳能发电站垃圾焚烧厂收费站电车站各种直升机中心没问题，而小学警局消防局等和商业区等都无法导入）。之后两个选项是地形跟随与辅助线，前者控制在移动部分类型元素如房屋时其高度是否跟随地形变化，后者开启时为道路等提供角度为90°的整倍时的吸附。</p>
<p>之后的四个选项提供点选择（可使用shift多选）、区域选择、复制和删除的功能。其中复制可以使用ctrl+c，并支持ctrl+z撤销，区域选择功能提供了大量完善的分类功能，且可使用类似Ps中吸管的类型选定工具。</p>
<p>最后一个上三角图标提供了大量有用功能。从下往上数第一个柱状图一样的图标，先选中一个建筑或道路节点等，再选中它，再选另一个元素，即可使前者与后者同高。选中一个元素后再点一下第二个长相与第一个类似的图标就可以使它的高度恢复贴地状态（注意，对高架等使用此功能会使路面和柱子全部贴地，但不影响通行）。选中一段路的所有点和段后再点一下第三个像线性拟合一样的图标后再点击某两个节点，则选中道路的角度将与两点连线与地面之夹角相同。选中一些建筑后点击第四个五边形图标或第五个闪电形图标再点击其中或另外的一建筑，可使所有被选中建筑朝向被点击建筑的方向，区别在于前者的旋转中心为各建筑中心，后者为整体的中心。选中后点击第六个图标则可打乱方向。选中一些元素后点击上数第一个图标再点一个线性元素可实现镜面复制。</p>
<p>另外贴合右侧边缘处还提供了两个视图。</p>
<h2 id="network-extentions-2">network extentions 2</h2>
<p>提供更多道路种类。例如公交车道与人行道。尤其人行道可做成低级道路避免车辆抄近道。</p>
<h2 id="ploppable-rico">Ploppable RICO</h2>
<p>RICO指的是住宅、商业等四个区那种会生长的建筑（Residential住宅、Industrial工业、Commerical商业、Office办公，首字母RICO）的一种创意工房版本。启用此模组后会在工具栏右侧出现一个新的左绿右黄下蓝的图标，在创意工房订阅了“RICO”之后可以从此处“噗通”出建筑。也可以从弹出的面板右上角的设置中添加游戏自带的建筑并设置其属性使之成为“RICO”，此操作重启后生效。</p>
<h2 id="plop-the-growables">Plop the Growables</h2>
<p>原本Find It只能放置“RICO”，该模组可让游戏自带的“Growables”可通过Find It放置。</p>
<h2 id="precision-engineering">Precision Engineering</h2>
<p>修路时按住shift显示更多参数。</p>
<h1 id="影响经营的模组">影响经营的模组</h1>
<h2 id="extra-landscaping-tools">extra landscaping tools</h2>
<p>在工具栏上预算图标右侧新增矿物和水体两个图标，可编辑矿物与水的分布。</p>
<h2 id="improved-public-transport-2">Improved Public Transport 2</h2>
<p>在查看公共交通面板时提供时速等信息。</p>
<h2 id="no-problem-notifications">No Problem Notifications</h2>
<p>作</p>
<h2 id="quay-anarchy">quay anarchy</h2>
<p>允许小河堤在任何地方建造。小河堤平整坡面很有用也很好看。</p>
<h2 id="prop-tree-anarchy">Prop &amp; Tree Anarchy</h2>
<p>作</p>
<h2 id="prop-line-tool-plt-valpha">Prop Line Tool [PLT] (vAlpha)</h2>
<p>作 摆放prop时可使用类似修路的工具进行线性摆放。</p>
<h2 id="prop-precision">Prop Precision</h2>
<p>变大变小</p>
<h2 id="procedural-objects">Procedural Objects</h2>
<p>变大变小</p>
<h2 id="prop-scaling-0.3-experimental-alpha">Prop Scaling 0.3 [Experimental ALPHA]</h2>
<p>允许贴在表面</p>
<h1 id="影响城展的模组">影响城展的模组</h1>
<h2 id="adaptive-prop-visibility-distance">Adaptive Prop Visibility Distance</h2>
<p>允许调整元素距离多远可见。</p>
<h2 id="dynamic-resolution-fixed-for-1.9">Dynamic Resolution (Fixed for 1.9!)</h2>
<p>动态抗拒齿。</p>
<h2 id="first-person-auto-walking">first person auto walking</h2>
<p>提供第一人称行走功能。</p>
<h2 id="lod-toggler-deprecated">LOD Toggler (deprecated)</h2>
<p>允许手动调整细节程度。封面图是“READY TO MELT YOUR GPU？”。</p>
<h1 id="影响外观的模组">影响外观的模组</h1>
<h2 id="network-skins">network skins</h2>
<p>提供道路皮肤。在道路编辑模式下会在右下角出现小窗口用以选择。</p>
<h2 id="road-options-road-colors-changer-和-painter">Road Options (Road Colors Changer ++) 和 Painter</h2>
<h2 id="relight">Relight</h2>
<p>作显示设置中“色彩矫正覆盖”中提供一些滤镜。</p>
<h2 id="theme-mixer">Theme Mixer</h2>
<p>在该模组的选项中可以修改每种元素使用那个主题的样式，只支持创意工房的主题。</p>
<h2 id="surface-painter">Surface Painter</h2>
<p>在工具栏右侧增加一个“地表工具”图标，允许涂画地表。譬如建筑之间的缝隙原本是草坪，就可以用它涂成水泥，变得更工业风，非常有用。</p>
<h1 id="方便操作的模组">方便操作的模组</h1>
<h2 id="loading-screen-mod">Loading Screen Mod</h2>
<p>加载时显示加载信息。可提供缺失资产的信息，可禁止部分资产的加载。</p>
<h2 id="automatic-bulldoze-v2">Automatic Bulldoze v2</h2>
<p>建筑废弃后自动拆除。</p>
<h2 id="find-it">Find It!</h2>
<p>在工具栏右侧提供一个放大镜图标用于搜索资产。</p>
<h2 id="more-beautification">More Beautification</h2>
<p>为铲子那个图标提供更多分栏。</p>
<h2 id="advanced-toolbar">Advanced Toolbar</h2>
<p>在左下方问号图标旁提供一个加号图标，可将下方道具栏展开后的状态由显示一行提升为三行。</p>
]]></content>
      <categories>
        <category>丧志</category>
        <category>城市：天际线</category>
      </categories>
      <tags>
        <tag>城市：天际线</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux因显卡驱动无法进入图形界面之处理方法</title>
    <url>/2019/09/30/Manjaro-Linux%E5%9B%A0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8B%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>因尝试更换显卡驱动为nVIDIA 430xx导致重启后无法进入图形界面，只是黑屏并在屏幕左上角显示一个光标。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Manjaro Linux 18.1.0</li>
<li>video-hybrid-intel-nvidia-430xx-bumblebee VERSION 2019.08.24</li>
</ul>
<h1 id="进入tty界面">1. 进入tty界面</h1>
<p>tty，源于Teletypes，原指电传打字机，对于现在的电脑来讲可以叫终端。可以使用<code>w</code>查看当前使用的终端。在使用GNOME+GDM的manjaro下，共有6个tty。登录界面在tty1运行，登录成功后进入在tty2运行的图形界面（登录界面仍保持在tty1运行）。其余界面为文本界面。现在的问题在于由于显卡驱动问题无法进入tty2，因此只需在文字界面下解决驱动问题即可。</p>
<p>使用<code>ctrl+alt+Fx</code>可以切换到ttyx，现在切换到tty3，输入用户名，回车，密码，回车，即可进入tty3。</p>
<h1 id="修改语言配置">2. 修改语言配置</h1>
<p>tty3-6不能支持中文，而配置的语言是中文的，因此凡是中文会显示为方块。其实在输命令的时候没太大影响，但后面连Wifi的界面全是中文，所以要改成英文。</p>
<p>使用export命令可以修改语言，且仅对当次进入终端有效。</p>
<blockquote>
<p>Linux export 命令用于设置或显示环境变量。</p>
<p>在 shell 中执行程序时，shell 会提供一组环境变量。export 可新增，修改或删除环境变量，供后续执行的程序使用。export 的效力仅限于该次登陆操作。</p>
</blockquote>
<p>通过<code>export -p</code>可以查看当前的环境变量，有关语言的环境变量（也就是locale，也可以直接用<code>locale</code>查看，根据计算机用户所使用的语言、所在国家或地区以及当地的文化传统所定义的一个软件运行时的语言环境。locale的命名规则为<语言>_<地区>.<字符集编码>，如zh_CN.UTF-8，zh代表中文，CN代表大陆地区，UTF-8表示字符集）默认都是“zh_CN.UTF-8”，执行<code>export xxx=xxx</code>可以修改变量的值。</p>
<p>印象中当时是使用<code>export LC_ALL=en_US.UTF-8</code>和<code>export LANG=en_US.UTF-8</code>。这堆LC_xxx有一堆优先级规则，显而易见LC_ALL是老大。它是一个宏，如果该值设置了，则该值会覆盖所有LC_xxx的设置值。注意，LANG的值不受该宏影响。</p>
<p>【其它有关内容】</p>
<ul>
<li><code>locale -a</code>：查看本机可选的配置。可通过诸如<code>sudo locale-gen &quot;zh_CN.gbk&quot;</code>增加。</li>
<li>C和POSIX：默认配置，例如<code>export LC_ALL=C</code>。</li>
</ul>
<h1 id="连接wifi">3. 连接Wifi</h1>
<p>因为需要下载安装原本使用的驱动，所以先连Wifi。</p>
<p>一些Linux中连接Wlan专门有个界面，叫nmtui，即“Network Manager TextUI”，<code>nmtui</code>即可进入。</p>
<p>其中中间的三个选项，第一个是编辑保存的链接，第二个是进行连接。进去第二个等一会，扫描出来之后连上即可。</p>
<h1 id="更换驱动">4. 更换驱动</h1>
<p>manjaro提供了方便的驱动管理工具，叫mhwd，即“Manjaro Hardware Detection”，<code>mhwd</code>即可进入，<code>mhwd-tui</code>可进入TUI。在TUI中很方便地选择“Use nonfree graphics”就好了。更新引导<code>sudo mkinitcpio -P</code>即可。</p>
<h1 id="尾声">5. 尾声</h1>
<p>这个默认的闭源驱动是真的不错。</p>
<p>NVIDIA的Optimus（擎天柱）技术可让笔记本根据性能需要在英特尔集成显卡和NVIDIA独显之间自动切换（其实不是切换而是“是否开启独显”，显示一直都是由集显完成的，只是独立显卡按需渲染并传输给集成显卡显示功能），以达到节约能耗与平衡性能双需求，但此项技术仅仅支持Windows系统。</p>
<p>而默认的“video-hybrid-intel-nvidia-bumblebee”，也就是那个著名的把<code>rm -rf /usr/lib/nvidia-current/xorg/xorg</code>写成<code>rm -rf /usr /lib/nvidia-current/xorg/xorg</code>的软件，可以实现手动的切换。只需在命令前添加<code>optirun</code>即可指定该命令由独显执行。在Steam下，修改游戏属性中的高级启动选项为<code>optirun %command%</code>可指定游戏运行在独立显卡上。原本我的古墓丽影只能以720P全低特效运行，添加这一选项后可以1080P全最高特效丝般顺滑。可惜不知道为啥存档没能继承Windows上的……</p>
<p>不过Bumblebee不兼容Vulkan。可能可以通过“nvidia-xrun”解决，还未尝试。</p>
<p>最开始的时候在steam改高级选项后启动游戏，会闪一下steam的启动界面然后毫无反应。后来解决了，但是忘了怎么弄的了……果然好记性不如双飞燕……可能是一开始没有进行设置：</p>
<blockquote>
<p>In order to use Bumblebee, it is necessary to add your regular user to the bumblebee group:</p>
</blockquote>
<p>需要<code>gpasswd -a &lt;user&gt; bumblebee</code>。</p>
<p>使用<code>bumblebeed --version</code>查看bumblebee版本，<code>optirun nvidia-settings -c :8</code>以设置N卡，<code>optirun glxgears -info</code>进行测试，<code>vblank_mode=0 glxgears</code>查看关闭垂直同步后的帧数。</p>
<h1 id="后记">后记</h1>
<p>安装Manjaro后的第一次更新之后，再次出现了无法使用<code>optirun %command%</code>命令进入游戏的情况。从终端通过<code>optirun steam</code>进入游戏，则将以集显进入；通过<code>primusrun steam</code>进入，则报错“glXChooseVisual failed”。</p>
<p>尝试卸载显卡驱动重装，无效。尝试安装网上的驱动前置的东西<code>sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus</code>，无效。有说法认为报错原因是“libGL.so.1指向mesa和nvidia提供的模糊libGL”，因此删除这些（<code>sudo ldconfig -p | grep -i gl.so</code>中查看）指向mesa的.so即可，但我未找到指向mesa的.so。</p>
<p>最后的处理方案是<code>sudo systemctl disable bumblebeed.service</code>禁用了大黄蜂，安装了另一个管理软件<code>sudo pacman -S optimus-manager</code>并reboot后启用<code>systemctl enable optimus-manager.service</code>。该软件可<code>optimus-manager --switch nvidia</code>切换为N卡。但会注销，还是不如大黄蜂好用……</p>
<p>【第二天的更新】操，不能用，切完之后<code>optimus-manager --status</code>显示还是用的Intel，昨天断电了玩着卡还以为是断电的原因。似乎是因为GDM与之不兼容，还需要装兼容的版本。游戏啥的，戒了算了。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>Manjaro</tag>
        <tag>BumbleBee</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置MySQL并在MyEclipse中使用</title>
    <url>/2019/09/30/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEMySQL%E5%B9%B6%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="环境">0. 环境</h1>
<ul>
<li>MyEclipse 2017 ci10</li>
<li>Tomcat 9.0</li>
<li>JDK 8u221</li>
<li>JDBC 8.0.17</li>
</ul>
<h1 id="mysql安装">1. MySQL安装</h1>
<p>只需<code>sudo pacman -S mysql</code>便可以安装MySQL。装好后根据提示<code>sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</code>，注意此步需root权限，并会返回临时的用户名和密码，在输出的那一堆东西里找一下。随后可<code>sudo systemctl enable mysqld</code>开机自启、<code>sudo systemctl start mysqld</code>启动服务、<code>sudo systemctl status mysqld</code>查看状态。</p>
<p>使用刚刚给出的临时密码登录<code>mysql -uroot -p&lt;密码&gt;</code>后会提示可以<code>sudo mysql_secure_installation</code>，如果运行的话会执行以下安全设置：</p>
<ul>
<li>为root用户设置密码</li>
<li>删除匿名账号</li>
<li>取消root用户远程登录</li>
<li>删除test库和对test库的访问权限</li>
<li>刷新授权表使修改生效</li>
</ul>
<p>看心情设置一下。之后通过“添加/删除软件”安装“MySQL WorkBench”即可进行图形化的操作。</p>
<h1 id="jdbc下载">2. JDBC下载</h1>
<p><code>https://dev.mysql.com/downloads/connector/j/</code>下载<code>Platform Independent</code>版本，解压。因为需要与MyEclipse链接，为了方便，丢到家目录下。</p>
<h1 id="与myeclipse链接">3. 与MyEclipse链接</h1>
<p>在MyEclipse中点击<code>窗口-&gt;Perspective-&gt;打开透视图-&gt;Database Explorer</code>，在左侧“DB Broster”中空白处右击new一数据库，弹出“DataBase Driver”界面：</p>
<ul>
<li>Driver template：选择MySQL Connector/J</li>
<li>Driver name：编个名字</li>
<li>Connection URL：改为 jdbc:mysql://localhost:3306/<数据库名></li>
<li>User name ：数据库用户名，默认root</li>
<li>Password：访问密码</li>
<li>Add Jar：JDBC的jar包的路径</li>
<li>Driver classname：系统会自动匹配</li>
</ul>
<p>Test一下成功后点完成即可。此时“DB Broster”中会多出MySQL数据库，双击即可链接上。</p>
<h1 id="测试链接">4. 测试链接</h1>
<p>使用MySQL WorkBench新建一个Schema（注意在Collation下拉列表中选择数据库需要修改为的字符集），并新建一个Table（不知为啥新建table时如果改table名字会导致无法操作其它内容，只能先设置其它内容应用后再回头改名字），用于测试。</p>
<p>在MyEclipse中新建一个Java项目，在其中新建一个lib文件夹，把JDBC的<code>.jar</code>丢进去，在MyEclipse中右击这个包构建一下路径。此时可以在该项目“引用的库”列表中看到这个包。</p>
<p>再在<code>src/</code>新建一包，在其中新建一类。以包名为<code>testDB</code>、类名为<code>Test</code>、前面新建的table名为<code>new_table</code>、table中有<code>name</code>和<code>pw</code>两列为例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testDB;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"></span>&#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String <span class="keyword">package</span> testDB;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"></span>&#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String JDBC_DRIVER = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String DB_URL = <span class="string">"jdbc:mysql://localhost:3306/db0?useSSL=false&amp;serverTimezone=UTC"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"root"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String PASS = <span class="string">"235604"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">	</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		Statement stmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 注册 JDBC 驱动</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			Class.forName(JDBC_DRIVER);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 打开链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"连接数据库..."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = DriverManager.getConnection(DB_URL,USER,PASS);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 执行查询</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"实例化Statement对象..."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			stmt = conn.createStatement();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			String sql;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			sql = <span class="string">"SELECT name,pw FROM new_table"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			ResultSet rs = stmt.executeQuery(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 打印结果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">while</span>(rs.next())</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 通过字段检索</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				String name = rs.getString(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				String pw = rs.getString(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">					</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 输出数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"账户: "</span> + name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"\t"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"密码: "</span> + pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 完成后关闭</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			rs.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			stmt.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">catch</span>(SQLException se)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 处理 JDBC 错误</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			se.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 处理 Class.forName 错误</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			e.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 关闭资源</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">if</span>(stmt!=<span class="keyword">null</span>) stmt.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;<span class="keyword">catch</span>(SQLException se2)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 什么都不做</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;<span class="keyword">catch</span>(SQLException se)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				se.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"Goodbye!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>【注意】对旧版JDBC，<code>JDBC_DRIVER</code>与<code>DB_URL</code>两项与以上不同。与老版相比，这里使用的新的8.0版本将<code>com.mysql.jdbc.Driver</code>改为<code>com.mysql.cj.jdbc.Driver</code>（需要注意Tomcat也要用JDK8）；另外已不需要建立ssl连接，但需要设置CST时区。</p>
<p>若输出正确，则一切就绪。</p>
<h1 id="尾声">5. 尾声</h1>
<p>如需在Web开发中使用JDBC，需将<code>.jar</code>放一份到Tomcat的lib目录下，并重启。一定注意跑页面时选择Tomcat，不然连不上数据库。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置JSP开发环境</title>
    <url>/2019/09/26/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJSP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="环境">0. 环境</h1>
<ul>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 8u221</li>
<li>tomcat 9.0</li>
<li>Myeclipse 2017 ci10</li>
</ul>
<h1 id="安装jdk">1. 安装JDK</h1>
<p>从官网<code>https://www.oracle.com/technetwork/java/javase/downloads/index.html</code>下载JavaSE的tar.gz格式，完成后提取到随便什么地方，例如家目录下。</p>
<p>在<code>~/.bashrc</code>中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;home&#x2F;oiljhihai&#x2F;jdk1.8.0_221bin:$PATH</span></pre></td></tr><tr><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;home&#x2F;oiljhihai&#x2F;jdk1.8.0_221&#x2F;</span></pre></td></tr></table></figure>
<p>此时运行<code>java -version</code>可判断安装情况。</p>
<h1 id="安装myeclipse">2. 安装MyEclipse</h1>
<p>MyEclipse是集成了一些包的Eclipse，与后者不同，这是一个收费软件。</p>
<p>获取Myeclipse的<code>.run</code>文件、破解包和汉化包，进入<code>.run</code>文件目录打开终端，<code>chmod +x myeclipse-2017-ci-10-offline-installer-linux.run</code>增加权限，<code>./myeclipse-2017-ci-10-offline-installer-linux.run</code>运行程序安装。装好后取消勾选launch，不要打开。</p>
<p>打开破解包的<code>patch</code>，使用里面的文件替换掉MyEclipse安装目录下的plugins内的同名文件，再进入破解包另一个文件夹打开终端运行<code>java -jar cracker2017.jar</code>，注意该安装包只能运行在java8下，如果最开始安装的JDK是更新的版本，需要用同样的方法安装java8并修改PATH。进入破解软件界面后输入Usercode（任意字母或者数字），后面的下拉列表选择Blue，点击SystemId两次，点击Active，点击菜单栏-&gt;Tools-&gt;saveProperties。此时启动MyEclipse，在help-&gt;subscription information可见产品已激活。</p>
<p>直接使用汉化包中的文件夹合并MyEclipse安装目录中的同名文件夹并替换其中同名文件即可完成汉化。</p>
<p>在首选项中Maven项下关闭一个什么启动更新的项关掉它。</p>
<h1 id="安装tomcat并将之与myeclipse关联">3. 安装tomcat并将之与MyEclipse关联</h1>
<p>从官网<code>http://tomcat.apache.org/</code>下载tar.gz包并提取，例如提取到家目录，可在终端执行<code>bin</code>下的<code>startup.sh</code>和<code>shutdown.sh</code>开启和关闭，开启后通过访问<code>http://localhost:8080/</code>可以看到一个页面。</p>
<p>在首选项中服务器项下的运行时环境项下点击&quot;add&quot;的添加按钮，弹出选项，选择与下载的相同的Tomcat版本，&quot;Next&quot;，选择Tomcat的安装目录，并选择安装的Java环境，&quot;Finish&quot;，完成配置。</p>
<p>新建Web Project时注意一下选项中的Target Runtime是否已经自动配制好了。如果不是刚才配制的则需要点后面的<code>New Runtime</code>再添加一次。创建项目时记得在最后一个选项卡勾选<code>Generate Web.xml...</code>那一项。运行新建的Web Project，可以看到一个有一行文字的网页。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>Java</tag>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux主力机的安装与及基本环境配置</title>
    <url>/2019/09/23/Manjaro-Linux%E4%B8%BB%E5%8A%9B%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8F%8A%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="环境">环境</h1>
<p>本文时效性较强，许多配置方式会因软件的更新与迭代而发生变化。</p>
<p>戴尔Inspiron 15-7567笔记本，英特尔i7-7700HQ（集成HD630）+英伟达GTX1050Ti，三星970EVO500G（NVMe）。</p>
<p>使用32G闪迪酷刃U盘引导安装manjaro-GNOME-18.1.0-rc10-stable-x86_64，经测试兼容良好，触控板灵敏，所有功能键均可正常使用（第一次装的时候<code>Fx</code>键直接按是功能键，按<code>Fn</code>键是<code>Fx</code>，第二次装的时候按<code>Fx</code>直接就是<code>Fx</code>，按住<code>Fn</code>才是功能键，奇怪）。</p>
<h1 id="系统安装">系统安装</h1>
<h2 id="制作引导盘">制作引导盘</h2>
<p>在中科大镜像站<code>https://mirrors.ustc.edu.cn/manjaro-cd/</code>下载iso镜像（<code>manjaro|乐于简单</code>那个网站似乎是个人的……），再在<code>http://rufus.ie/</code>下载引导盘制作工具Rufus，分区类型<code>GPT</code>，目标系统类型<code>UEFI(非CSM)</code>，其余默认，点击开始。检测到ISOHybrid镜像后以DD镜像模式写入，否则系统无法识别。</p>
<p>应当使用尽可能新的系统镜像，这是由于Manjaro是滚动更新，新的补丁仅针对新的环境进行测试，老系统直接更新最新的内容的话很容易滚挂——基于同样的理由，装好系统后平时也应当保持最新。</p>
<h2 id="bios设置">BIOS设置</h2>
<p>开机闪DELL图标时狂按F12（不用按Fn），进入BIOS界面，选择<code>BIOS SETUP</code>进入图形界面进行设置，在出厂设置下修改<code>Secure Boot-&gt;Secure Boot Enable</code>为<code>Disabled</code>，否则会有一系列错误：<em>微软要求预装Windows的PC需要开启Secure Boot，此时操作系统启动过程中涉及到的无CA数字签名的软件比如Linux这种开源的无签名的系统就会被直接阻止</em>；修改<code>System Configuration-&gt;SATA Operation</code>为<code>AHCI</code>，否则系统将无法识别到NVMe的硬盘：<em>AHCI（Serial ATA Advanced Host Controller Interface，串行ATA高级主控接口/高级主机控制器接口）是以Intel为首的多家公司联合研发的接口标准，它允许存储驱动程序启用高级串行 ATA 功能，如本机命令队列和热插拔等</em>。</p>
<h2 id="系统安装-1">系统安装</h2>
<p>开机进BIOS界面，选择引导盘启动，进入grub界面，选择语言为中文，将光标移动至BOOT那一项上按E编辑启动设置，或进入那个空白的笔记本一样的选项，将<code>driver=free</code>改为（或直接添加，如果选择进入空白的笔记本一样的选项的话）<code>driver=intel xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</code>，否则会因默认的开源驱动nouveau与N卡冲突而卡死。按<code>ctrl+x</code>或<code>F12</code>即可启动。</p>
<p>启动后正常安装即可。</p>
<p>关于分区设置，选择默认的清空磁盘选项，如果选择自定义，应当在硬盘开始处设置1MiB空闲空间。安装完成后选择重启，在出现DELL图标后长按Esc键直至进入grub界面（网络上各路教程都说是按住Shift键进入，但经测试该机器下无效），按E进入编辑模式，在<code>quite</code>后添加<code>nouveau.modeset=0</code>，理由同上，按<code>ctrl+x</code>或<code>F12</code>即可启动。这一设置只影响当次启动，因此在配置好驱动前的每次启动都应做此设置。</p>
<h1 id="系统配置">系统配置</h1>
<h2 id="配置pacman">配置pacman</h2>
<p>Pacman是Arch Linux的包管理器。提供经过测试的完善支持的程序。应当尽可能使用pacman提供的程序，由社区维护的程序可能会出各种奇怪的问题。</p>
<p><code>sudo pacman-mirrors -i -c China -m rank</code>，随后会弹出一个图形界面，可在其中选择一些源添加。添加并更新<code>sudo pacman -Syy</code>后在国内也可以方便地下载包了。</p>
<p>pacman中的包通过GPG签名，想要安装一个包，则这个包必须通过检查。因此需要先为计算机安装和更新密钥以识别待安装的包：<code>sudo pacman -S archlinux-keyring</code>，<code>sudo pacman-key --refresh-keys</code>。重新加载<code>sudo pacman-key --init</code>、<code>sudo pacman-key --populate</code>并清除缓存<code>sudo pacman -Scc</code>后应当就没问题了。</p>
<p>此时可能出现仍无法进行验证的错误，将<code>/etc/pacman.conf</code>中的<code>SigLevel</code>项都设为<code>Never</code>即可，此选项决定对密钥的检查级别。记得用完改回来。</p>
<p>接下来（可以等省完系统啥的回来再说）配置额外的源：</p>
<p>archlinuxcn是由Arch Linux中国维护的提供具有中国特色的包的仓库。</p>
<p>在<code>/etc/pacman.conf</code>添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span></pre></td></tr><tr><td class="code"><pre><span class="line">SigLevel&#x3D;Optional TrustedOnly</span></pre></td></tr><tr><td class="code"><pre><span class="line">Server&#x3D;服务器地址</span></pre></td></tr></table></figure>
<p>以下地址供参考：</p>
<blockquote>
<p>CDN (ipv4, http, https) Global CDN (no nodes in mainland China)[archlinuxcn] Server= https://cdn.repo.archlinuxcn.org/$arch</p>
<p>浙江大学 (浙江杭州) (ipv4, ipv6, http, https) Added: 2017-06-05[archlinuxcn] Server= https://mirrors.zju.edu.cn/archlinuxcn/$arch</p>
<p>中国科学技术大学 (ipv4, ipv6, http, https)[archlinuxcn] Server= https://mirrors.ustc.edu.cn/archlinuxcn/$arch</p>
<p>清华大学 (ipv4, ipv6, http, https)[archlinuxcn] Server= https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</p>
<p>xTom (Hong Kong) (ipv4, ipv6, http, https) Added: 2017-09-18 xTom Hong Kong Mirror[archlinuxcn] Server= https://mirror.xtom.com.hk/archlinuxcn/$arch</p>
<p>Unique Studio (湖北武汉) (ipv4, http, https) Added: 2017-08-02[archlinuxcn] Server= https://mirrors.hustunique.com/archlinuxcn/$arch</p>
<p>上海科技大学 (上海) (ipv4, http, https) Added: 2016-04-07[archlinuxcn] Server= https://mirrors-wan.geekpie.org/archlinuxcn/$arch</p>
<p>中国科学院开源软件协会 (北京) (ipv4, http) Added: 2017-02-09[archlinuxcn] Server= http://mirrors.opencas.org/archlinuxcn/$arch</p>
<p>电子科技大学凝聚网络安全工作室 (ipv4, http) Added: 2016-05-28[archlinuxcn] Server= http://mirrors.cnssuestc.org/archlinuxcn/$arch</p>
<p>网易 (ipv4, http)[archlinuxcn] Server= http://mirrors.163.com/archlinux-cn/$arch</p>
<p>重庆大学 (ipv4, http)[archlinuxcn] Server= http://mirrors.cqu.edu.cn/archlinuxcn/$arch</p>
</blockquote>
<p>然后全面更新一下，再<code>sudo pacman-mirrors -g</code>更新源列表，更新密钥环<code>sudo pacman -S archlinuxcn-keyring</code>（可能需要多试几次）后即可使用。</p>
<p>不太建议使用其它的社区源。</p>
<p>不需要配置yaourt，它已经停止维护了。</p>
<h2 id="系统更新">系统更新</h2>
<p><code>sudo pacman-mirrors -g</code>更新源列表，这可以使pacman找到最新的仓库，更新系统前最好这么弄一下保证源最新；<code>sudo pacman -Syyu</code>刷新并更新系统（如果报<code>错误：同步所有数据库失败</code>，可<code>sudo pkill pacman</code>）。</p>
<h2 id="n卡驱动的安装">N卡驱动的安装</h2>
<p>在<code>Manjaro Setting Manager-&gt;Hardware Configuration</code>中选择<code>Auto Install Proprietary Driver</code>，等很久很久很久之后即可。</p>
<h1 id="常用应用安装">常用应用安装</h1>
<h2 id="输入法">输入法</h2>
<p>在linux中，输入法是依托于输入法框架的。主要有ibus和fcitx两个框架。不像搜狗输入法只能在fcitx上使用，RIME输入法两者皆可。这里使用fcitx上的RIME，尽管fcitx-rime并非由RIME官方维护。</p>
<p>首先安装fcitx：<code>sudo pacman -S fcitx-im</code>，该命令将安装fcitx所有必要的组件。另外，<code>sudo pacman -S fcitx-configtool</code>，这个包为fcitx的设置提供了图形界面。fcitx自带中文输入法，不过很难用。安装RIME：<code>sudo pacman -S fcitx-rime</code>。</p>
<p>接下来添加配置文件，指定在GTK或QT下使用fcitx输入。在<code>~/</code>下新建<code>.xprofile</code>，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE&#x3D;fcitx</span></pre></td></tr><tr><td class="code"><pre><span class="line">export QT_IM_MODULE&#x3D;fcitx</span></pre></td></tr><tr><td class="code"><pre><span class="line">export XMODIFIERS&#x3D;@im&#x3D;fcitx</span></pre></td></tr></table></figure>
<p>注意：文件为<code>~/.xprofile</code>，如果当前用户为root则类似<code>nano ~/.xprofile</code>的命令会把文件新建在<code>/root/</code>，这是不行的。</p>
<p>接下来重启即可，应当可以看到屏幕右上角出现了一个键盘样图标，点进去选择配置当前输入法，用<code>+</code>添加<code>中州韻</code>，用<code>-</code>删去其它输入法，重新部署之后就可以使用了。</p>
<p>与小狼毫不同，fcitx-rime的皮肤和相关设置由fcitx决定，不过从fcitx中配置也极为方便，不过我配置完后fcitx菜单中的<code>虚拟键盘/方案列表/输入法/皮肤</code>一栏的下拉菜单弹出后会立即收回无法选中，因为不影响使用就没管；另其外自带双拼配置文件（位于程序文件夹<code>/usr/share/rime-data</code>，若没有，从<code>https://github.com/rime/rime-double-pinyin</code>可下载），只需在用户配置文件夹<code>~/.config/fcitx/rime</code>（若为ibus，则为<code>~/.config/ibus/rime</code>）中新建一个<code>default.custom.yaml</code>，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># default.custom.yaml  </span></pre></td></tr><tr><td class="code"><pre><span class="line"># save it to:   </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   ~&#x2F;.config&#x2F;ibus&#x2F;rime  (linux)  </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   ~&#x2F;Library&#x2F;Rime       (macos)  </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   %APPDATA%\Rime       (windows)  </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">patch:  </span></pre></td></tr><tr><td class="code"><pre><span class="line">  schema_list:  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin          # 朙月拼音  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin_simp     # 朙月拼音 简化字模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin_tw       # 朙月拼音 臺灣正體模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: terra_pinyin         # 地球拼音 dì qiú pīn yīn  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: bopomofo             # 注音  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: jyutping             # 粵拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: cangjie5             # 倉頡五代  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: cangjie5_express     # 倉頡 快打模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: quick5               # 速成  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wubi86               # 五笔 86  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wubi_pinyin          # 五笔拼音混合輸入  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin        # 自然碼雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_mspy   # 微軟雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_abc    # 智能 ABC 雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_flypy  # 小鶴雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wugniu        # 吳語上海話（新派）  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wugniu_lopha  # 吳語上海話（老派）  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: sampheng      # 中古漢語三拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: zyenpheng     # 中古漢語全拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: ipa_xsampa    # X-SAMPA 國際音標  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: emoji         # emoji 表情</span></pre></td></tr></table></figure>
<p>保存后重新部署即可。</p>
<h2 id="tim">Tim</h2>
<p><code>sudo pacman -S deepin.com.qq.office</code>安装即可。这个过程同时安装了wine。也可以使用wine打开其它<code>.exe</code>。<code>sudo pacman -S winetricks</code>后即可方便地添加一些windows上的库，例如<code>winetricks xna40</code>安装mono等。</p>
<h2 id="百度云">百度云</h2>
<p><code>sudo pacman -S baidunetdisk</code>，需要多试几次才能登录上。</p>
<h2 id="网易云">网易云</h2>
<p>网易云客户端虽然是网易云和深度合作的官方客户端，但除了可以下载外体验上似乎与Web端相比没什么优势……平时不如用Web……</p>
<p>非要下载的话Web也不是不可以，以钢铁洪流为例，地址为<code>https://music.163.com/#/song?id=1394369908</code>，将<code>#/song</code>替换为<code>song/media/outer/url</code>即可右键下载。许多网站提供给一个歌曲id跳转到这一页面的服务，也不算麻烦。</p>
<h1 id="代码环境配置">代码环境配置</h1>
<h2 id="vscode">VSCode</h2>
<p><code>sudo pacman -S visual-studio-code-bin</code>，<code>ctrl++</code>调大界面，选项里把bar移到右边。</p>
<p>在Explorer中打开文件夹，比如在家目录新建<code>Workspaces/VSCode</code>作为工作空间。</p>
<p>扩展中安装中文语言包。</p>
<p>设置里强制显示空格和制表符。</p>
<h3 id="markdown">Markdown</h3>
<p>安装三个插件即可：</p>
<ul>
<li>Markdown All in One</li>
<li>Markdown Preview Github Styling</li>
<li>Markdown TOC</li>
</ul>
<h3 id="c">C++</h3>
<h4 id="测试gcc环境和安装gdb">测试GCC环境和安装GDB</h4>
<p><strong>GCC</strong>即the GNU Compiler Collection，是GNU的一个编译器集合，包含多种编译器及相关工具。其中的gcc是GNU的C编译器(GNU C Compiler)；g++是GNU的C++编译器(GNU C++ Compiler)。也是GNU Compiler Collection的一部分，<code>sudo pacman -S gcc</code>即可。</p>
<p>使用<code>gcc -v</code>确认环境已正确配置。可以<code>nano HelloWorld.cpp</code>尝试写一个HelloWorld，通过<code>g++ HelloWorld.cpp</code>编译。编译完成后会生成一个<code>a.out</code>文档，<code>~/a.out</code>运行它。</p>
<p>除此之外，还需要一个GNU DeBugger即GDB。只需<code>sudo pacman -S gdb</code>即可安装。</p>
<h4 id="在vscode上运行程序">在VSCode上运行程序</h4>
<p>与在Windows上只需安装一个紫色程序即可高喊<strong>M$天下第一</strong>实现一切功能不同，在linux下，开发过程中需要使用一系列独立工具配合完成开发。VSCode只是一个文档编辑器，需要进行设置以告诉它怎么和其它工具（也就是前面说的几个）配合工作。</p>
<p>首先安装“C/C++”插件，这可以使它对<code>.c</code>和<code>.cpp</code>文件执行恰当的操作。除此之外，还有如下有用的插件应当安装：</p>
<ul>
<li>Code Runner：编译运行单个文件必备</li>
<li>Bracket Pair Colorizer：大括号变成彩虹色</li>
<li>RainBow Brackets：小括号变成彩虹色</li>
<li>Include Autocomplete：自动补全头文件</li>
<li>C++ Intellisense：不知道是干啥的，但是VSCode推荐了反正</li>
</ul>
<p>完成之后打开之前的HelloWorld，右键可以运行。但是不能调试，并且头文件那里有可能会标红说找不到。</p>
<p>Code Runner默认使用的是“输出”，这个是只读的，设置中勾上“Run In Terminal”即可在终端中进行<code>cin</code>等操作。</p>
<h4 id="在vscode上调试程序">在VSCode上调试程序</h4>
<p>在调试选项卡中单击“没有配置”下拉菜单，添加配置，选择<code>C++(GDB/LLDB)</code>。此时会在当前工作区下新建一个<code>launch.json</code>文件并让你设置。另外接下来使用中还会有其它两个需要配置的文件生成。这里不等它们自动生成直接自己手动添加，效果似乎是一样的。</p>
<h5 id="c_cpp_properties.json">c_cpp_properties.json</h5>
<p><code>gcc -v -E -x c++ -</code>搜索includePath，将结果填在下面的&quot;includePath&quot;处，注意添加<code>/*</code>和引号，中间用逗号分隔：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"configurations"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"name"</span>: <span class="string">"g++"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"intelliSenseMode"</span>: <span class="string">"gcc-x64"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"includePath"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/local/include/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include-fixed/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/include/*"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"defines"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"browse"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"path"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"$&#123;workspaceFolder&#125;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				],</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"limitSymbolsToIncludedHeaders"</span>: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"databaseFilename"</span>: <span class="string">""</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cStandard"</span>: <span class="string">"c11"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cppStandard"</span>: <span class="string">"c++17"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"compilerPath"</span>: <span class="string">"/usr/bin/gcc"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	],</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="number">4</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>这样就解决了标红的问题。</p>
<h5 id="launch.json">launch.json：</h5>
<p>此文件给出调试时的任务。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="string">"0.2.0"</span>, <span class="comment">//2019</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"configurations"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//配置名称，将会在启动配置的下拉菜单中显示</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"name"</span>: <span class="string">"(gdb) Launch"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//配置类型，这里只能为cppdbg</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//请求配置类型，可以为launch（启动）或attach（附加）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"request"</span>: <span class="string">"launch"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//将要进行调试的程序也就是前面task生成的那哥们的路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"program"</span>: <span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//程序调试时传递给程序的命令行参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"args"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//设为true时程序将暂停在程序入口处</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//下面俩不理解</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cwd"</span>: <span class="string">"$&#123;fileDirname&#125;"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"environment"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//调试时是否显示控制台窗口</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"externalConsole"</span>: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//miDebugger的配置，不太懂</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"miDebuggerPath"</span>: <span class="string">"/usr/bin/gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//调试会话开始前执行的任务，要与TASK的名字对应</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"preLaunchTask"</span>: <span class="string">"Build"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//不知道是干啥的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"setupCommands"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h5 id="tasks.json">tasks.json：</h5>
<p>此文件指定调试前执行的任务。</p>
<p>注意在以下文件中网上文章常用的路径是诸如<code>${workspaceFolder}</code>（比较新）或<code>${workspaceRoot}</code>（比较旧）。这会使编译和调试时在工作目录下生成和调试文件。为了方便在工作目录下使用子文件夹（个人偏好），此处均使用<code>${fileDirname}</code>。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"tasks"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//任务的名字</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"label"</span>: <span class="string">"Build"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//该任务要执行的命令</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"command"</span>: <span class="string">"g++"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//参数们，执行时每个之间会用空格空开</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"args"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"-g"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"$&#123;file&#125;"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">//编译$&#123;file&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"-o"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">//生成一个位于$&#123;fileDirname&#125;的$&#123;fileBasenameNoExtension&#125;.exe</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//下面的看不懂了先不管吧</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"problemMatcher"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"owner"</span>: <span class="string">"cpp"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"fileLocation"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"relative"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"$&#123;fileDirname&#125;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				],</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"pattern"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"regexp"</span>: <span class="string">"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"file"</span>: <span class="number">1</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"line"</span>: <span class="number">2</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"column"</span>: <span class="number">3</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"severity"</span>: <span class="number">4</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"message"</span>: <span class="number">5</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>至此可以使用VSCode调试C++了。实际调试时如果使用单步调试，遇到<code>cout</code>等时会报<code>/build/gcc/src/gcc-build/x86_64-unknown-linux-gnu/libstdc++-v3/include/bits/ostream.tcc: No such file or directory.</code>。必应了一夜都没找到解决方法，结果谷歌了一下第二条结果就可完美解决：</p>
<blockquote>
<p>This happens because the ostream source file cannot be found.</p>
<p>You can strip the libstdc++ library:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo strip &#x2F;usr&#x2F;lib&#x2F;libstdc++.so.6 </span></pre></td></tr></table></figure>
<p>And then gdb will not try to open the source file and the error will not appear anymore.</p>
<p>You can switch back to the unstripped version by reinstalling it with:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -S gcc-libs </span></pre></td></tr></table></figure>
</blockquote>
<p>注意：此操作会导致所有程序退出，并且操作后需要重启，需要先保存并关闭所有其它内容！</p>
<h4 id="多文件的编译">多文件的编译</h4>
<p>通常会将头文件分为两个文件，分别用来写实现和声明。例如对于如下的文件结构：</p>
<ul>
<li>某文件夹
<ul>
<li>main.cpp</li>
<li>header.hpp</li>
<li>header.cpp</li>
</ul></li>
</ul>
<p>主程序是<code>main.cpp</code>，<code>header.hpp</code>是一个头文件，但里面的类只是做了声明，具体的实现在<code>header.cpp</code>中。这个时候使用上面的配置就不管用了，因为在这个工程中两个<code>.cpp</code>都需要被编译，而上面的配置（无论是code-runner还是调试）只编译了<code>main.cpp</code>。</p>
<p>对于code-runner，打开VSCode的<code>settings.json</code>（不是<code>.vscode</code>下的那个针对Workspace的），添加一项<code>&quot;code-runner.executorMap&quot;:{}</code>，不出意外的话此时会自动填充好默认的各语言的配置文件。将&quot;cpp&quot;一项改为<code>&quot;cd $dir &amp;&amp; g++ *.cpp -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,</code>，也就是把具体的文件替换为了<code>*.cpp</code>即编译所有<code>.cpp</code>即可。</p>
<p>对于调试，将<code>tasks.json</code>中的<code>&quot;${file}&quot;</code>改为<code>&quot;*.cpp&quot;</code>会提示找不到文件，似乎是因为这里只能使用绝对目录，这特么就很尴尬了，尝试了加一个<code>cd</code>任务先进入文件夹再用<code>*.cpp</code>等很多方法研究了一晚上没找到合适的修改方法，暂时想调试这类工程只能手动在<code>tasks.json</code>中添加除主文件外的其它文件的绝对路径。</p>
<h4 id="后记">后记</h4>
<p>在第一次升级系统后执行格式化文档报错。查看C/C++扩展的输出发现报错为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Formatting failed:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;oiljhihai&#x2F;.vscode&#x2F;extensions&#x2F;ms-vscode.cpptools-0.26.0&#x2F;bin&#x2F;..&#x2F;LLVM&#x2F;bin&#x2F;clang-format -style&#x3D;&#123; BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 &#125; -fallback-style&#x3D;LLVM -sort-includes&#x3D;0 -assume-filename&#x3D;&#x2F;home&#x2F;oiljhihai&#x2F;Workspaces&#x2F;VSCode&#x2F;HDU5396.cpp</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;oiljhihai&#x2F;.vscode&#x2F;extensions&#x2F;ms-vscode.cpptools-0.26.0&#x2F;bin&#x2F;..&#x2F;LLVM&#x2F;bin&#x2F;clang-format: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory</span></pre></td></tr></table></figure>
<p>可以看出是因为没找到<code>libinfo.so.5</code>。查了一下，这个东西是一个叫“ncurses”的包里的东西。<code>pacman -Ss</code>一下，大概是这次升级将ncurses5升级到了6，所以就找不到了。</p>
<p><code>pacman -Ss</code>中有两个跟nurses5有关的，先装了第一个看起来像是32位版的<code>sudo pacman -S lib32-ncurses5-compat-libs</code>，没什么用；又试了第二个<code>sudo pacman -S ncurses5-compat-libs</code>，问题解决。</p>
<h3 id="python">Python</h3>
<h4 id="安装插件">安装插件</h4>
<ul>
<li>Python</li>
<li>Python-autopep8</li>
</ul>
<p>再结合之前已经装好的Code Runner，就可以运行py程序了。</p>
<p>运行过程中VSCode会提示要装其它什么东西，装就行了，可能网不好会失败几次。</p>
<p>右键格式化，提示装些东西，选autopep8比较好用。</p>
<h4 id="安装anaconada">安装Anaconada</h4>
<p>在<code>https://repo.continuum.io/archive/</code>下载<code>.sh</code>文件，在文件目录<code>bash xxxx.sh</code>。安装没问题的话<code>which python</code>可以得到路径。由于路径被配置在了<code>~/.bashrc</code>，需要<code>source ~/.bashrc</code>一下。</p>
<p>注意下载Anaconda3，一开始下成了2之后还有点小麻烦……由于是先装了2，再装了3，3的路径就没添加上，所以卸掉2后按升级的方法重装了3：<code>bash xxxx.sh -u</code>；卸载的方法是删掉安装文件夹并删掉bashrc中自动生成的那一段信息。</p>
<p>在VSCode中打开一个<code>.py</code>，下方显示文件类型的地方点一下，选配置，在json中添加Anaconda的路径和其它设置选项：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"python.pythonPath": "&lt;which python的结果，类似/home/oiljhihai/anaconda3/bin/python，系统自带的py位于/user/bin/python&gt;",</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.autoComplete.extraPaths": [</span></pre></td></tr><tr><td class="code"><pre><span class="line">       <span class="string">"&lt;应该差不多是形如~/anaconda3/lib/python3.7/site-packages，找一下这个文件夹&gt;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   ],</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.linting.flake8Enabled": false,</span></pre></td></tr><tr><td class="code"><pre><span class="line">"python.formatting.provider": "autopep8",</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//禁用自动换行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.formatting.autopep8Args": [</span></pre></td></tr><tr><td class="code"><pre><span class="line">       "--max-line-length=200",</span></pre></td></tr><tr><td class="code"><pre><span class="line">   ],</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.unittestEnabled": true,</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.pytestEnabled": true,</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.nosetestsEnabled": false,</span></pre></td></tr></table></figure>
<h4 id="安装opencv">安装OpenCV</h4>
<p>在终端进入Python，运行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pip._internal</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(pip._internal.pep425tags.get_supported())</span></pre></td></tr></table></figure>
<p>可以查看当前py版本所支持的包。在<code>https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv</code>或清华镜像<code>https://pypi.tuna.tsinghua.edu.cn/simple/opencv-python/</code>找到符合条件的包，丢到前面的<code>&quot;python.autoComplete.extraPaths&quot;:</code>填的目录下直接<code>pip install opencv_python-xxxxxx.whl</code>即可。</p>
<p>以下不用看，把opencv版本搞错了。</p>
<p><del><code>conda install --channel https://conda.anaconda.org/menpo opencv3</code>即可安装，但过程中报错“Unsatisfiable Error”。大体意思是版本不对应。可以根据详细的报错信息判断出目前的Python是3.7，而openCV只支持到3.6。解决办法是安装3.6的环境<code>conda create -n python3.6 -c menpo configparser</code>。</del></p>
<p><del>安装完毕后电脑上同时有python3.7和3.6，其中3.7位于前面说的位置，3.6位于<code>~/anaconda3/envs/python3.6/bin/python</code>，bashrc只记录了3.7的路径。于是通过<code>conda activate python3.6</code>进入3.6的环境，再次安装即可。安装完毕后<code>python</code>进入写python代码模式，<code>import cv2</code>不报错就是装好了。</del></p>
<p><del><code>conda deactivate</code>退出python3.6。</del></p>
<p><del>进入VSCode，此时VSCode还在用3.7的路径，所以不能写openCV。用3.6的路径替换一下就OK了。这时运行<code>.py</code>还是先在终端默认的3.7运行，报错后VSCode会自动根据设定的路径<code>conda activate python3.6</code>。</del></p>
<p>通过：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span></pre></td></tr><tr><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'~/Workspaces/VSCode/test/test.jpeg'</span>,cv2.IMREAD_COLOR)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">'image'</span>,img)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.waitKey(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.destroyAllWindows()</span></pre></td></tr></table></figure>
<p>测试。然而如果用相对路径会报错“OpenCV Error: Assertion failed (size.width&gt;0 &amp;&amp; size.height&gt;0) in imshow”，没查到为啥（另外网上说中文路径、图片不在工程文件夹内都会报错。这也太WEAK了吧……）。但是这样的话目录啥的变了直接凉凉啊，研究半天，这里可以用路径获取+格式化输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line">path=os.path.dirname(os.path.abspath(__file__))</span></pre></td></tr><tr><td class="code"><pre><span class="line">img0=cv2.imread(<span class="string">r'%s/mipha.jpg'</span>%path)</span></pre></td></tr></table></figure>
<h2 id="hexogithubpages博客配置">Hexo+GithubPages博客配置</h2>
<h3 id="hexo基本环境的配置">Hexo基本环境的配置</h3>
<p>hexo依赖于git和node.js。</p>
<p>manjaro自带git，可<code>git</code>查看详情。</p>
<p>hexo官方建议使用node.js的管理工具nvm安装node.js（nvm是管理node.js的版本的工具，npm是node.js管理它的包的工具）。尝试了官方<code>https://github.com/nvm-sh/nvm</code>给出的<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v.xx.xx.xx/install.sh | bash</code>（xx为当前版本号）命令，访问会被拒绝。经测试可用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; <span class="built_in">cd</span> ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</span></pre></td></tr></table></figure>
<p>命令安装，可以看出这里是把它装到了<sub>/.nvm下。完成后在<code>~/.bash_profile</code></sub>~【更新：<code>~/.bashrc</code>下（否则重启终端后需要<code>source ~/.bash_profile</code>，不然会提示没有<code>npm</code>这个命令。官方教程说<code>~/.bashrc</code>, <code>~/.zshrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>都可以】中添加环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span></pre></td></tr></table></figure>
<p>注意地址与安装地址相匹配。最后一行是淘宝镜像源，根据需求添加，也可在调用<code>npm</code>时<code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install node</code>。保存后<code>source ~/.bash_profile</code>即可使用<code>nvm</code>和<code>node</code>命令。</p>
<p>然后使用NVM安装node.js，只需<code>nvm install node</code>，这样<code>npm</code>也可以使用了。</p>
<p>进行一下设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> user 0</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> unsafe-perm <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></pre></td></tr></table></figure>
<p>不设置前两个的话会报Permission denied，进度条卡在最开始不动，最后一个是镜像源。至此可以使用<code>npm</code>命令下载node包。</p>
<h3 id="hexo的安装与初始化">Hexo的安装与初始化</h3>
<p><code>npm install -g hexo-cli</code>，可使用<code>hexo -v</code>查看安装结果。</p>
<p>从github上下载网页的代码<code>hexo init &lt;folder&gt;</code>后在<code>&lt;folder&gt;/</code>安装所需的依赖<code>npm install</code>，之后<code>hexo -s</code>就可以看到网页了。考虑使用<code>~/blog</code>作为文件夹。</p>
<h3 id="写博客">写博客</h3>
<p>在Hexo目录下<code>hexo new [类型] &lt;&quot;博客名&quot;&gt;</code>，类型缺省时为新建一篇博客<code>post</code>（另两种是新建页面<code>page</code>和新建草稿<code>draft</code>）。这其实就是将模板文件<code>blog/scaffolds/</code>对应类型的内容复制过来并重命名为<code>博客名.md</code>。默认<code>post</code>新建博客类型的模板为以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure>
<p>其中前两项生成时会自动填写，<code>tags</code>一项的填写格式为</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">[标签1,标签2,...]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">或</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">标签1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">标签2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">……</span></span></pre></td></tr></table></figure>
<p>编辑保存后<code>hexo g</code>即可。运行<code>hexo s</code>可查看。</p>
<p>除默认配置外，有必要添加如下内容。</p>
<p><code>categories:</code>，分级目录属性。与<code>tags</code>属性不同，其可以划分父子级关系。例如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">怎么拿长老知识</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span>	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">游戏</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">遗迹：灰烬重生</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure>
<p><code>thumbnail:</code>（如果主题支持文章封面），后跟图片链接即可。经测试，使用450*212的图片作为主题“Hueman”的封面可以获得比较好的画质，体积也只有20至30KB。</p>
<p><code>updated: 1569245658000</code>更新日期。</p>
<h3 id="站点的配置">站点的配置</h3>
<p>在<code>blog/</code>有一<code>_config.yml</code>文件，其保存有站点相关的设置。</p>
<p>开头是Site模块：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标题，会显示在浏览器标签栏上</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">描述</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">keywords:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">作者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">语言（简中：zh-CN；不同主题不同，例如NexT中似乎叫zh-Hans）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">timezone:</span> <span class="string">网站时区，默认使用电脑的无需改动</span></span></pre></td></tr></table></figure>
<p>剩下的似乎不是太用改，例如URL模块似乎是当网站放在子目录下时用的等等。</p>
<p>当此配置文件与主题的配置文件冲突时，此配置文件将覆盖主题的配置文件。</p>
<p>hexo的文章是<code>.md</code>经过swig转换成的html，生成的html中的空格和注释会影响JS的性能，可在<code>blog/</code>安装hexo自带的neat插件<code>npm install hexo-neat --save</code>进行压缩。安装插件后在站点配置文件中添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-neat</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 全局开关</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_html:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩css  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_css:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/*.min.css'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_js:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">mangle:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">output:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">compress:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/*.min.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/jquery.fancybox.pack.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/index.js'</span></span></pre></td></tr></table></figure>
<p><code>exclude</code>项是跳过压缩的文件。</p>
<p><strong>【更新】neat突然会报错了，暂且设为false。</strong></p>
<h3 id="主题的配置">主题的配置</h3>
<p>如果想要换主题，首先找到一个主题，下载可得一个压缩包解压到<code>themes</code>文件夹下即可。注意很多主题同时会有WordPress和Hexo两个版本，不要下错。</p>
<p>曾经长期使用Landscape（2018年）和Hueman（2019年）两个主题。Landscape作为默认主题，简约大气，自己改一下图片啊配色啊啥的相当不错，但支持的功能略少；Hueman算是杂志风格，支持的功能也很多，但总感觉侧边栏和选项卡功能重复，不够简约，而且一些符号显示会出错，默认的代码块也很丑。目前使用最大众化的NexT主题。</p>
<p>该主题仓库位于<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">这里</a>，参照说明安装即可。</p>
<p>使用主题文件夹下多出的文件夹的名字替换掉博客根目录下的<code>_config.yml</code>中<code>theme</code>项的内容后<code>hexo g</code>即可，注意<code>theme:</code>后应当有一个空格。</p>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">这里</a>是一份较早前版本的参考文档，具有一定参考性，但已有部分设置与最新版本有偏差。</p>
<p>主题的<code>_config.yml</code>需要设置的项主要有一下一些：</p>
<p>修改风格项<code>Schemes</code>。</p>
<p>为侧栏增加标签页、分类页和关于页，将<code>menu</code>下对应项的注释取注，并按上述文档生成前两者页面即可。后者通过<code>hexo new page &quot;about&quot;</code>，在其内写入：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">about</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-09</span><span class="number">-23</span> <span class="number">18</span><span class="string">:13:29</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">正文</span></span></pre></td></tr></table></figure>
<p>来实现。</p>
<p>显示当前浏览进度<code>scrollpercent</code>置为true。</p>
<p>启用本地搜索只需<code>npm install hexo-generator-searchdb --save</code>并设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure>
<p>添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure>
<p>设置头像只需简单修改<code>Sidebar Avatar</code>字段。</p>
<p>这个主题还提供了评论功能，有许多可选的服务提供商，不过没什么卵用。国内的要么倒闭了要么需要实名制，国外的又要扶墙……</p>
<p>【更新】发现了一个比较好用的服务商，棒子的“来必力”<code>https://www.livere.com/</code>。只需正常步骤注册即可获得一段代码<del>，用此代码替换掉主题中的<code>layout/comment/livere.ejs</code>中的内容，再在主题配置文件中禁用<code>comment</code>项下的所有评论工具，在<code>comment</code>项外，比如上面一行添加<code>livere_uid: xxxxxxxx</code>，其中<code>xxxxxxx</code>为获取的代码中提供的UID。再将主题中的<code>layout/common/article.ejs</code>中最后一行<code>&lt;%- partial('comment/index') %&gt;</code>改为<code>&lt;%- partial('comment/livere') %&gt;</code>即可。</del>【更新】划去部分针对Hueman。NexT只需在主题配置文件下找到<code>livere_uid:</code>填上代码中的UID即可。</p>
<p>添加网站访问数统计只需在<code>xx-analysis</code>项添加从分析网站比如百度分析、谷歌分析等等网站获得的哈希值即可。注册帐号后根据提示操作即可获得一段JS代码，哈希值在其中。但这类网站只能站主登录进去查看自己网站的访问情况。若想在网站中显示访问数，可使用<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不算子</a><del>，注意<code>footer</code>文件的位置可能与官方描述有差别。不蒜子自身只提供标签与数字，具体内容由用户编辑。使用官方给出的简易程序对<code>footer</code>做如下修改将统计显示在页脚：</del>【更新】划去部分针对Hueman，Next集成不算子，只需调整<code>busuanzi_count</code>项即可。</p>
<p>如果想要开启RSS订阅，首先需要安装RSS插件<code>npm install hexo-generator-feed --save</code>，并在站点配置文件中添加RSS支持：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># RSS订阅支持</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">atom</span>                <span class="comment">#RSS的类型(atom/rss2)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span>            <span class="comment">#文件路径,默认atom.xml/rss2.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>                 <span class="comment">#展示文章的数量,0或false展示全部</span></span></pre></td></tr></table></figure>
<p>最后将主题配置文件中的<code>rss</code>项改为<code>rss: /atom.xml</code>可开启RSS订阅，可在<code>public/</code>见<code>atom.xml</code>。</p>
<h3 id="部署至github">部署至GitHub</h3>
<p>安装hexo的插件：<code>npm install hexo-deployer-git --save</code>。</p>
<p>在github中建立一个以自己名字命名的仓库，建好后将<code>_config.yml</code>中的`deploy项替换为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">repository:</span> <span class="string">建好仓库后给出的地址中git格式那个复制一下粘过来</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span></pre></td></tr></table></figure>
<p>首先配置git用户名<code>git config --global user.name &quot;&lt;用户名&gt;&quot;</code>和邮箱<code>git config --global user.email &quot;&lt;邮箱&gt;&quot;</code>，这会生成一个<code>~/gitconfig</code>文件，想改的话直接改这个文件就行。然后获取SHH密钥<code>ssh-keygen -t rsa -C &quot;&lt;前面的邮箱&gt;&quot;</code>，一路回车即可，之后会生成一个<code>~/.ssh</code>文件夹，其中有一个私钥<code>id_rsa</code>和一个公钥<code>id_rsa.pub</code>，将公钥添加至github。从github网页右上角的下拉菜单里的settings中添加。</p>
<p>如果<code>ssh -T git@github.com</code>后（第一次连接时中间需要yes一下）出现<code>You've successfully authenticated, but GitHub does not provide shell access.</code>说明OK了，使用<code>hexo d</code>即可部署网页。</p>
<h3 id="域名解析">域名解析</h3>
<p>终端<code>ping -4 用户名.github.io</code>可以获得GitHub Pages的服务器地址。</p>
<p>在提供域名解析的网站的控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值为刚才ping得的地址。再设置一条主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>用户名.github.io</code>。这两条分别意味着将购买的域名指向一个IPv4地址和另一个域名。</p>
<p>在<code>blog/source/</code>建立<code>CNAME</code>文件，写入购买的域名。进入GitHub中的博客仓库。在仓库的Setting-&gt;Custom domain添加域名后保存即可。</p>
<h3 id="使用latex语法">使用LaTex语法</h3>
<p>在主题配置文件中开启“mathjax”一项为<code>true</code>即可使用LaTex语法，某些主题可能还需要将“math”开启，可选择是每个页面都开启还是需要手动开启。</p>
<p>注意，与正常使用Markdown不同，Hexo不支持LaTex，mathjax并非对<code>.md</code>渲染，而是渲染Hexo生成的Html。因此要确保Hexo不会误将LaTex标记渲染为Html标签。一种方法是在公式块中使用Markdown语法符号时使用转义，更一劳永逸的方法是更换Hexo的渲染引擎。</p>
<p>默认的渲染引擎“hexo-renderer-marked”可通过<code>npm uninstall hexo-renderer-marked --save</code>卸载，<code>npm install hexo-renderer-pandoc --save</code>，即可更换成另一个表现较好的引擎。与许多人推荐的<code>npm install hexo-renderer-kramed --save</code>相比，该引擎表现更好，无需额外修改一些配置文件。</p>
<h3 id="看板娘">看板娘</h3>
<p>可以使用 Live 2D 为博客增添一个 2D 角色。</p>
<p>首先检查<code>package.json</code>里是否已安装<code>&quot;hexo-helper-live2d&quot;</code>，有的话可以先<code>npm uninstall hexo-helper-live2d</code>，官方称“THIS PACKAGE IS DEPRECATED BECAUSE IT WON'T ADD DEPENDENCIES ON YOUR PRODUCTION ENVIRONMENT”。</p>
<p>安装<code>npm install --save hexo-helper-live2d</code>后<code>node_moduels/</code>会生成配置文件夹<code>live2d-widget</code>。</p>
<p><code>https://github.com/xiazeyu/live2d-widget-models.git</code>提供了可用的模型，前缀为<code>live2d-widget-model-haru</code>的模型需要<code>npm install live2d-widget-model-haru</code>支持。</p>
<p>以一只黑猫的模型为例，<code>npm install live2d-widget-model-hijiki</code>后配置博客站点配置文件<code>_config.yml</code>，添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">model:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span>  <span class="comment">#模板目录，在node_modules里</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">display:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">width:</span> <span class="number">150</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">mobile:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span></pre></td></tr></table></figure>
<p>即可。</p>
<h1 id="尾声">尾声</h1>
<p>完成以上配置后的manjaro已经可以正常使用了。可以从<code>优化</code>中设置GNOME桌面的样式——不过默认外观已经很好看了，但是在<code>拓展</code>中可以启用GNOME的一些有用插件，例如显示在上方工具条中的许多有用工具。</p>
<p>Windows系统中的字体可以直接拿过来安装，非常方便；如果只是在Libre Office下用的话只拷贝到<code>～/.config/libreoffice/4/user/fonts</code>下也可以在Libre Office中用。如果没有fonts目录新建即可。</p>
<p>若报<code>未找到strip分割所需的二进制文件</code>，似乎是由于缺少编译器，<code>sudo pacman -S core/binutils</code>可安装酷睿的binutils工具集，或安装gcc。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>Manjaro</tag>
        <tag>Hexo</tag>
        <tag>VSCode</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
</search>
