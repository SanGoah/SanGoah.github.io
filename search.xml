<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>组成原理・肆・I/O系统</title>
    <url>/2020/01/02/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%83%BB%E8%82%86%E3%83%BBI-O%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
  </entry>
  <entry>
    <title>组成原理・叁・控制器系统</title>
    <url>/2020/01/02/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%83%BB%E5%8F%81%E3%83%BB%E6%8E%A7%E5%88%B6%E5%99%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
  </entry>
  <entry>
    <title>组成原理・贰・存储器系统</title>
    <url>/2020/01/02/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%83%BB%E8%B4%B0%E3%83%BB%E5%AD%98%E5%82%A8%E5%99%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
  </entry>
  <entry>
    <title>组成原理・壹・运算器系统</title>
    <url>/2020/01/02/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%83%BB%E5%A3%B9%E3%83%BB%E8%BF%90%E7%AE%97%E5%99%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
  </entry>
  <entry>
    <title>组成原理・〇・总论</title>
    <url>/2020/01/02/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%83%BB%E3%80%87%E3%83%BB%E6%80%BB%E8%AE%BA/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<h1 id="冯诺依曼计算机系统">冯・诺依曼计算机系统</h1>
<p>现今计算机普遍采用由冯・诺依曼提出的结构体系，其要点如下：</p>
<ul>
<li>计算机由运算器、存储器、控制器和I/O设备五大部件组成，其中运算器和控制器是最重要的，现在人类技术比较NB了把它俩集成为CPU了；</li>
<li>使用二进制表示数据和指令；</li>
<li>采用存储程序方式，即将程序和数据预先准备好载入主存，运行时自动从程序中一条条取出指令执行，这是现今计算机能高速自动运行的基础。</li>
</ul>
<p>既然指令和数据都在主存里，计算机是如何区分它们的呢？主要有两个方面：</p>
<ul>
<li>时间上，程序运行时，首先进入取指周期，由指定的寄存器如PC给出一个地址，将该地址内的二进制代码当作指令执行。指令分两部分，一部分为操作码，指明要执行的操作，一部分为地址码，指明要操作的数据的地址。经过分析周期后进入执行周期，执行周期内取操作数时将地址内的二进制代码当作数据操作；</li>
<li>空间上，由PC提供存储单元地址的取出的是指令，由指令地址码部分提供存储单元地址的取出的是操作数。</li>
</ul>
<p>如果取出的是指令，送控制器；指令执行周期从内存中取的数据，送运算器（往内存写入的数据也是来自于运算器）。</p>
<h1 id="总线">总线</h1>
<p>计算机部件间通过总线传递信息。总线为多个部件共享，多个部件可同时接收总线上的信息，但必须分时地发送信息，否则会冲突。主要分为：</p>
<ul>
<li>内部总线：连接CPU内部各寄存器和算术逻辑部件；</li>
<li>系统总线：连接计算机系统各部件，一般生活中说总线指的就是这玩意，例如常说的PCI和PCIe；系统总线的连接方式有单总线和双总线，单总线就是所有部件都连在系统总线上，如ARM，双总线就是额外用一个存储总线连接CPU和存储器，例如x86；</li>
<li>外部总线：连接该计算机系统和其它计算机系统或其它非计算机系统的系统的总线。</li>
</ul>
<p>还可按照信息传输方向分为单向总线和双向总线。</p>
<p>总线结构可以减少线路数简化结构，并可减少信息发送部件的负载（因为不用选择线路了？）及方便拓展系统。</p>
<h1 id="计算机层次结构">计算机层次结构</h1>
<p>为了为不同层次的用户提供不同级别对计算机系统的抽象，将计算机划分为多个层次。有许多种划分方法，仅介绍如下一种：</p>
<ul>
<li>虚机器/软件
<ul>
<li>第六级，应用语言层：由为某个领域专门开发的SDK支持，直接面向该领域开发者；</li>
<li>第五级，高级语言层：由高级语言编译程序支持，面向高级语言应用程序编写者；</li>
<li>第四级，汇编语言层：由汇编程序支持，面向汇编语言程序编写者；</li>
<li>第三级，操作系统层：由OS定义和实现一些软件指令，实现对机器指令的扩充，从这一层开始就和程序员没啥关系了；</li>
</ul></li>
<li>实机器/硬件
<ul>
<li>第二级，传统机器语言层：由微程序解释机器指令；</li>
<li>第一级，微程序机器层：由机器硬件执行微指令；</li>
<li>第零级，机器语言时序。</li>
</ul></li>
</ul>
<p>例如一个某领域开发者写软件，第五级及以下的计算机系统对他是抽象掉的，他不用了解这些东西，只要会用自己领域的SDK就行了，写完程序（应用语言层代码）后SDK会给他翻译成高级程序语言（高级语言层代码），高级程序语言被编译器翻译成汇编（汇编语言层代码），汇编程序将汇编代码翻译为指令（操作系统层代码），操作系统将操作系统提供的的广义的那部分指令解释为传统的机器语言（传统机器语言层代码），再由微程序解释为微指令（微程序机器层代码），就可以由硬件执行了。</p>
]]></content>
  </entry>
  <entry>
    <title>操作系统・壹・处理机管理</title>
    <url>/2019/12/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%83%BB%E5%A3%B9%E3%83%BB%E5%A4%84%E7%90%86%E6%9C%BA%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
包括进程、死锁和作业调度相关内容。
</center>
<a id="more"></a>
<h1 id="顺序与并发执行的描述">顺序与并发执行的描述</h1>
<p>说一个程序是顺序执行的，意味着其每个程序段是依次执行的，且每个程序段内的所有指令也是依次执行的。这种程序运行时<strong>独占全机资源</strong>，<strong>执行结果不受外界影响</strong>。</p>
<p>使用前驱图描述程序执行的先后顺序。前驱图是一个有向图，节点为一个程序或语句（或进程），如果一个节点必须在另一个节点执行后才能执行，就从后者引一条边至前者。称后者是前者的<strong>前驱</strong>。前驱图应当是无环的。</p>
<p>如果两节点间没有前驱关系（直接或间接），它们就可以并发地执行。</p>
<p>并发执行的程序为了满足同时段内执行的内容没有前驱关系，进程间可能要相互等一等之类，会有执行的“<strong>间断性</strong>”；由于是多个程序并发地在跑，因此全机资源不是被独占的，一个程序跑的时候可能修改了另一个程序的数据之类，<strong>失去了封闭性</strong>，也意味着可能两次输入相同的运行的输出不一样，出现<strong>不可再现的、与时间有关的错误</strong>。</p>
<h1 id="进程的基本概念">进程的基本概念</h1>
<p>传统意义上，进程是程序在一个数据集上的运行过程，是系统进行资源分配和调度的一个独立单位。其实体由程序段、相关的数据段和进程控制块（PCB）构成。</p>
<p>与程序不同，程序只是一堆死的代码，是静态的；而进程是“运行过程”，讲的是个<strong>动态的</strong>概念（就是因为动态所以才会出不可再现的错误，一般意义上不会认为程序会出不可再现的错误对吧）。这是它最本质的特征。</p>
<p>多个进程互相<strong>独立</strong>地运行、分配资源、接受调度，共同存在于内存中，且可以<strong>并发</strong>执行。但执行是<strong>异步</strong>的。</p>
<p>如果一个进程万事俱备只欠处理机资源，就叫它是<strong>就绪（Ready）</strong>的；给了处理机资源跑起来了，就叫它在<strong>执行（Running）</strong>，规定的时间片结束后回到就绪态等待下一次进程调度；前面说了并发执行有间断性，一个进程等的时候就叫<strong>阻塞（Blocked）</strong>，一般是执行态时进入阻塞态，此时处理机去执行其它进程，这个进程等好后进入就绪态。</p>
<p>除以上三种基本状态外，进程在创建时叫创建状态，此时申请并填写PCB、分配资源，完成后进入就绪状态；终止时叫终止状态，善后处理，清零PCB之类；还有种挂起状态。</p>
<h1 id="os对进程的描述">OS对进程的描述</h1>
<p>OS使用进程控制块记录一个进程。包含如下信息：</p>
<ul>
<li>进程标识符，包括编号（OS根据这个使用进程，其它都是给用户看的）、名字、对应父进程子进程的标识和用户标识（谁拥有此进程）等；</li>
<li>处理机状态，保存各寄存器的内容，中断后好恢复；</li>
<li>进程调度信息，进程当前状态、优先级和其它信息，例如现在阻塞了为啥阻塞的、进程等了多久、总共跑了多久之类；</li>
<li>进程控制信息，程序和数据的地址、有关进程同步和通信的信息、该进程需要哪些资源已经分配了哪些资源、指向PCB中下一个进程的指针。</li>
</ul>
<p>一般OS用链接方式或索引方式组织PCB。链接方式即弄三个队列，分别对应就绪的、阻塞的和空白的PCB，还有一个指针指向正在执行的进程；索引就是用表来实现。</p>
<h1 id="进程控制">进程控制</h1>
<p>进程控制包括创建进程、终止进程和进程状态转换 是进程管理最基本的功能，由OS内核完成。</p>
<h2 id="创建进程create">创建进程（Create）</h2>
<p>一个进程创建另一个进程，有如下情况：</p>
<ul>
<li>用户登录，用户登录OS时OS内核为该用户创建一个进程，插入就绪队列；</li>
<li>作业调度，多道批处理里面该调度个新程序开始跑时OS内核就给它创建一个进程；</li>
<li>提供服务，用户程序要求某种请求时OS内核为这个服务创建一个进程，这样这个服务和用户程序也是可以并发的，比方说Word，并不是说打印的时候就不能操作了；</li>
<li>应用请求，应用程序可以请求创建进程。</li>
</ul>
<p>Unix中把创建进程的进程称为父进程，被创建的进程称为子进程，子进程继承父进程的资源，销毁父进程时子进程一并销毁。Windows中不存在此概念，每个进程有一个句柄决定它可以控制哪些其它进程。</p>
<p>创建进程时，OS调用进程创建原语创建进程。首先申请空白PCB，然后为新进程分配内存等，然后初始化PCB，最后插入就绪队列。</p>
<h2 id="终止进程">终止进程（）</h2>
<p>一个进程被终止，有如下情况：</p>
<ul>
<li>正常结束，程序里专门有条指令调用系统中端告诉OS我好了；</li>
<li>异常，程序试图越界访问资源、调用非法指令、运行或等待超时、算术运算错误等情况；</li>
<li>外界干预，例如发生系统死锁，就只好由OS或操作者看看能不能救，或父进程被销毁于是子进程被株连，或父进程清理门户。</li>
</ul>
<p>终止进程时，OS调用进程终止原语终止进程。首先找到它，确定状态，要是还在执行就先停掉并置调度标志为真待会下一个就绪的进程好跑；看看有没有子进程，有的话一并终止；归还资源，移出队列。</p>
<h2 id="进程的阻塞与唤醒blockwakeup">进程的阻塞与唤醒（block/wakeup）</h2>
<p>一个进程被阻塞，有如下情况：</p>
<ul>
<li>请求系统服务，但系统暂时无法提供；</li>
<li>启动某种操作，某种必须做完才能继续的操作，例如等待I/O；</li>
<li>等数据之类；</li>
<li>无事可做。</li>
</ul>
<p>阻塞进程时，进程主动调用阻塞原语把自己阻塞。首先停止执行，接下来修改PCB状态为阻塞，并将PCB插入阻塞队列，保存现场，重分配处理机。</p>
<p>唤醒进程时，将之移出阻塞队列，修改PCB状态为就绪，插入就绪队列。</p>
<h2 id="进程的挂起与激活suspendactive">进程的挂起与激活（suspend/active）</h2>
<p>挂起进程时，调用挂起原语。首先检查其状态。若处于活动就绪或执行状态，则将其转为静止就绪；若处于活动阻塞,则将其转为静止阻塞。将PCB放到特定内存区域，如果之前该进程在执行，就重新调度。</p>
<p>激活进程时，将进程从外存调入内存，检查其状态，若是静止就绪，则改为活动就绪；若是静止阻塞，则改为活动阻塞。若采用的是抢占式调度策略，则还应检查被激活就绪进程的优先级，若其优先级比先行执行进程高，则应将处理机分配给被激活进程。</p>
<h1 id="进程同步">进程同步</h1>
<p>为避免异步，需要进程同步。</p>
<p>多个进程间可能存在制约关系导致异步。对于多个进程的共享资源，如打印机，各进程应当互斥地访问，一般必须向系统提出申请，由OS分配，叫间接制约；对于不许经过系统直接就能访问的资源的制约关系，如两个进程都需用到某个缓冲区，叫直接制约。</p>
<p>在一段时间内只能由一个进程访问的资源（硬或软）叫临界资源。访问临界资源的循环进程描述如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while(true)</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    非临界区，其它代码；</span></pre></td></tr><tr><td class="code"><pre><span class="line">    进入区，检查资源是否正被访问；</span></pre></td></tr><tr><td class="code"><pre><span class="line">    临界区，访问临界资源；</span></pre></td></tr><tr><td class="code"><pre><span class="line">    退出区，将正被访问标志恢复至未被访问；</span></pre></td></tr><tr><td class="code"><pre><span class="line">    非临界区，其它代码。</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>一个同步机制，应当保证临界资源未被访问时可以被访问，正被访问时无法被访问；要求访问临界资源的进程在有限时间内可以访问得到，进程等待访问临界区时处理机给其它进程用（否则叫“忙等”）。</p>
<h2 id="常用进程同步机制">常用进程同步机制</h2>
<h3 id="硬件同步机制">硬件同步机制</h3>
<p>利用特殊的硬件指令解决临界区问题。</p>
<ul>
<li>关中断</li>
<li>利用Test-and-Set指令</li>
<li>利用 Swap指令</li>
</ul>
<p>缺陷：</p>
<ul>
<li>忙等</li>
<li>难于解决进程同步问题</li>
</ul>
<h3 id="信号量机制">信号量机制</h3>
<p>Dijkstra提出了整型信号量机制，后来慢慢发展，先是记录型信号量，然后AND型信号量，再然后信号量集，卓有成效且应用广泛。</p>
<p>最初信号量是一个整型<code>S</code>，表示资源数目。被用一个就减一，释放一个就加一。当有程序想访问资源时就死循环地看还剩几个资源，直到资源数大于零时跳出循环使用资源。这里如果得不到资源无法让出处理机给其它进程用，会导致忙等。</p>
<p>记录（即结构体）型信号量由一个代表临界资源数目的整型变量<code>value</code>和该资源上阻塞的队列（链表）指针<code>L</code>构成。<code>value</code>和整型信号量中的<code>S</code>意义相同。当发现资源数小于等于零时，不是一直死循环地看资源数直到大于零，而是调用阻塞原语自我阻塞，并把自己插入至<code>L</code>，<code>value</code>自减。也就是说，<code>value</code>为负数时，其相反数为被阻塞的进程数。释放资源时如果发现<code>value</code>小于零，就唤醒一个阻塞队列中的进程。</p>
<p>把资源的请求和释放写成函数，大致如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Semaphore</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> value;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    PCB* <span class="built_in">list</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;S;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(S)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    S.value = S.value – <span class="number">1</span> ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>  ( S.value &lt; <span class="number">0</span> ) </span></pre></td></tr><tr><td class="code"><pre><span class="line">        block (S.<span class="built_in">list</span>) ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">/* 让权等待 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">signal</span> <span class="params">(S)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    S.value = S.value + <span class="number">1</span> ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>  ( S.value &lt;= <span class="number">0</span> )</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wakeup (S.<span class="built_in">list</span>) ;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">/*唤醒第一个等待的进程 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>若有<code>n</code>个进程<code>m</code>个资源，信号量的可能范围就是<code>m~(m-n)</code>。</p>
<p>利用信号量机制实现进程互斥地访问临界资源，只需将<code>S.value</code>初值设为1，将<code>wait(S)</code>作为进入区、<code>signal(S)</code>作为退出区。</p>
<p>除了利用信号量机制控制资源的访问、实现进程互斥外，还可以用来实现前驱关系。</p>
<h3 id="管程机制">管程机制</h3>
<p>略。</p>
<h2 id="经典进程同步问题">经典进程同步问题</h2>
<h3 id="生产者-消费者问题">生产者-消费者问题</h3>
<p>生产者生产东西，放到缓冲区，消费者从缓冲区拿东西。生产者放东西到缓冲区前会先看一眼，如果满了，就不放；消费者拿东西前也会看一眼，如果没了，就不拿。</p>
<p>看起来没什么问题。写成程序就有问题了。</p>
<p>用一个<code>cnt</code>记录缓冲区的东西数量，生产者或消费者先读<code>cnt</code>的值，再改变它。改变<code>cnt</code>值的过程通常是如下的命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MOV 存储器,寄存器</span></pre></td></tr><tr><td class="code"><pre><span class="line">INC 寄存器</span></pre></td></tr><tr><td class="code"><pre><span class="line">MOV 寄存器,存储器</span></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MOV 存储器,寄存器</span></pre></td></tr><tr><td class="code"><pre><span class="line">DEC 寄存器</span></pre></td></tr><tr><td class="code"><pre><span class="line">MOV 寄存器,存储器</span></pre></td></tr></table></figure>
<p>如果第二个MOV前插入了其它指令比如另一个进程的第一个MOV指令，就会出错。</p>
<p>比如初值为1时，如果并发地执行这两坨指令，有可能得到0或1或2三种结果。</p>
<p>回到生产者-消费者问题，由简单到复杂有多种情况：</p>
<ul>
<li>一个生产者、一个消费者、缓冲区可以放一个东西的问题；</li>
<li>一个生产者、一个消费者、缓冲区可以放若干东西的问题；</li>
<li>若干生产者、若干消费者、缓冲区可以放若干东西的问题。</li>
</ul>
<p>对于最简单的情况，为同步双方设置各自的信号量，初值为其初始状态可用的资源数；增加进入区和退出区，同步双方任一进程在进入临界区之前，应先对自己的信号量执行<code>wait(&lt;己方信号量&gt;)</code>操作，以测试是否有自己可用的资源，若有资源可用，则进入临界区，否则阻塞；同步双方任一进程离开临界区后，应对对方的信号量执行<code>signal(&lt;对方信号量&gt;)</code>操作，以通知对方已有资源可用：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">item buffer;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">semaphore empty,full;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为1，可以向缓冲池放一个产品</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">empty.value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">full.value=<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Producer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        produce an item in nextp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//测试能不能放东西</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(empty);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//nextp放入buffer</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        buffer=nextp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的消费者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(full);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Consumer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//测试能不能拿东西</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(full);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//buffer内的东西拿到nextc</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        nextc=buffer;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的生产者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(empty);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        consume the item in nextc;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<p>若缓冲区可放k个东西，只需将生产者的初值记为k即可。另外为生产者和消费者分别提供一个下标指定其访问的缓冲区位置：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">item buffer[n];</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">semaphore empty,full;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为k，可以向缓冲池放k个产品</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">empty.value=k;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">full.value=<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//当前下标都是0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> in=<span class="number">0</span>,out=<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Producer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        produce an item in nextp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//测试能不能放东西</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(empty);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//nextp放入buffer[in]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        buffer[in]=nextp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//计算下一个位置</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        in=(in+<span class="number">1</span>)%k;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的消费者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(full);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Consumer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//测试能不能拿东西</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(full); </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//buffer[out]内的东西拿到nextc</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        nextc=buffer[out];</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//计算下一个位置</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        out=(out+<span class="number">1</span>)%k;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的生产者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(empty);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        consume the item in nextc;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<p>对于最复杂的情况，连下标的<code>in</code>和<code>out</code>都会出现冲突了，因为不止一个生产者、不止一个消费者，所以访问<code>in</code>和<code>out</code>也需要。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">item buffer[n] ;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//in和out的信号量、生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">semaphore mutex,empty,full;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//当前下标都是0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> in = <span class="number">0</span>，out = <span class="number">0</span> ；</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//两个下标最初信号量为1，可以被一个生产者或消费者访问</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">mutex.value = <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为k，可以向缓冲池放k个产品</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">empty.value=k;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">full.value = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">produceri</span><span class="params">()</span><span class="comment">//(i=1,2,…,k)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        item nextp ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (TRUE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;   ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">            produce an item in nextp；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(empty)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(mutex)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            buffer[in] = nextp ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            in = (in + <span class="number">1</span>)% n ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(mutex)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(full)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    process consumerj()<span class="comment">//(j=1,2,…,m)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;  item nextc ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (TRUE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(full)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(mutex)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            nextc = buffer[out] ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            out = (out + <span class="number">1</span>)% n ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(mutex)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(empty)；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">            consume the item in nextc ；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<h3 id="哲学家就餐问题">哲学家就餐问题</h3>
<p>有5个哲学家共用一张圆桌，分别坐在周围的5张椅子上，在圆桌上有5个碗和5只筷子（每人面前一只碗，左右手边各一双筷子），他们的生活方式是交替地进行思考和进餐。平时，每个哲学家进行思考，饥饿时便试图拿起其左右最靠近他的筷子，只有在他拿到两只筷子时才能进餐。进餐完毕，放下筷子继续思考。</p>
<p>5个筷子用五个信号量表示即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>]；</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">0</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">1</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">2</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">3</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">4</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process  <span class="title">Pi</span><span class="params">()</span><span class="comment">//(i = 0，1，2，3，4)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//拿起左边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(chopstick[i])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//拿起右边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(chopstick[(i + <span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            eating；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//放下左边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(chopstick[i])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//放下右边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            thinking；</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<p>问题在于如果所有人都拿着左边筷子，就陷入了死锁。</p>
<p>解决办法法很多：</p>
<ul>
<li>至多允许4个哲学家同时取左边的筷子，这样能至少保证一个哲学家能就餐，并在用毕后释放他用过的两只筷子，从而使更多的哲学家能够进餐；</li>
<li>仅当哲学家左右两只筷子均可用时（AND信号量机制），才允许他拿起筷子进餐；</li>
<li>规定奇数号哲学家先拿左边筷子，然后再拿右边筷子；而偶数号哲学家先拿右边筷子，然后再拿左边筷子；</li>
<li>规定每个哲学家先拿序号小的筷子——按序号分配。</li>
</ul>
<p>以第一种方法为例，再加一个关于左边筷子能否取用的信号量即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>],S；</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">0</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">1</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">2</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">3</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">chopstick[<span class="number">4</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">S.value=<span class="number">4</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process  <span class="title">Pi</span><span class="params">()</span><span class="comment">//(i = 0，1，2，3，4)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//能否拿筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(S);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//拿起左边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(chopstick[i])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//拿起右边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(chopstick[(i + <span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            eating；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//放下左边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(chopstick[i])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//放下右边筷子</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//释放能否拿筷子标记</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(S);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            thinking；</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<h3 id="读者-写者问题">读者-写者问题</h3>
<p>一个数据文件或记录，可被多个进程共享，我们把只要求读该文件的进程称为“读者进程”，其他进程称为“写者进程”。显然，只要有一个写者进程正访问文件，就不能有其它进程访问。</p>
<p>因此可设置一个初值为1的信号量，表示当前允许的写者数，同时用一个普通变量记录读者数。由于可能同时有多个进程尝试访问读者数，还需为这个访问设置一个信号量。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">semaphore Wmutex，Rmutex;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Wmutex.value=Rmutex.value=<span class="number">1</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Readeri</span><span class="params">()</span><span class="comment">//(i = 1，2，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//等写者信号</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter – <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Writerj</span><span class="params">()</span><span class="comment">//(j=1，2，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Writing;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<p>问题在于，如果一个读者正在读时来了写者，然后读者还没读完，又来一个读者。现在假设第一个读者读完了，但计数器显示仍有读者，于是写者标记未被释放，新读者反而早于更早来的写者访问文件。一直如此则写者将被饿死。</p>
<p>考虑再增加一个信号量，如果有写者到达，则晚于此写者的读者将无法访问：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">semaphore Wmutex,Rmutex,w;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Wmutex.value=Rmutex.value=w.value=<span class="number">1</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Readeri</span><span class="params">()</span><span class="comment">//(i = 1，2，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//有写者的话之后的w就不能访问了</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(w);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//等写者信号</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(w);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter – <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Writerj</span><span class="params">()</span><span class="comment">//(j=1，2，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//有写者的话之后的w就不能访问了</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(w);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Writing;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(w);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<p>这个算法解决了读者读完后除非已经没有读者否则被唤醒的一定是读者的问题。现在在写者写完后被唤醒的不一定是读者或写者，随缘。如果想要被唤醒的一定是写者，可以：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Wmutex用于写进程互斥访问Wcounter</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//Wsem用于封锁有写者时封锁后续写进程</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">semaphore Wmutex=Wsem= <span class="number">1</span>；</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//Rmutex用于读进程互斥访问Rcounter</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//Rsem1用于在有写者时封锁后续第一个读者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//Rsem2用于在Rsem1起效后封锁后续所有读者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">semaphore Rmutex=Rsem1=Rsem2=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = Wconuter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Reader_i</span> <span class="params">(i = <span class="number">1</span>，<span class="number">2</span>，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//是否是写者后的读者后的读者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rsem2);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//是否是写者后的读者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rsem1);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//是否有人正在访问计数器</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//如果当前仅有自己一个读者在访问文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//则判断是否有写者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            wait(Wsem);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rsem1);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rsem2);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rcounter = Rcounter - <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//如果当前仅有自己一个读者在访问文件并且刚刚关上</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//则判断是否有写者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(Wsem);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125; <span class="function">process <span class="title">Writer_j</span> <span class="params">(j=<span class="number">1</span>，<span class="number">2</span>，…)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Wcounter++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Wcounter==<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Rsem1);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Wsem);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Writing( );</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Wsem);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Wcounter=Wcounter<span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Wcounter==<span class="number">0</span>) </span></pre></td></tr><tr><td class="code"><pre><span class="line">            signal(Rsem1);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure>
<h1 id="进程通信">进程通信</h1>
<p>信号量机制效率太低了，且对用户不透明，因此需要设计允许透明地传送大量信息的方式，主要有：</p>
<ul>
<li>共享存储器通信，类似生产者消费者问题中的缓冲区，但效率更高；</li>
<li>管道通信（共享文件）；</li>
<li>消息传递通信，以上两个只适合单机，这个还适合网络通信：
<ul>
<li>直接通信方式</li>
<li>间接通信方式——信箱通信</li>
</ul></li>
<li>客户机-服务器系统，仅适合网络通信。</li>
</ul>
<h1 id="作业与进程的调度">作业与进程的调度</h1>
<p>就绪队列用中有许多进程，然而穷比只得起四核CPU，该让哪个进程先跑呢？要靠进程调度或作业调度。调度时有以下几种级别：</p>
<p>（作业是比程序更广泛的概念，但仍可以使用类似PCB的方式描述，称为JCB。类似进程地，作业也有一些基本状态，收容、运行和完成状态。）</p>
<ul>
<li>高级调度，或者叫作业调度，决定把哪些作业由外存调至内存，要考虑调几个、分别是谁；</li>
<li>中级调度，或者叫内存调度，主要负责进程的挂起和激活；</li>
<li>低级调度，或者叫进程调度，决定哪个进程使用处理机，分抢占式——某个进程跑着跑着可以被其它进程顶下去——和非抢占式。</li>
</ul>
<p>我们希望有合适的调度算法，使处理机利用率（有效工作时间和有效工作时间加空闲时间之比）和I/O设备利用率尽可能高且对各进程公平、一些重要进程能立即被强制执行。</p>
<p>有以下几种常用调度算法：</p>
<h2 id="先来先服务fcfs">先来先服务（FCFS）</h2>
<p>顾名思义。适合有很多耗时比较长、没什么I/O的作业或进程的情况。非抢占式。</p>
<h2 id="短作业优先短进程优先sjfspf">短作业优先/短进程优先（SJF/SPF）</h2>
<p>顾名思义。可以降低平均周转时间（到达到完成的时间），但长作业可能被饿死。而且用户给的预计运行时间未必准。非抢占式。</p>
<h2 id="优先级调度psa">优先级调度（PSA）</h2>
<p>前两种算法的加强版。即前两种算法分别是单纯以到达时间或作业预计时间为优先级。如果做成抢占式的，还可以用在实时系统中。</p>
<p>可以静态或动态地确定优先级，通过进程类型（是I/O还是别的什么？）、资源耗费（包括时间内存等）和用户的指定等。动态确定时，可以提高一个等了很久的进程的优先级，慢慢降低正在执行的进程的优先级等。</p>
<h2 id="高响应比优先调度算法hrrn">高响应比优先调度算法（HRRN）</h2>
<p>一种求动态优先级的方式。等待时间与要求服务时间之和与要求服务时间的比例作为优先级，谁高调用谁。</p>
<h2 id="基于时间片的轮转调度法rr">基于时间片的轮转调度法（RR）</h2>
<p>按FCFS排列就绪队列，当处理机空闲时，将处理机分配给队首进程，等一个时间片过去，将正处理的进程排至队尾。</p>
<h2 id="多级反馈队列调度算法mfq">多级反馈队列调度算法（MFQ）</h2>
<p>设置多个优先级不同的就绪队列，每个队列时间片长度不同，优先级越高的队列时间片越长。当一个进程到达时，将它加入优先级最高的队列的末尾。处理机执行完时间片后如果当前进程未完成，则放到低一级的队列最后。最低优先级的队列内部使用RR算法调度。当最高优先级的队列为空时才执行低一级优先的队列，依次类推。如果正在执行时有高于当前进程优先级的进程到达（即执行非最高优先级进程时有进程到达），则将当前执行的进程放至原优先级对应队列的队尾，首先执行新来的进程。</p>
<p>这种算法无需知道预期运行时间，比较NB。</p>
<h2 id="示例">示例</h2>
<p>有一个具有两道作业的批处理系统（最多可有两道作业同时装入内存执行）,作业调度采用计算时间短的作业优先调度算法,进程调度采用以优先数为基础的抢占式调度算法,今有如下作业序列（表中所列作业优先数即为进程优先数,数值越小优先级越高）:</p>
<table>
<thead>
<tr class="header">
<th>作业名</th>
<th>到达时间</th>
<th>估计运行时间</th>
<th>优先数</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>J1</td>
<td>10:10</td>
<td>20分钟</td>
<td>5</td>
</tr>
<tr class="even">
<td>J2</td>
<td>10:20</td>
<td>30分钟</td>
<td>3</td>
</tr>
<tr class="odd">
<td>J3</td>
<td>10:30</td>
<td>25分钟</td>
<td>4</td>
</tr>
<tr class="even">
<td>J4</td>
<td>10:50</td>
<td>20分钟</td>
<td>6</td>
</tr>
</tbody>
</table>
<p>显然J1在10:10先到，装入内存并运行了10min，10:20J2到达，装入内存，由于优先级更高，抢占J1直到执行完毕即10:50，此时J3和J4都到达了。作业调度遵循短作业优先，即J4又被装入内存，其优先级低于J1，于是J1执行完毕。此时是11:00，J3也被装入内存，其优先级更高，到11:25J3执行完毕，J4最后执行。</p>
<h1 id="死锁">死锁</h1>
<blockquote>
<p>一组进程处于死锁状态是指：如果在一个进程集合中的每一个进程都在等待只能由该集合中的其它一个进程才能引发的事件，则称一组进程或系统发生了死锁。（孙钟秀主编《操作系统教程》）</p>
</blockquote>
<p>之前哲学家进餐问题有提过。主要出现原因是多个进程对某类资源有竞争、这些进程每次还不止要一个资源、且没规定好它们访问资源的顺序，就可能出现死锁。典型的情况是进程访问了一个资源，又去访问另一个，但另一个不可用，于是他在那等，又抓着已经拿到的资源不放手，导致产生一个循环，一个进程拿着另一个进程要的资源不放手，他要的资源又被另一个进程拿着不放手……</p>
<h2 id="预防">预防</h2>
<p>使临界资源不再临界，或一次性分配好资源而不是一个一个给，或允许进程释放已抢占的资源，或指定好访问顺序即可。</p>
<p>第一种情况限制太大，一般还是想让临界资源互斥的；第二种情况会拖慢系统；第三种方式不好实现；第四种方式规定太死，实际使用哪能这么巧有个顺序。</p>
<h2 id="避免">避免</h2>
<p>既然从原理上预防死锁不太可行，于是考虑在分配资源时动态地预防。</p>
<p>有些时候是不会进入死锁的，例如有三个进程，分别要10、4、9个资源，已分配5、2、2个，还剩3个。这时可以分2个给第二个进程让它跑完，还剩6个；再分5个给第一个进程，最后再满足最后一个进程。这时是安全的。</p>
<p>有些时候会进入死锁，例如上例中的三个进程，分别要10、4、10个资源，已分配5、2、3个，还剩2个。这时可以分2个给第二个进程让它跑完，还剩4个；无论如何也找不到可以让剩下两个进程跑起来的方法了。这是不安全的。</p>
<p>有个银行家算法可对此进行判断，其设计之初是为了防止银行的钱（剩余资源）不够放贷（进程请求资源）的：</p>
<p>对有n个进程m类资源的情况，设置一个有m个元素的数组Availabe记录每个资源的剩余可用数，用三个n*m的矩阵Max、Allocation和Need表示每个进程对每种资源的需求数、已有数和还需要的数。</p>
<p>一个进程发出资源请求Request后进行如下检查：</p>
<ol type="1">
<li>Requset中的元素是否不大于Need中对应元素？否则报错；</li>
<li>Request中的元素是否不大于Available中对应元素？否则让进程等待；</li>
<li>尝试模拟分配完成的情况，即Avalible中元素减去Request中对应元素，Allocation中元素加上Request中对应元素，Need中元素减去Request中对应元素。</li>
<li>复制一个Available，名为Work。即分配完后的剩余资源数。建立一个布尔型数组Finish，对应每个进程的完成情况，初值均为false。</li>
<li>找哪个尚未Finish的进程的Need小于等于Work，有的话意味着剩余资源足够它执行完并释放。假装释放了，把被占用的资源Alloction加到Work上，标记这个进程为完成。重复，直到所有进程都完成，或没有进程可以被完成。</li>
<li>如果都能完成，说明安全，可以分配；否则不能分配。</li>
</ol>
<p>例如现有5个进程P0~P4，三类资源A、B和C分别共有10、5和7个，当前资源分配如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">Max A/B/C</th>
<th style="text-align: center;">Allocation A/B/C</th>
<th style="text-align: center;">Need A/B/C</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">P0</td>
<td style="text-align: center;">7/5/3</td>
<td style="text-align: center;">0/1/0</td>
<td style="text-align: center;">7/4/3</td>
</tr>
<tr class="even">
<td style="text-align: center;">P1</td>
<td style="text-align: center;">3/2/2</td>
<td style="text-align: center;">2/0/0</td>
<td style="text-align: center;">1/2/2</td>
</tr>
<tr class="odd">
<td style="text-align: center;">P2</td>
<td style="text-align: center;">9/0/2</td>
<td style="text-align: center;">3/0/2</td>
<td style="text-align: center;">6/0/0</td>
</tr>
<tr class="even">
<td style="text-align: center;">P3</td>
<td style="text-align: center;">2/2/2</td>
<td style="text-align: center;">2/1/1</td>
<td style="text-align: center;">0/1/1</td>
</tr>
<tr class="odd">
<td style="text-align: center;">P4</td>
<td style="text-align: center;">4/3/3</td>
<td style="text-align: center;">0/0/2</td>
<td style="text-align: center;">4/3/1</td>
</tr>
</tbody>
</table>
<p>也就是说剩余如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">Avalibale A/B/C</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">3/3/2</td>
</tr>
</tbody>
</table>
<p>比方说现在P1请求<code>Request1(1/0/2)</code>，先与Need比较，OK；再与Avalible比较，OK。于是模拟分配。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">Max A/B/C</th>
<th style="text-align: center;">Allocation A/B/C</th>
<th style="text-align: center;">Need A/B/C</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">P0</td>
<td style="text-align: center;">7/5/3</td>
<td style="text-align: center;">0/1/0</td>
<td style="text-align: center;">7/4/3</td>
</tr>
<tr class="even">
<td style="text-align: center;">P1</td>
<td style="text-align: center;">3/2/2</td>
<td style="text-align: center;"><em><strong>3/0/2</strong></em></td>
<td style="text-align: center;"><em><strong>0/2/0</strong></em></td>
</tr>
<tr class="odd">
<td style="text-align: center;">P2</td>
<td style="text-align: center;">9/0/2</td>
<td style="text-align: center;">3/0/2</td>
<td style="text-align: center;">6/0/0</td>
</tr>
<tr class="even">
<td style="text-align: center;">P3</td>
<td style="text-align: center;">2/2/2</td>
<td style="text-align: center;">2/1/1</td>
<td style="text-align: center;">0/1/1</td>
</tr>
<tr class="odd">
<td style="text-align: center;">P4</td>
<td style="text-align: center;">4/3/3</td>
<td style="text-align: center;">0/0/2</td>
<td style="text-align: center;">4/3/1</td>
</tr>
</tbody>
</table>
<p>剩余如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">Avalibale A/B/C</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><em><strong>2/3/0</strong></em></td>
</tr>
</tbody>
</table>
<p>接下来检查安全性。</p>
<p>最早的Work就是Avaliable，P0的Need太多，P1的够，于是有：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">Work A/B/C</th>
<th style="text-align: center;">Allocation A/B/C</th>
<th style="text-align: center;">Need A/B/C</th>
<th style="text-align: center;">Work+Allocation A/B/C</th>
<th style="text-align: center;">Finish</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">P1</td>
<td style="text-align: center;">2/3/0</td>
<td style="text-align: center;">3/0/2</td>
<td style="text-align: center;">0/2/0</td>
<td style="text-align: center;">5/3/2</td>
<td style="text-align: center;">true</td>
</tr>
</tbody>
</table>
<p>现在我们的资源变成5、3和2了，P0仍然不够，P2也不够，P3够了，于是：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">Work A/B/C</th>
<th style="text-align: center;">Allocation A/B/C</th>
<th style="text-align: center;">Need A/B/C</th>
<th style="text-align: center;">Work+Allocation A/B/C</th>
<th style="text-align: center;">Finish</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">P1</td>
<td style="text-align: center;">2/3/0</td>
<td style="text-align: center;">3/0/2</td>
<td style="text-align: center;">0/2/0</td>
<td style="text-align: center;">5/3/2</td>
<td style="text-align: center;">true</td>
</tr>
<tr class="even">
<td style="text-align: center;">P3</td>
<td style="text-align: center;">5/3/2</td>
<td style="text-align: center;">2/1/1</td>
<td style="text-align: center;">0/1/1</td>
<td style="text-align: center;">7/4/3</td>
<td style="text-align: center;">true</td>
</tr>
</tbody>
</table>
<p>依此类推发现所有进程都OK，于是可以分配资源。</p>
<h2 id="检测">检测</h2>
<p>资源分配图。</p>
<h2 id="解除">解除</h2>
<p>回收资源/撤销进程。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
        <tag>进程</tag>
        <tag>死锁</tag>
      </tags>
  </entry>
  <entry>
    <title>apk文件的反编译</title>
    <url>/2019/12/22/%E6%88%8F%E6%B3%95/apk%E6%96%87%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
dex2jar、jd-GUI和apktool的简单介绍。
</center>
<a id="more"></a>
<p>环境：</p>
<ul>
<li>Manjaro Linux 18.1.0</li>
<li>dex2jar 2.1</li>
<li>jd-GUI 1.6.5-min</li>
<li>apktool 2.4.1</li>
</ul>
<p>下载<a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="noopener">dex2jar</a>，注意下载release版本，解压得一个文件夹，里面有许多<code>.sh</code>，对应不同功能。其中的<code>d2j-dex2jar.sh</code>可以由<code>.dex</code>文件反编译出<code>.jar</code>文件，即apk的源程序字节码。</p>
<p>解压apk，得到文件夹，里面的<code>.dex</code>丢到那堆<code>.sh</code>的同级目录下，<code>sh d2j-dex2jar.sh classes.dex</code>即可得到<code>.jar</code>。</p>
<p>下载<a href="http://java-decompiler.github.io/" target="_blank" rel="noopener">jd-GUI</a>（这个网站时好时坏经常404，网速也差，我下的1.6.5的min版），<code>java -jar jd-gui-1.6.5-min.jar</code>（要给权限）可以打开一个GUI，把<code>.jar</code>拖进去即可查看<code>.jar</code>对应的源代码。</p>
<p>源代码之外的配置文件和资源通过<a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="noopener">apktool</a>查看，官网有详细教程。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>反编译</tag>
      </tags>
  </entry>
  <entry>
    <title>一门水课的小组作业所反映的差距</title>
    <url>/2019/12/22/%E5%85%B6%E5%AE%83/%E4%B8%80%E9%97%A8%E6%B0%B4%E8%AF%BE%E7%9A%84%E5%B0%8F%E7%BB%84%E4%BD%9C%E4%B8%9A%E6%89%80%E5%8F%8D%E6%98%A0%E7%9A%84%E5%B7%AE%E8%B7%9D/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="895f8912709e16aceb7396ca207928b9bf6923447562b7fa1f3b65813d8a8b12"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>其它</category>
        <category>柴米</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统・〇・总论</title>
    <url>/2019/12/20/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%83%BB%E3%80%87%E3%83%BB%E6%80%BB%E8%AE%BA/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
操作系统的历史和基本概念。
</center>
<a id="more"></a>
<p>操作系统（Operating System，OS）是计算机硬件上的第一层软件，是计算机必须配置的最基本、最重要的系统软件。</p>
<h1 id="设计目标与主要功能">设计目标与主要功能</h1>
<p>我们希望有种东西能让用户通过I/O系统操作计算机而不是从硬件接口输入机器代码（打孔纸带啥的）从而使计算机更易用（<strong>方便性</strong>），且通过合理调度提高效率（<strong>有效性</strong>），现在软硬件啥的更新换代都贼快，我们还希望它能具有模块化、层次化、微内核结构等设计以易于升级和扩展（<strong>可扩展性</strong>），并能遵循一些通用规范使不同软硬件厂商的产品都能跑（<strong>开放性</strong>）。这个东西就是操作系统。</p>
<p>方便性（用户角度，OS是用户和计算机硬件系统之间的接口）和有效性（资源管理角度，OS是计算机系统资源（软、硬）的管理者）是设计OS的两个最重要的目标（即综合以上两个角度，实现对计算机资源——<strong>处理器</strong>、<strong>存储器</strong>、<strong>I/O设备</strong>、<strong>数据和程序</strong>——的抽象）。</p>
<p>对四种计算机资源的抽象，或叫管理，再加上方便用户使用的界面，构成了操作系统的主要功能：</p>
<ul>
<li>处理机管理功能，基本就是对进程的管理，主要是创建和撤销（控制）、协调不同进程（同步）、信息交换（通信）和分配处理机（调度）啥的；</li>
<li>存储器管理功能，分配和保护内存、映射地址、虚拟存储啥的；</li>
<li>设备管理功能，完成I/O请求即提升I/O的效率和用户体验；</li>
<li>文件管理功能，存储空间和目录的管理、读写和保护；</li>
<li>用户接口，命令接口（用户直接控制自己的作业）、程序接口（程序向系统请求服务）。</li>
</ul>
<p>除此之外，一个现代的操作系统还应具能保护自己的安全、支持多媒体、访问网络等服务。</p>
<h1 id="运行机制">运行机制</h1>
<p>从上面可以看出，操作系统和用户要跑的程序是相对独立的，用户程序该干啥干啥，OS负责进程创建啥啥啥的一堆操作，而恰好这堆操作又是很关键、很危险、消耗资源很多的，所以处理机就搞了个分级制度，例如x86一共有0-3四个级别，0特权级最高，3特权级最低。Windows、Linux/Unix之类仅使用特权级0和特权级3，特权级0叫<strong>管态</strong>，干啥都行，3叫<strong>目态</strong>，只有最低级的权限。</p>
<p>自然，用户的程序就是运行在管态下的，OS主要运行在目态下，这部分叫OS内核，主要包括：</p>
<ul>
<li>时钟管理</li>
<li>中断机制</li>
<li>操作原语</li>
<li>系统控制所需的数据结构及处理</li>
</ul>
<p>在目态下可通过系统调用、异常、中端三种方式进入管态。</p>
<h1 id="发展过程">发展过程</h1>
<p>最早的计算机没有操作系统，打孔纸带那种；因为太慢，后来可以先从外围机上输入到磁带，主机再从磁带调用；然后有了对磁带里的程序的监督程序，勉强算是操作系统了，但是还是要一个作业完成再调用下一个程序，所以叫“单道”批处理系统。</p>
<p>问题在于，比方说一个作业中间要打印结果，但打印的时候处理机就闲着了。于是有了“多道”批处理系统，打印的时候再调用下一个程序跑。问题又来了，最开始的程序打印完之后的半截就得等鬼知道啥时候再被调用，用户也控制不了，于是资源调度、设备分配、用户接口等原来越复杂与完善，成了真正的OS。</p>
<p>后来人们不满足与多人共用一台计算机，还得等，要是不用等（实时）多好，但世界上只有一种病，自己又买不起，于是有了分时系统。比方说现在有100个进程处于就绪状态，如果让处理机每20ms换一个进程执行的话那最多等两秒自己的程序就能跑了，激不激动。这就叫分时，那20ms就叫时间片的长度。</p>
<p>喝不上牛奶的时候我想喝牛奶，等喝上了牛奶我还想用牛奶泡澡。人的欲望是无止境的，于是后来又有了实时系统。对操作系统各方面要求更高。</p>
<p>结构设计上经历了如下变革：</p>
<ol type="1">
<li>无结构</li>
<li>模块式结构</li>
<li>层次式结构</li>
<li>微内核结构</li>
</ol>
<p>微内核最近很火，被牢厂营销起来了。传统的操作系统，例如Linux，其内核包含有前面说的所有功能，但微内核只包含开关机、进程调度等最最基础的功能，而尽可能把其它功能放到目态。这样显然会变慢，所以以前没啥人做，不过现在科技发达了，所以技术实力强的公司开始作出尝试，例如谷歌基于Zircon的微内核的Fuchsia。</p>
<p>不太理解这个东西和“模块化的内核”有啥区别，现在OS内核也都模块化了啊。</p>
<p>还是太菜了。</p>
<h1 id="基本特性">基本特性</h1>
<p>OS最重要的特征是<strong>并发</strong>（两个或多个事件在同一时段发生，不需要同一时刻，同一时刻叫并行）。OS为每个程序建立一些由一组机器指令、数据和堆栈等组成的活动实体，这些活动实体叫进程，多个进程之间可以并发执行并交换信息，也可以共同使用系统资源（<strong>共享性</strong>，不一定是同时的，比方说一个打印机打着别的程序的文档呢肯定另一个程序不能用，还有表、栈等数据结构一个道理，这种叫临界资源，其共享方式叫互斥共享；相反就叫同时访问的共享）。也就是说，并发是共享的基础。但共享也影响并发，资源共享都协调不好并个毛线发不死循环就不错了。这俩是最重要的特征。</p>
<p>由于进程的并发及其之间的资源共享，一个进程难免因为其它进程的干扰等了好久才获取资源完成任务，谁也说不准。这个叫<strong>异步性</strong>。</p>
<p>OS的另一个重要特征是<strong>虚拟</strong>，想要抽象地表示计算机资源，把物理实体映射为逻辑上的概念就很重要，比如虚拟处理机（一核假装成四核）、虚拟内存（磁盘假装是内存）、虚拟外部设备（共享打印机）和虚拟信道等。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg</title>
    <url>/2019/12/19/%E5%BF%AB%E9%97%A8%E5%B7%A5/FFmpeg/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
录制、转换以及流化音视频的完整解决方案。
</center>
<a id="more"></a>
<p>FFmpeg项目由以下几部分组成：</p>
<ul>
<li>FFmpeg，视频文件转换命令行工具；</li>
<li>ffserver，多媒体服务器；</li>
<li>ffplay，简单的媒体播放器；</li>
<li>libavcodec，编解码器库；</li>
<li>libavformat，解析器和产生器库。</li>
</ul>
<p>许多播放器、转码器使用FFmpeg作为内核，例如暴风影音、KMPlayer、QQ影音、格式工厂之类。</p>
<h1 id="安装">安装</h1>
<p>Manjaro自带。</p>
<h1 id="使用">使用</h1>
<p>【用到啥更新啥】</p>
<ul>
<li>画面与声音合并：<code>ffmpeg -i 画面 -i 声音 -codec copy 目标视频</code>（参数<code>-i</code>指定这是一个输入项，<code>-codec</code>表示强制使用codec编解码方式。<code>copy</code>表示原始编解码数据必须被拷贝）。</li>
<li>截取音视频：<code>ffmpeg -i 输入 -ss 00:00:00 -t 10 输出</code>，单位为秒，不影响输入内容；输出可以为gif格式。可添加<code>-b 2048k</code>参数指定比特虑，获得高质量gif。</li>
<li>视频缩放：<code>ffmpeg -i 输入视频 -strict -2 -vf scale=-1:480 输出视频</code>（按比例缩放高度至480）或<code>ffmpeg -i 输入视频 -strict -2 -s 640x480 输出视频</code>。</li>
<li>格式转换：<code>ffmpeg -i 输入 -vcodec 指定格式 输出</code>，可以是<code>h264</code>、<code>mpeg4</code>、<code>libxvid</code>、<code>wmv1</code>和<code>wmv2</code>等。</li>
<li>速率调整：<code>ffmpeg -i 输入音画 -filter_complex &quot;[0:v]setpts=速率*PTS[v];[0:a]atempo=速率[a]&quot; -map &quot;[v]&quot; -map &quot;[a]&quot; 输出音画</code>，单独视频是<code>ffmpeg -i 输入视频 -an -filter:v &quot;setpts=速率*PTS&quot; 输出视频</code>，单独音频是<code>ffmpeg -i 输入音频 -filter:a &quot;atempo=2.0&quot; -vn 输出音频</code>。视频的变速范围为4倍（0.25~4），音频为2倍。</li>
<li>将帧合成为视频：<code>ffmpeg -loop 1 -i ./%d.jpg -vcodec libx264 -r 帧率 test.mp4</code>。</li>
</ul>
]]></content>
      <categories>
        <category>快门工</category>
        <category>视频后期</category>
      </categories>
      <tags>
        <tag>FFmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>基于区域生长的图像分割</title>
    <url>/2019/12/17/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E5%9F%BA%E4%BA%8E%E5%8C%BA%E5%9F%9F%E7%94%9F%E9%95%BF%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<p>根据种子选取准则选择种子，根据相似准则加入与种子相似的点，根据终止准则停止生长。</p>
<p>例如对如下图片：</p>
<p><span class="math display">\[
\begin{matrix}
3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\
4&amp;4&amp;8&amp;9&amp;7&amp;4&amp;3&amp;3\\
2&amp;3&amp;4&amp;8&amp;4&amp;4&amp;5&amp;4\\
2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\
4&amp;3&amp;4&amp;8&amp;9&amp;8&amp;3&amp;3\\
2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\
4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\
4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\
\end{matrix}
\]</span></p>
<p>有：</p>
<ul>
<li>种子选择准则：最亮的点；</li>
<li>相似性准则：新加入像素的灰度值与已生长的区域的平均灰度值之差小于2，且为4连通。</li>
<li>终止准则：没有像素加入。</li>
</ul>
<p>种子选取：</p>
<p><span class="math display">\[
\begin{matrix}
3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\
4&amp;4&amp;8&amp;(9)&amp;7&amp;4&amp;3&amp;3\\
2&amp;3&amp;4&amp;8&amp;4&amp;4&amp;5&amp;4\\
2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\
4&amp;3&amp;4&amp;8&amp;(9)&amp;8&amp;3&amp;3\\
2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\
4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\
4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\
\end{matrix}
\]</span></p>
<p>以生长区域区域平均值为9。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于7的像素。</p>
<p><span class="math display">\[
\begin{matrix}
3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\
4&amp;4&amp;(8)&amp;(9)&amp;7&amp;4&amp;3&amp;3\\
2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\
2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\
4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\
2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\
4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\
4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\
\end{matrix}
\]</span></p>
<p>以生长区域区域平均值为<code>(9+8+8)/3=8.33</code>和<code>(9+8+8)/3=8.33</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于6.33的像素。</p>
<p><span class="math display">\[
\begin{matrix}
3&amp;3&amp;4&amp;(7)&amp;6&amp;4&amp;5&amp;2\\
4&amp;4&amp;(8)&amp;(9)&amp;(7)&amp;4&amp;3&amp;3\\
2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\
2&amp;4&amp;3&amp;(7)&amp;(7)&amp;4&amp;5&amp;4\\
4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\
2&amp;4&amp;4&amp;2&amp;(7)&amp;2&amp;5&amp;2\\
4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\
4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\
\end{matrix}
\]</span></p>
<p>以生长区域区域平均值为<code>(9+8+8+9+8+8+7+7+7+7+7)/11=7.7272</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于5.7272的像素。</p>
<p><span class="math display">\[
\begin{matrix}
3&amp;3&amp;4&amp;(7)&amp;(6)&amp;4&amp;5&amp;2\\
4&amp;4&amp;(8)&amp;(9)&amp;(7)&amp;4&amp;3&amp;3\\
2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\
2&amp;4&amp;3&amp;(7)&amp;(7)&amp;4&amp;5&amp;4\\
4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\
2&amp;4&amp;4&amp;2&amp;(7)&amp;2&amp;5&amp;2\\
4&amp;4&amp;3&amp;2&amp;(6)&amp;2&amp;3&amp;3\\
4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\
\end{matrix}
\]</span></p>
<p>以生长区域区域平均值为<code>(9+8+8+9+8+8+7+7+7+7+7+6+6)/13=7.4615</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于5.4615的像素。</p>
<p>找不到。符合终止准则，生长结束。</p>
<p>故得到如下结果：</p>
<p><span class="math display">\[
\begin{matrix}
&amp; &amp;1&amp;1&amp; \\
&amp;1&amp;1&amp;1&amp; \\
&amp; &amp;1&amp; &amp; \\
&amp; &amp;1&amp;1&amp; \\
&amp; &amp;1&amp;1&amp;1\\
&amp; &amp; &amp;1&amp; \\
&amp; &amp; &amp;1&amp; \\
&amp; &amp; &amp; &amp; \\
\end{matrix}
\]</span></p>
]]></content>
      <categories>
        <category>快门工</category>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
        <tag>区域生长</tag>
        <tag>图像分割</tag>
      </tags>
  </entry>
  <entry>
    <title>二值图像的轮廓提取与边界跟踪</title>
    <url>/2019/12/17/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E4%BA%8C%E5%80%BC%E5%9B%BE%E5%83%8F%E7%9A%84%E8%BD%AE%E5%BB%93%E6%8F%90%E5%8F%96%E4%B8%8E%E8%BE%B9%E7%95%8C%E8%B7%9F%E8%B8%AA/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<p>对二值图像，若一亮点周围 8 个点均为黑点，则其为非轮廓点，将之置为黑点。对所有亮点执行此操作即可获得轮廓。</p>
<p>获得轮廓后可由其上一点（一般最左上）跟踪出整个边界，同时记录信息。如对于以下轮廓：</p>
<p><span class="math display">\[
\begin{matrix}
c\backslash r  &amp;_0&amp;_1&amp;_2&amp;_3&amp;_4&amp;_5&amp;_6\\
_0&amp;1&amp;1&amp; &amp; &amp; &amp; &amp; \\
_1&amp;1&amp; &amp;1&amp;1&amp;1&amp;1&amp;1\\
_2&amp;1&amp; &amp; &amp; &amp; &amp; &amp;1\\
_3&amp;1&amp;1&amp; &amp; &amp; &amp;1&amp; \\
_4&amp; &amp; &amp;1&amp;1&amp; &amp;1&amp; \\
_5&amp; &amp; &amp; &amp; &amp;1&amp; &amp; \\
\end{matrix}
\]</span></p>
<p>类似广搜地，定义一个<code>dir[4][2]={ {0,1},{-1,0},{0,-1},{1,0} };</code>或<code>dir[8][2]={ {0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1},{1,0},{1,1} };</code>。</p>
<p>由于起始点是最左上的角，所以对于四方向的情况，搜索从方向3开始；对于八方向的情况则从5开始（好傻冒的约定，为啥不把开始搜索的作为0……）。</p>
<p>因为这个SB约定，搜索下一个逆时针方向时对应的下标是<code>(i+1)%4</code>或<code>(i+1)%8</code>而非<code>i+1</code>。顺时针类似。</p>
<p>对这个图使用八方向的顺时针搜索方式，第一个点从方向5开始，到方向0找到了下一个点<code>(0,1)</code>。</p>
<p>接下来为了保持顺时针的跟踪方向，应将当前方向也就是0逆时针旋转一个方向再进行顺时针搜索；若是正在进行逆时针搜索就顺时针旋转一个方向再逆时针搜索，即<code>(i+3)%4</code>或<code>(i+7)%8</code>。特别的，对八方向的情况，如果是斜着过来的（方向为奇数），则旋转两个方向。这样可以保证之前走过的点最后被搜索到。</p>
<p>因此对该图的第二次搜索由方向1开始，顺时针到方向7找到下一个点<code>(1,2)</code>。</p>
<p>依次类推，每次的方向分别是：<code>0700006565343422</code>。</p>
<p>这玩意叫<strong>8连通方向码</strong>，或<strong>8方向链码</strong>。</p>
<p>每次变到当前方向分别是顺时针旋转了：<code>2170002171271720</code>个方向过来的。</p>
<p>这玩意叫<strong>8方向差分链码</strong>。</p>
<p>为了统一不同起点的不同情况，引入<strong>归一化链码</strong>。同一个封闭边界的不同起点的各个链码可以看作是由表示该边界的一串数字循环移位得到的，如果把这一串数看作N位自然数，则不同的起点就形成不同大小的N位自然数，将最小的N位自然数串作为归一化链码。</p>
<p>示例轮廓的归一化链码为：<code>0000656534342207</code>。</p>
<p>链码可以计算周长。斜着走即奇数方向的按根二算，否则按一算，加起来即可。</p>
]]></content>
      <categories>
        <category>快门工</category>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
        <tag>轮廓提取</tag>
        <tag>边界跟踪</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML与CSS基础知识</title>
    <url>/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/HTML%E4%B8%8ECSS/HTML%E4%B8%8ECSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<h1 id="css基础">CSS基础</h1>
<p>CSS，Cascading Style Sheets，层叠样式表单。层叠是指多个样式可以同时应用于同一个页面或网页中的同一个标签，执行的效果按照“层叠规则”；当标签的样式定义发生冲突时，靠近标签的定义将生效。利用CSS可实现内容和形式的分离。</p>
<p>按照加入方式不同，可分为：</p>
<ul>
<li><p>行内样式表：<code>&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; 内容 &lt;/标签名&gt;</code>。优先度最高，可控制一个标签。</p></li>
<li><p>内部样式表：将CSS代码集中写在HTML文档的head头部标签中，并且用style标签定义。 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;CSS&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    选择器 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;style&gt;</span></pre></td></tr></table></figure> 优先度次之，可控制整个页面。</p></li>
<li><p>外部样式表：也是在头文件中写<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;test.css&quot;&gt;&lt;/link&gt;</code>，即，用href属性指定CSS文件位置，type属性设定为<code>&quot;text/css&quot;</code>，rel属性设定为<code>&quot;stylesheet&quot;</code>。优先度最低，但方便。</p></li>
</ul>
<p>样式优先级规则可以通过<code>!important</code>关键字进行改变，如<code>div{color:#f00!important;color:#000;}</code>，#f00的优先级被提升，将高于#000，最终显示#f00。</p>
<p>样式定义的基本格式包括选择器、属性和属性值。定义通用样式时，选择器设为<code>*</code>。而<code>p{ font-family: &quot;宋体&quot;; }</code>定义的样式仅作用于HTML文件的<code>&lt;p&gt;</code>标记、<code>font-family</code>属性。形如<code>p.right {text-align:right }</code>定义了属性选择器，这个样式就仅对right类中的p有效。如果想让它作用于作用于HTML中的某个p，就须就须设置为<code>&lt;p class=&quot;right&quot; ... /&gt;</code>。形如<code>p＃green {color:green}</code>定义了id选择器，仅对<code>&lt;p id=&quot;green&quot;&gt;...&lt;/p&gt;</code>有效。</p>
<p>常用的字体CSS属性有font-family、font-size、font-style和font-weight。常用的文本CSS属性有text-indent、text-align、text-decoration、text-transform和color、letter-spacing、line-height。常用的背景CSS属性有background-color、background-image、background-repeat、background-position和background-attchment。</p>
<h1 id="box模型">BOX模型</h1>
<p>BOX模型制定了元素如何在页面中显示，可以理解为，顶部俯视一些装了东西的盒子，盒子里装的东西即内容（content）；东西与盒子之间的空隙即内边距（padding）；盒子本身的厚度即边框（border）；盒子外与其他盒子之间的间隔即外边距（margin），也就是说，BOX模型有内容、内边距、边框、外边距四要素。</p>
<p>例如<code>{position:absolute;left:20px;top:20px }</code>设置了一个相对位置。</p>
<h1 id="示例">示例</h1>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">text/css</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    ul&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        list-style-type: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        line-height: 200%;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    li&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        padding: 5px;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 10 10<span class="selector-tag">px</span>;   <span class="comment">/*这个用来调整导航之间的间距*/</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        display: inline-block;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        width: 120px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        height: 40px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        text-align: center;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        display: inline;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>学院概况<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>机构设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>教学科研<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>国际交流<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>党建思政<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></pre></td></tr></table></figure>
<p>效果如下：</p>
<style type=text/css>
    ul{
        list-style-type: none;
        line-height: 200%;
    }
    li{
        padding: 5px;
        margin: 10 10px;   /*这个用来调整导航之间的间距*/
        display: inline-block;
        width: 120px;
        height: 40px;
        text-align: center;
        display: inline;
    }
</style>
<ul style="list-style-type:none;line-height: 200%;">
<li>
<a href=http://www.baidu.com>网站首页</a>
</li>
<li>
<a href=http://www.baidu.com>学院概况</a>
</li>
<li>
<a href=http://www.baidu.com>机构设置</a>
</li>
<li>
<a href=http://www.baidu.com>教学科研</a>
</li>
<li>
<a href=http://www.baidu.com>国际交流</a>
</li>
<li>
<a href=http://www.baidu.com>党建思政</a>
</li>
</ul>
]]></content>
      <categories>
        <category>表世界</category>
        <category>HTML与CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2基础知识</title>
    <url>/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Structs2%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
理解MVC模式与SSH框架。
</center>
<a id="more"></a>
<h1 id="struts2对请求的基本处理流程及相关配置文件">Struts2对请求的基本处理流程及相关配置文件</h1>
<p>Web应用项目启动时会先加载<code>Web.xml</code>配置文件，通过里面指定的过滤器拦截请求，因此开发Struts框架Web应用项目，首先在项目配置文件web.xml中增加核心过滤器配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.FilterDispatcher<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr></table></figure>
<p>符合过滤要求的请求将由<code>struts.xml</code>中配置的Struts2拦截器拦截。</p>
<p>自定义拦截器的基类一般是Interceptor，一般至少包括<code>init()</code>、<code>destroy()</code>和<code>intercept()</code>三个函数。在拦截函数中通过<code>invocation.invok()</code>调用Action，程序流转至Action。</p>
<p>例如如下自定义拦截器：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"itcast"</span> <span class="attr">namespace</span>=<span class="string">"/test"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"定义的拦截器名字"</span> <span class="attr">class</span>=<span class="string">"定义的拦截器类文件"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"定义的拦截器堆栈名字"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">&lt;!--以下给出拦截器堆栈包含的拦截器--&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"定义的拦截器名字"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">...</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		...</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">&lt;!--在Action中指出要包含拦截器--&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"定义的拦截器堆栈名字"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<p>defult-interceptor-ref指定默认拦截器。</p>
<p>转至Action后将从<code>struts.xml</code>中找到动作的处理类执行。<code>struts.xml</code>主要的部分如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"包名"</span> <span class="attr">namespace</span>=<span class="string">"名字空间，可不写"</span> <span class="attr">extends</span>=<span class="string">"继承的包，可不写"</span> <span class="attr">abstract</span>=<span class="string">"是否是抽象包，可不写"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span>  <span class="attr">name</span>=<span class="string">"请求的动作名"</span> <span class="attr">class</span>=<span class="string">"处理类的路径，可不写"</span> <span class="attr">method</span>=<span class="string">"方法名，缺省为execute方法"</span> <span class="attr">converter</span>=<span class="string">"指定类型转换器，可不写"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"动作的返回值，缺省为success"</span> <span class="attr">type</span>=<span class="string">"返回结果类型，缺省为dispatcher，可转向一个结果页面；redirectAction转向动作；redirect转向动作或url"</span>&gt;</span>结果页面<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<p>可以看出，作为动作的处理类的Java类应当无形参并返回一个String，缺省的映射函数为<code>execute()</code>方法，用其它方法返回的话需要在method中设置一下。默认的基类为ActionSupport。</p>
<p>还可使用include标签导入多个<code>struts-xxx.xml</code>。</p>
<p>Web项目部署路径包括协议名、服务器名、端口号、项目名称、（可能有的）名字空间和动作名，也就是形如<code>http://localhost/8088/struts2/simple/hello.action</code>，可以看出Action缺省的扩展名为.action。这里没有额外的名字空间，所以服务器将在<code>/simple</code>下搜索<code>hello.action</code>；形如<code>http://server/struts2/path1/path2/path3/hello.action</code>，服务器首先在<code>/path1/path2/path3</code>名字空间搜索。</p>
<p>在Action有较多方法（即struts.xml配置中使用了通配符配置、定义Action）时，Struts2支持通过函数名调用Action的方法（函数），即动态方法调用。当多个action中都使用到了相同result，在<code>struts.xml</code>中用<code>globle-results</code>可把result定义为全局结果。</p>
<p>除<code>Web.xml</code>和<code>struts.xml</code>外，还有struts-default.xml、struts-plugin.xml、struts.xml、struts.properties。加载顺序为struts-default.xml &gt; struts-plugin.xml &gt; struts.xml &gt; struts.properties &gt; web.xml。</p>
<p>Action函数所在类文件，用ActionContext的静态成员函数getContext获取Action运行环境及内容。JSP页面可直接使用的内置对象Request所对应的Java类是HttpServletRequest，Response所对应的Java类是HttpServletResponse。</p>
<p>示例，这是一个上传文件的表单，提交该表单后由一个JSP表达式获取Action运行环境及内容，调用Action：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!--enctype属性规定在发送到服务器之前应该如何对表单数据进行编码。multipart/form-data即不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。--&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;form enctype=<span class="string">"multipart/from-data"</span> action=<span class="string">"$&lt;%=request.getContextPath()&gt;/upload.action"</span> method=<span class="string">"post"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;input type=<span class="string">"file"</span> name=<span class="string">"uploadImage"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;input type=<span class="string">"submit"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p>jsp页面效果如下：</p>
<hr />
<form enctype="multipart/from-data">
<input type="file" name="uploadImage"> <input type="submit">
</form>
<hr />
<p>Action函数所在的Java类UploadAction:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadAction</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//上传的文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> File uploadImage;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//上传文件的类型</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> String uploadImageContentType;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//上传文件的名称</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> String uploadImageFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		String realpath =ServletActionContext.getServletContext( ).getRealPath(<span class="string">"/images"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		File file = <span class="keyword">new</span> File(realpath);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span>( !file.exists( ) )</span></pre></td></tr><tr><td class="code"><pre><span class="line">			file.mkdirs( );</span></pre></td></tr><tr><td class="code"><pre><span class="line">		FileUtils.copyFile(uploadImage, <span class="keyword">new</span> File(file,uploadImageFileName)); </span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>除此之外，ActionSupport还提供了一个<code>validate()</code>，可以在执行Action前对所有方法得到的值进行校验。当某个控件数据校验失败时，一般调用<code>addFieldError()</code>向系统的fieldErrors添加校验失败信息，在JSP页面可通过<code>s:fielderror</code>显示失败信息。如果有些方法不需要被校验，则可以在不需要使用校验的方法上注解<code>@SkipValidation</code>或使用形如<code>validateXxx()</code>的重写方法，这将只校验<code>xxx</code>方法。</p>
<h1 id="ssh框架">SSH框架</h1>
<p>SSH，Struts+Spring+Hibernate，是古代较为流行的一种Web应用程序开源框架。其设计模式分为表示层（View）、业务层（Service）、DAO层（DAO，Data Access Object，数据访问对象）和工具层（Util）、。实际使用时表示层请求业务层的方法（通过Struts请求动作，由Spring管理调度对象的生命周期——而不是new），业务层通过DAO层调用工具层完成对数据的操作（对数据的操作用到Hibernate，不过下面的例子用的JDBC）。</p>
<p>一个典型的程序如下，程序来自印度国家信息技术学院（？），<code>struts.xml</code>配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"Login"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"listAll"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.StudentAction"</span> <span class="attr">method</span>=<span class="string">"listAll"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>main.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"addStu"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.StudentAction"</span> <span class="attr">method</span>=<span class="string">"addStu"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>addNew.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"editStu"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.StudentAction"</span> <span class="attr">method</span>=<span class="string">"editStu"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>editStu.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"deleteStu"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.StudentAction"</span> <span class="attr">method</span>=<span class="string">"deleteStu"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"goToEdit"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.StudentAction"</span> <span class="attr">method</span>=<span class="string">"goToEdit"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>editStu.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"goToUpdate"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.UploadAction"</span> <span class="attr">method</span>=<span class="string">"goToUpload"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>upload.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">class</span>=<span class="string">"com.stu.Action.UploadAction"</span> <span class="attr">method</span>=<span class="string">"upload"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"savePath"</span>&gt;</span>upload/<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>/upload.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"fileUpload.maximumSize"</span>&gt;</span>1048576<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"fileUpload.allowedTypes"</span>&gt;</span>image/bmp,image/jpeg,image/gif,image/png<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<p>首先用一个modle类表示对应的数据库，把<strong>表映射为类</strong>、<strong>记录映射为对象</strong>、<strong>字段映射为类成员</strong>，这种方法叫ORM，Object Relation Mapping：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stu.model;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String StuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String StuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String EnterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String headImg;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String StuId, String StuName, <span class="keyword">int</span> course1, <span class="keyword">int</span> course2, <span class="keyword">int</span> course3, String EnterTime, String email)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.StuId = StuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.StuName = StuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course1 = course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course2 = course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course3 = course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.EnterTime = EnterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.email = email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStuId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> StuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStuId</span><span class="params">(String stuId)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StuId = stuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStuName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> StuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStuName</span><span class="params">(String stuName)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StuName = stuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCourse1</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCourse1</span><span class="params">(<span class="keyword">int</span> course1)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course1 = course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCourse2</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCourse2</span><span class="params">(<span class="keyword">int</span> course2)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course2 = course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCourse3</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCourse3</span><span class="params">(<span class="keyword">int</span> course3)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.course3 = course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEnterTime</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> EnterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnterTime</span><span class="params">(String enterTime)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        EnterTime = enterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.email = email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHeadImg</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> headImg;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeadImg</span><span class="params">(String headImg)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.headImg = headImg;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">"id="</span> + id +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", StuId='"</span> + StuId + <span class="string">'\''</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", StuName='"</span> + StuName + <span class="string">'\''</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", course1="</span> + course1 +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", course2="</span> + course2 +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", course3="</span> + course3 +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", EnterTime='"</span> + EnterTime + <span class="string">'\''</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">", headImg='"</span> + headImg + <span class="string">'\''</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="string">'&#125;'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>接下来编写DAO层操作数据时使用的工具层：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stu.Util;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.CallableStatement;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.ResultSetMetaData;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//DAO层通过该类操作数据库</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> JDBCUtil instance = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> CallableStatement callableStatement = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> PreparedStatement pst = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> ResultSet rst = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//单例模式的对象生成，JDBCUtil只需要有一个实例</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JDBCUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span> (instance==<span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//数据库连接URL字符串一般情况下包括连接方式、服务器地址（名称）、端口号和数据库名称四部分。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			String url = <span class="string">"jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			String username = <span class="string">"root"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			String password = <span class="string">"niitniit"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			instance = <span class="keyword">new</span> JDBCUtil(driver, url, username, password);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> instance;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JDBCUtil</span><span class="params">(String driver, String url, String username, String password)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.driver = driver;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.url = url;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.username = username;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.password = password;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//创建连接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">//动态加载驱动类，此时会自动新建一个Driver的对象并注册到DriverManager</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				Class.forName(driver);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.println(<span class="string">"..."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.println(e.getMessage());</span></pre></td></tr><tr><td class="code"><pre><span class="line">				e.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//创建连接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = DriverManager.getConnection(url, username, password);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> conn;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//数据库的更新操作</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">int</span> affectedLine = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = <span class="keyword">this</span>.getConnection();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//把SQL语句串转换为PreparedStatement对象。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			pst = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">if</span> (params != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="comment">//调用prepareStatement的setObject以绑定参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					pst.setObject(i + <span class="number">1</span>, params[i]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//更新</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			affectedLine = pst.executeUpdate();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			closeAll();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> affectedLine;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//查询结果集</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">private</span> ResultSet <span class="title">executeQueryRS</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = <span class="keyword">this</span>.getConnection();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//把SQL语句串转换为PreparedStatement对象。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			pst = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">if</span> (params != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="comment">//调用prepareStatement的setObject以绑定参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					pst.setObject(i + <span class="number">1</span>, params[i]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//执行查询</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			rst = pst.executeQuery();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> rst;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//查询单个结果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">executeQuerySingle</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		Object object = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = <span class="keyword">this</span>.getConnection();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//把SQL语句串转换为PreparedStatement对象。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			pst = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">if</span> (params != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="comment">//调用prepareStatement的setObject以绑定参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					pst.setObject(i + <span class="number">1</span>, params[i]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//执行查询</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			rst = pst.executeQuery();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//但只返回第一个结果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">if</span> (rst.next()) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				object = rst.getObject(<span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			closeAll();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> object;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//查询结果集并返回list</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">excuteQuery</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">//查询结果集</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		ResultSet rs = executeQueryRS(sql, params);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">//数据的相关信息</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		ResultSetMetaData rsmd = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">int</span> columnCount = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//获取数据信息</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			rsmd = rs.getMetaData();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//获取行数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			columnCount = rsmd.getColumnCount();   </span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e1.getMessage()); </span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();   </span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= columnCount; i++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					map.put(rsmd.getColumnLabel(i), rs.getObject(i));</span></pre></td></tr><tr><td class="code"><pre><span class="line">					&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				list.add(map);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());   </span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				closeAll();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> list;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//从前面的结果集中返回单个结果（好像是吧……）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">excuteQuery</span><span class="params">(String sql, Object[] params,<span class="keyword">int</span> outParamPos, <span class="keyword">int</span> SqlType)</span> </span>&#123;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">		Object object = <span class="keyword">null</span>;      </span></pre></td></tr><tr><td class="code"><pre><span class="line">		conn = <span class="keyword">this</span>.getConnection();       </span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span> &#123;           </span></pre></td></tr><tr><td class="code"><pre><span class="line">			callableStatement = conn.prepareCall(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">if</span>(params != <span class="keyword">null</span>) &#123;             </span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;      </span></pre></td></tr><tr><td class="code"><pre><span class="line">					callableStatement.setObject(i + <span class="number">1</span>, params[i]);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			callableStatement.registerOutParameter(outParamPos, SqlType);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			callableStatement.execute();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			object = callableStatement.getObject(outParamPos);   </span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;     </span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(e.getMessage());       </span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				closeAll();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> object;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">closeAll</span><span class="params">()</span> </span>&#123;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span> (rst != <span class="keyword">null</span>) &#123;      </span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span> &#123;               </span></pre></td></tr><tr><td class="code"><pre><span class="line">				rst.close();          </span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">					System.out.println(e.getMessage());  </span></pre></td></tr><tr><td class="code"><pre><span class="line">					&#125;     </span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span> (pst != <span class="keyword">null</span>) &#123;      </span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span> &#123;               </span></pre></td></tr><tr><td class="code"><pre><span class="line">				pst.close();       </span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">					System.out.println(e.getMessage()); </span></pre></td></tr><tr><td class="code"><pre><span class="line">					&#125;         </span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span> (callableStatement != <span class="keyword">null</span>) &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span> &#123;                    </span></pre></td></tr><tr><td class="code"><pre><span class="line">				callableStatement.close();  </span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">					System.out.println(e.getMessage());   </span></pre></td></tr><tr><td class="code"><pre><span class="line">					&#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;             </span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span> &#123;                   </span></pre></td></tr><tr><td class="code"><pre><span class="line">				conn.close();         </span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">					System.out.println(e.getMessage());    </span></pre></td></tr><tr><td class="code"><pre><span class="line">					&#125;         </span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;       </span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>接下来是DAO层的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stu.Util;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.stu.model.Student;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDao</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//增</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Student student)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String sql = <span class="string">"insert into Student(StuId,StuName,Course1,Course2,Course3,EnterTime,Email) values(?,?,?,?,?,?,?)"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JDBCUtil util = JDBCUtil.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        util.executeUpdate(sql, <span class="keyword">new</span> Object[]&#123;student.getStuId(), student.getStuName(), student.getCourse1(),student.getCourse2(), student.getCourse3(), student.getEnterTime(), student.getEmail()&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//删</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String sql = <span class="string">"delete from Student where id = ?"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JDBCUtil util = JDBCUtil.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        util.executeUpdate(sql, <span class="keyword">new</span> Object[]&#123;id&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//选</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Student <span class="title">select</span><span class="params">(<span class="keyword">int</span> Id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String sql = <span class="string">"select * from Student where id = ?"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JDBCUtil util = JDBCUtil.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        List&lt;Object&gt; tmp = util.excuteQuery(sql, <span class="keyword">new</span> Object[]&#123;Id&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        HashMap&lt;String, Object&gt; map;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Student stu;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String StuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String StuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String EnterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String headImg;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (Object obj : tmp) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            map = (HashMap&lt;String, Object&gt;) obj;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            StuId = (String) map.get(<span class="string">"StuId"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            StuName = (String) map.get(<span class="string">"StuName"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course1 = (Integer) map.get(<span class="string">"Course1"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course2 = (Integer) map.get(<span class="string">"Course2"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course3 = (Integer) map.get(<span class="string">"Course3"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            EnterTime = format.format((Timestamp) (map.get(<span class="string">"EnterTime"</span>)));</span></pre></td></tr><tr><td class="code"><pre><span class="line">            email = (String) map.get(<span class="string">"Email"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            headImg = (String) map.get(<span class="string">"headImg"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu = <span class="keyword">new</span> Student(StuId, StuName, course1, course2, course3, EnterTime, email);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu.setHeadImg(headImg);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu.setId(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> stu;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//查</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Student&gt; <span class="title">queryAll</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String sql = <span class="string">"select * from Student"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ArrayList&lt;Student&gt; res = <span class="keyword">new</span> ArrayList&lt;Student&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JDBCUtil util = JDBCUtil.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        List&lt;Object&gt; tmp = util.excuteQuery(sql, <span class="keyword">null</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        HashMap&lt;String, Object&gt; map;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Student stu;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String StuId;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String StuName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course1;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course2;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> course3;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String EnterTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String email;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String headImg;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (Object obj : tmp) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            map = (HashMap&lt;String, Object&gt;) obj;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Id = (Integer) map.get(<span class="string">"id"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            StuId = (String) map.get(<span class="string">"StuId"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            StuName = (String) map.get(<span class="string">"StuName"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course1 = (Integer) map.get(<span class="string">"Course1"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course2 = (Integer) map.get(<span class="string">"Course2"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            course3 = (Integer) map.get(<span class="string">"Course3"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            EnterTime = format.format((Timestamp) (map.get(<span class="string">"EnterTime"</span>)));</span></pre></td></tr><tr><td class="code"><pre><span class="line">            email = (String) map.get(<span class="string">"Email"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            headImg = (String) map.get(<span class="string">"headImg"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu = <span class="keyword">new</span> Student(StuId, StuName, course1, course2, course3, EnterTime, email);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu.setHeadImg(headImg);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            stu.setId(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            res.add(stu);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> res;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//更新</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Student student)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String sql = <span class="string">"update Student set StuId = ? , StuName = ? , Course1 = ? , Course2 = ? , Course3 = ? , EnterTime = ? , Email = ? , headImg = ? where id =  ?"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        JDBCUtil util = JDBCUtil.getInstance();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        util.executeUpdate(sql, <span class="keyword">new</span> Object[]&#123;student.getStuId(), student.getStuName(), student.getCourse1(),</span></pre></td></tr><tr><td class="code"><pre><span class="line">                student.getCourse2(), student.getCourse3(), student.getEnterTime(), student.getEmail(), student.getHeadImg(), student.getId()&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>接下来是业务层，这里写了两个类，一个对应对记录的各种操作：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stu.Action;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.stu.Util.StudentDao;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.stu.model.Student;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; grade;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Student student = <span class="keyword">new</span> Student();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> ArrayList&lt;Student&gt; students = <span class="keyword">new</span> ArrayList&lt;Student&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StudentAction</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        grade = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            grade.add(i);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Id = id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> student;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getGrade</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> grade;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGrade</span><span class="params">(List&lt;Integer&gt; grade)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.grade = grade;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudent</span><span class="params">(Student student)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.student = student;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Student&gt; <span class="title">getStudents</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> students;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudents</span><span class="params">(ArrayList&lt;Student&gt; students)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.students = students;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">listAll</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        students = StudentDao.queryAll();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(students.size());</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addStu</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StudentDao.insert(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editStu</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StudentDao.update(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">goToEdit</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        student = StudentDao.select(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ActionContext.getContext().getSession().put(<span class="string">"headImg"</span>,student.getHeadImg());</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteStu</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StudentDao.delete(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validateAddStu</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        vali();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validateEditStu</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        vali();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">vali</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String username = student.getStuName();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String studentId = student.getStuId();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String email = student.getEmail();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (studentId == <span class="keyword">null</span> || studentId.isEmpty())</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">this</span>.addFieldError(<span class="string">"error"</span>, <span class="string">"Student Id cannot be empty"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!Pattern.matches(<span class="string">"^[a-zA-Z][a-zA-Z0-9_]&#123;3,14&#125;$"</span>, studentId))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">this</span>.addFieldError(<span class="string">"error"</span>, <span class="string">"Student Id must start with character\n and can follow with"</span> +</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    <span class="string">" digital  character or underline which length between 4 and 15"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (username == <span class="keyword">null</span> || username.isEmpty())</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">this</span>.addFieldError(<span class="string">"error"</span>, <span class="string">"Student Name cannot be empty"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (email == <span class="keyword">null</span> || email.isEmpty())</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">this</span>.addFieldError(<span class="string">"error"</span>, <span class="string">"email cannot be empty"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!Pattern.matches(<span class="string">"^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$"</span>, email))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">this</span>.addFieldError(<span class="string">"error"</span>, <span class="string">"email address illegal"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>一个专门对应图片的上传：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stu.Action;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.stu.Util.StudentDao;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.stu.model.Student;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String savePath;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> File file;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String fileFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> String fileContentType;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Student student;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSavePath</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> savePath;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSavePath</span><span class="params">(String savePath)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.savePath = savePath;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">getFile</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> file;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFile</span><span class="params">(File file)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.file = file;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileFileName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> fileFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileFileName</span><span class="params">(String fileFileName)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.fileFileName = fileFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileContentType</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> fileContentType;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileContentType</span><span class="params">(String fileContentType)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.fileContentType = fileContentType;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Id = id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> student;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudent</span><span class="params">(Student student)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">this</span>.student = student;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String path = ServletActionContext.getServletContext().getRealPath(savePath);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        File saveFile = <span class="keyword">new</span> File(path);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!saveFile.exists())</span></pre></td></tr><tr><td class="code"><pre><span class="line">            saveFile.mkdir();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String saveFilePath = path+<span class="string">"/"</span> + fileFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(saveFilePath);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        BufferedInputStream bis = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        BufferedOutputStream bos = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String url = savePath + <span class="string">"/"</span> + fileFileName;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(file));</span></pre></td></tr><tr><td class="code"><pre><span class="line">            bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(saveFilePath));</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) file.length()];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">int</span> len;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">while</span> ((len = bis.read(buf)) != -<span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                bos.write(buf, <span class="number">0</span>, len);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            student = StudentDao.select(id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            System.out.println(id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (student != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                student.setHeadImg(url);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                StudentDao.update(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                student = StudentDao.select(id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            System.out.println(student);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            e.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (bis != <span class="keyword">null</span>) bis.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (bos != <span class="keyword">null</span>) bos.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">goToUpload</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        student = StudentDao.select(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        id = Id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ActionContext.getContext().getSession().put(<span class="string">"headImg"</span>,student.getHeadImg());</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(Id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>在页面层中，加载完毕后先列出所有记录的函数：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span>%&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;% </span></pre></td></tr><tr><td class="code"><pre><span class="line">	String path = request.getContextPath(); </span></pre></td></tr><tr><td class="code"><pre><span class="line">	String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">	pageContext.setAttribute(<span class="string">"basePath"</span>,basePath); </span></pre></td></tr><tr><td class="code"><pre><span class="line">%&gt; </span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;head&gt;...&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;body&gt;&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;script  type=<span class="string">"text/javascript"</span>&gt;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">		window.location.replace(<span class="string">"$&#123;pageScope.basePath&#125;/listAll"</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>
<p>这个过程会跳转到<code>main.jsp</code>：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String path = request.getContextPath();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String basePath = request.getScheme() + <span class="string">"://"</span> + request.getServerName() + <span class="string">":"</span> + request.getServerPort() + path + <span class="string">"/"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    pageContext.setAttribute(<span class="string">"basePath"</span>, basePath);</span></pre></td></tr><tr><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        th &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            width: <span class="number">1</span>px;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            white-space: nowrap; <span class="comment">/* 自适应宽度*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            word-<span class="keyword">break</span>: keep-all; <span class="comment">/* 避免长单词截断，保持全部 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            background-color: gray;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            text-color: white;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        td &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            text-align: center;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        table &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            table-layout: fixed;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            width: <span class="number">100</span>%;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/style&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h2&gt;Student Info Manage System&lt;/h2&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;hr/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;span&gt;&lt;a href="$&#123;pageScope.basePath&#125;/listAll"&gt;refresh&lt;/a&gt;&lt;/span&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;span&gt;&lt;a href="$&#123;pageScope.basePath&#125;/addNew.jsp"&gt;add student&lt;/a&gt;&lt;/span&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;table align=<span class="string">"center"</span> border=<span class="string">"1"</span> width=<span class="string">"50%"</span> cellspacing=<span class="string">"0"</span> cellpadding=<span class="string">"0"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;序列号&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;头像&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;学生学号&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;学生姓名&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;课程1成绩&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;课程2成绩&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;课程3成绩&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;入学时间&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;电子邮箱&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;th&gt;上传头像&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:iterator value=<span class="string">"students"</span> status=<span class="string">"i"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="Id"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;img style="width: 30px;height: 30px;border-radius: 50%" src="&lt;%=basePath%&gt;$&#123;headImg&#125;"&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="StuId"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="StuName"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="course1"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="course2"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="course3"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="EnterTime"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;s:property value="email"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;a href="$&#123;pageScope.basePath&#125;/goToEdit?Id=$&#123;Id&#125;"&gt;edit&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;a href="$&#123;pageScope.basePath&#125;/deleteStu?Id=$&#123;Id&#125;"&gt;delete&lt;/a&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;td&gt;&lt;a href="$&#123;pageScope.basePath&#125;/goToUpdate?Id=$&#123;Id&#125;"&gt;upload&lt;/a&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/s:iterator&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/table&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr></table></figure>
<p>这个页面有俩按钮，可以刷新和添加记录。添加记录页面如下:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	...</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"css/jquery.datetimepicker.min.css"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;script src="js/jquery.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;script src="js/jquery.datetimepicker.full.min.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h2&gt;Add New Student Info&lt;/h2&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;hr/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;s:form method=<span class="string">"post"</span> action=<span class="string">"addStu"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:fielderror value=<span class="string">"error"</span> cssStyle=<span class="string">"list-style: none;color: red"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:bean id=<span class="string">"aa"</span> name=<span class="string">"com.stu.Action.StudentAction"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:textfield name=<span class="string">"student.StuId"</span> label=<span class="string">"Student ID"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:textfield name=<span class="string">"student.StuName"</span> label=<span class="string">"Student Name"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course1"</span> label=<span class="string">"Course1 Grade"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course2"</span> label=<span class="string">"Course2 Grade"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course3"</span> label=<span class="string">"Course3 Grade"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:textfield readonly=<span class="string">"true"</span> value=<span class="string">"20000101"</span> cssClass=<span class="string">"datetimepicker"</span> name=<span class="string">"student.EnterTime"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                     label=<span class="string">"EnterTime"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:textfield name=<span class="string">"student.email"</span> label=<span class="string">"Email"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:reset value=<span class="string">"重置"</span> align=<span class="string">"left"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:submit value=<span class="string">"登陆"</span> align=<span class="string">"left"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/s:form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    jQuery(<span class="string">'.datetimepicker'</span>).datetimepicker(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        timepicker: <span class="keyword">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        format: <span class="string">'Ymd'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>
<p>每条记录还分别有编辑、删除和上传照片按钮，编辑界面如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String path = request.getContextPath();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String basePath = request.getScheme() + <span class="string">"://"</span> + request.getServerName() + <span class="string">":"</span> + request.getServerPort() + path + <span class="string">"/"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String headImg = (String) session.getAttribute(<span class="string">"headImg"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          href=<span class="string">"css/jquery.datetimepicker.min.css"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;script src="js/jquery.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;script src="js/jquery.datetimepicker.full.min.js"&gt;&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h2&gt;update Student Info&lt;/h2&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;hr/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;form action=<span class="string">"editStu"</span> method=<span class="string">"post"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:bean name=<span class="string">"com.stu.Action.StudentAction"</span> id=<span class="string">"aa"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;s:fielderror value=<span class="string">"error"</span> cssStyle=<span class="string">"list-style: none;color: red"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;table&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr hidden=<span class="string">"hidden"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Student ID:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;input type="text" name="student.Id" value="$&#123;student.id&#125;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Student ID:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;input type="text" name="student.StuId" value="$&#123;student.stuId&#125;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Student Name:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;input type="text" name="student.StuName" value="$&#123;student.stuName&#125;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Course1 Grade:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course1"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Course2 Grade:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course2"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Course3 Grade:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;s:select list=<span class="string">"#aa.grade"</span> name=<span class="string">"student.course3"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Enter Time:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;input readonly id=<span class="string">"datetimepicker"</span> type=<span class="string">"text"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                           name="student.EnterTime" value="$&#123;student.enterTime&#125;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;Email:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;input type="String" name="student.email" value="$&#123;student.email&#125;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;head img:&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td&gt;&lt;img style="width: 100px;height: 100px;" src="&lt;%=basePath%&gt;&lt;%=headImg%&gt;"/&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &lt;td colspan="2"&gt;&lt;input type="submit" value="submit"&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/table&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    jQuery(<span class="string">'#datetimepicker'</span>).datetimepicker(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        timepicker: <span class="keyword">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        format: <span class="string">'Ymd'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>
<p>上传界面如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String path = request.getContextPath();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String basePath = request.getScheme() + <span class="string">"://"</span> + request.getServerName() + <span class="string">":"</span> + request.getServerPort() + path + <span class="string">"/"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    String headImg = (String) session.getAttribute(<span class="string">"headImg"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;head&gt;...&lt;/head&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h3&gt;Image Upload&lt;/h3&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;hr/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;form action=<span class="string">"upload.action"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;label for="file"&gt;Upload your image :&lt;/label&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;input type=<span class="string">"file"</span> id=<span class="string">"file"</span> name=<span class="string">"file"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;label style=<span class="string">"display: block;"</span> <span class="keyword">for</span>=<span class="string">"file"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &lt;img style=<span class="string">"width: 400px;height: 400px;"</span> id=<span class="string">"Img"</span> src=<span class="string">"&lt;%=basePath%&gt;&lt;%=headImg%&gt;"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;/label&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Upload"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/center&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $(<span class="string">'#file'</span>).change(function () &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $(<span class="string">'p'</span>).css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">var</span> objUrl = getObjectURL(<span class="keyword">this</span>.files[<span class="number">0</span>]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (objUrl) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            $(<span class="string">'#Img'</span>).attr(<span class="string">"src"</span>, objUrl);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="function">function <span class="title">getObjectURL</span><span class="params">(file)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">var</span> url = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (window.createObjectURL !== undefined) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                url = window.createObjectURL(file);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> window.webkitURL = undefined;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (window.URL !== undefined) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                url = window.URL.createObjectURL(file);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (window.webkitURL !== undefined) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                url = window.webkitURL.createObjectURL(file);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> url;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/script&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure>
<p>Struts感觉好像有点过时，应该只会了解到这里，不会再深入学习了。Spring MVC现在好像用得多？还有以JS为主的那些东西……</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>Struts2</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript与jQuery基础知识</title>
    <url>/2019/12/15/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/JavaScript%E4%B8%8EjQuery%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<p>JS是JavaScript的缩写，是互联网上被广泛应用的脚本语言。</p>
<h1 id="代码的引入">代码的引入</h1>
<p>JS代码一般出现在<code>.html</code>和<code>.js</code>文件中，通过单独写成<code>.js</code>，使用外部代码引用的方式实现JS代码可以增强JS模块化开发程度并且提高代码重用率；在HTML网页中编写JS代码时，推荐出现在head区域。</p>
<h2 id="head和body中插入">head和body中插入</h2>
<p>通过<code>&lt;script&gt;</code>标签把代码插入到HTML页面，<code>&lt;script type=&quot;text/JavaScript&quot;&gt;</code>和<code>&lt;/script&gt;</code>分别标记了JS代码的开始和结束。也就是说，在HTML页面文件引入JS代码，script标签的type属性要设置为<code>text/JavaScript</code>。</p>
<h2 id="引用外部代码">引用外部代码</h2>
<p><code>script src=&quot;xx.js&quot;&gt;&lt;/script&gt;</code>。</p>
<h1 id="代码的编写">代码的编写</h1>
<p>使用分号来结束一条语句。</p>
<p>变量名区分大小写。</p>
<p>运算符有赋值、算术、比较、逻辑、连接和条件运算符。</p>
<p>只能在function内部进行访问的变量为局部变量，页面内所有函数都可以访问的变量为全局变量。</p>
<p>条件语句：<code>if</code>、<code>if...else...</code>、<code>if...else if...else...</code>和<code>switch</code>，switch语句要通过<code>break</code>防止代码自动转向到下一个case。</p>
<p>循环语句：<code>while</code>，<code>for</code>，<code>do...while</code>和<code>for...in</code>循环；语句<code>continue</code>会跳出当轮循环进行下一轮循环，语句<code>break</code>会结束整个循环。</p>
<p>常用的字符串操作函数：<code>oncat()</code>、<code>indexOf()</code>、<code>match()</code>、<code>replace()</code>、<code>split()</code>、<code>substr()</code>、<code>substring()</code>等。</p>
<p>八个能从数学对象直接访问的数学值：自然指数E、LN2、LN10、LOG2E、LOG10E、圆周率PI、根二SQRT2、根二分之一SQRT1_2。</p>
<p>用警示框输出信息，语句为<code>alert(&quot;xxx&quot;)</code>。</p>
<p>编写命名函数需要以<code>function</code>关键词开头，<code>return</code>指定JS函数的返回值。通过<strong>事件触发</strong>和<strong>被调用</strong>来执行。例如HTML脚本<code>&lt;input type=&quot;text&quot; size=&quot;30“ id=&quot;email&quot; onchange=&quot;checkEmail()&quot;&gt;</code>中，当输入框内容改变时触发事件“onchange”，此时调用JS函数<code>checkEmail()</code>；对一个更复杂些的例子，<code>&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; onblur=&quot;checkusername();checkusername2();&quot; onfocus=&quot;checkusername2();&quot; value=&quot;输入用户名&quot;&gt;</code>，表单中有一控件username为输入用户名，此脚本对username输入框的输入内容调用JS函数checkusername校验——注意，这里有多个函数出现，所以要写分号。常用于表单上的JS事件有onfocus（获得光标）、onblur（失去光标）、onchange和onsubmit等；常用于鼠标动作的JS事件有onclick、ondbclick、onmousedown、onmouseover和onmouseup等。</p>
<p>在HTML文件表单中对其所包含的控件调用JS函数成批校验时，书写的脚本为<code>&lt;form action=&quot;request.jsp&quot; name=&quot;form&quot; onsubmit=&quot;return check();&quot; method=&quot;post&quot;&gt;</code>。</p>
<p>想要生成页面控件对象时，HTML页面INPUT标签的type属性设为<code>text</code>可在页面得到输入框；type属性设为<code>password</code>可在页面得到口令框；type属性设为<code>radio</code>可在页面得到radio button；type属性设为<code>checkbox</code>可在页面得到checkbox；type属性设为<code>submit</code>可在页面得到submit按钮；type属性设为<code>reset</code>可在页面得到reset按钮；ype属性设为<code>textarea</code>可在页面得到多行编辑控件。</p>
<p>想要获取页面控件对象时，如果控件有id属性，如<code>&lt;input id=&quot;username&quot; type=&quot;text&quot; &gt;</code>可以<code>document.getElementById(&quot;username&quot;)</code>；也可以利用name属性，如<code>&lt;label name=&quot;female&quot;&gt;Female&lt;/label&gt;</code>可以<code>document.getElementsByName(&quot;female&quot;)[0]</code>，注意name不唯一所以要以数组形式。</p>
<p>通过<code>try...catch</code>和onerror事件来捕捉错误。</p>
<h1 id="jquery的导入">jQuery的导入</h1>
<p>jQuery是一个JavaScript库。以在HTML页面文件引用jQuery库<code>jquery-1.3.1.js</code>为例，<code>&lt;script src=&quot;jquery-1.3.1.js&quot;  type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code>。</p>
<p>使用jQuery时，先通过选择器<code>$()</code>，即<code>jQuery()</code>，选择jQuery对象——jQuery对象是通过jQuery库包装DOM对象后产生的对象，DOM意为<strong>文档对象模型（Document Object Model）</strong>——选择好对象后通过<code>.</code>调用jQuery命令，对对象进行修改。</p>
<h1 id="jquery命令">jQuery命令</h1>
<p>执行css命令操纵样式、addClass命令设置新样式、removeClass命令删除样式、hasClass命令判断元素是否具有某样式、toggleClass命令切换样式。</p>
<p>执行append命令向DOM追加元素、remove命令删除DOM中元素、clone命令在DOM中复制节点、replacewith命令在DOM中替换内容、wrap命令在DOM中包裹元素。</p>
<p>执行show命令显示隐藏的元素，hide命令隐藏元素。</p>
<p>jQuery的动画函数有animate、slideup、slidedown、fadein、fadeout，以normal、fast、slow三种速度展示动画。</p>
<p>另一个常用命令是<code>$(document).ready(function(){...})</code>，（<code>$(document)</code>是一个选择器，选中的是整个html所有元素的集合）在页面所有元素准备完毕之后，载入页面之前执行自定义函数。例如在HTML页面文件加载（打开）时弹出“Hello World”的alert对话框，可<code>$(document).ready(function() {alert(&quot;Hello World!&quot;);})</code>。</p>
<h1 id="jquery选择器">jQuery选择器</h1>
<h2 id="基本选择器">基本选择器</h2>
<ul>
<li>id选择器:<code>$(&quot;#id&quot;)</code>；</li>
<li>类选择器:<code>$(&quot;.class&quot;)</code>；</li>
<li>元素选择器：<code>$(&quot;标签名&quot;)</code>；</li>
<li>全选选择器：<code>$(&quot;*&quot;)</code>。</li>
</ul>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">	$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">		<span class="comment">&lt;!--id选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">		$(<span class="string">"#a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">			$(<span class="keyword">this</span>).css(<span class="string">'color'</span>, <span class="string">'yellow'</span>);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">		<span class="comment">&lt;!--类选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">		$(<span class="string">".d"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">			$(<span class="keyword">this</span>).css(<span class="string">'color'</span>, <span class="string">'red'</span>);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">			<span class="comment">&lt;!--id选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">			$(<span class="string">"#c"</span>).css(<span class="string">'color'</span>, <span class="string">'orange'</span>);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">		<span class="comment">&lt;!--全选选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">		$(<span class="string">"*"</span>).css(<span class="string">'color'</span>, <span class="string">'green'</span>);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml">		<span class="comment">&lt;!--元素选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="javascript">		$(<span class="string">"p"</span>).css(<span class="string">'color'</span>, <span class="string">'pink'</span>);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是一个粉刷匠<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span>你是来搞黄色的吗？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span>气突苏！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"c"</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span>如果奇迹有颜色，那一定是？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="层次选择器">层次选择器</h2>
<p>通过DOM元素之间的层次关系获取特定元素。</p>
<ul>
<li><code>$(&quot;ancestor descendant&quot;)</code>：选取所有子元素。</li>
<li><code>$(&quot;parent&gt;child&quot;)</code>：同上，但仅包含直接子元素。</li>
<li><code>$(&quot;prev+next&quot;)</code>：选取下一个元素。</li>
<li><code>$(&quot;prev~siblings&quot;)</code>：同上，但包含之后的所有满足条件元素。</li>
</ul>
<h2 id="选择过滤器">选择过滤器</h2>
<p>jQuery过滤选择器通过指定的过滤器筛选出所需的DOM元素，即在选择器后紧跟<code>:</code>符号，对选取的结果集进行过滤，过滤到的结果通常会有<strong>单个元素</strong>和<strong>集合</strong>两种类型。</p>
<p>jQuery过滤选择器包括_____、______、______、_____、_____和___。</p>
<ul>
<li>基本过滤器
<ul>
<li><code>$('p:first')：</code>选取页面元素内的第一个p元素；</li>
<li><code>$('p:last')：</code>选取页面元素内的最后一个p元素；</li>
<li><code>$('p:not(.select)')：</code>选取选择器不是select的p元素；</li>
<li><code>$('p:even')：</code>选取索引是偶数的P元素（索引从0开始）；</li>
<li><code>$('p:odd')：</code>选取索引是奇数的p元素（索引从0开始）；</li>
<li><code>$('p:eq(index)')：</code>选取索引等于index的p元素（索引从0开始，支持负数）；</li>
<li><code>$('p:gt(index)')：</code>选取索引大于index的p元素（索引从0开始）；</li>
<li><code>$('p:lt(index)')：</code>选取索引小于index的p元素（索引从0开始）；</li>
<li><code>$(':header')：</code>选取标题元素h1~h6；</li>
<li><code>$(':animated')：</code>选取正在执行动画的元素；</li>
<li><code>$('input:focus')：</code>选取当前被焦点的元素。</li>
</ul></li>
<li>内容过滤器
<ul>
<li>选取包含指定文本的元素<code>$(':contains(含有的文本)')</code></li>
<li>选取含有选择器匹配元素的元素<code>$(&quot;:has('选择器')&quot;)</code></li>
<li>选取不包含子元素或文本的空元素<code>$(':empty')</code></li>
<li>选取包含子元素或文本的空元素<code>$(':parent')</code></li>
</ul></li>
<li>可见性过滤器
<ul>
<li>选取不可见的元素<code>$(':hidden')</code></li>
<li>选取可见的元素<code>$(':visible')</code></li>
</ul></li>
<li>属性过滤器
<ul>
<li>选取拥有此属性的元素<code>$('选择器[attribute]')</code>；</li>
<li>选取属性值为value的元素<code>$('选择器[attribute=value]')</code>；</li>
<li>选取属性值不等于value的元素<code>$('[attribute!=value]')</code>；</li>
<li>选取属性值以value开始的元素<code>$('选择器[attribute^=value]')</code>；</li>
<li>选取属性值以value结束的元素<code>$('选择器[attribute$=value]')</code>；</li>
<li>选取属性值含有value的元素<code>$('选择器[attribute*=value]')</code>；</li>
<li>选取属性值前缀为value的元素<code>$('选择器[attribute|=value]')</code>；</li>
<li>选取属性值用空格分隔的值中包含给定值的元素<code>$('选择器[attribute~=value]')</code>；</li>
<li>组合属性选择器<code>$('选择器[attribute1][attribute2]…[attributeN]')</code>。</li>
</ul></li>
<li>子元素过滤器
<ul>
<li>选取每个父元素下的第一个子元素，返回集合元素<code>$('选择器:first-child')</code></li>
<li>选取每个父元素下的最后一个子元素，返回集合元素<code>$('选择器:last-child')</code></li>
<li>选取每个父元素下的唯一子元素，返回集合元素<code>$('选择器:only-child')</code>.</li>
<li>选取每个父元素下的第index个子元素或者奇偶元素，index从1算起<code>$('选择器:nth-child(index)')</code></li>
</ul></li>
<li>表单对象属性过滤器
<ul>
<li>:enabled选取页面中所有可用元素</li>
<li>:disabled选取页面中所有不可用元素</li>
<li>:checked选取页面中所有被选中的元素（单选框radio、复选框 checkbox）</li>
<li>:selected选取下拉列表中被选择的元素</li>
<li>:text选取页面中所有文本框，</li>
<li>:password选取页面中所有口令框</li>
<li>:checkbox选取页面中所有检查框</li>
<li>:image选取页面中所有图像按钮</li>
<li>:button选取页面中所有按钮</li>
</ul></li>
</ul>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JavaScript与jQuery</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP基础知识</title>
    <url>/2019/12/14/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/JSP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
MyEclipse的安装。
</center>
<a id="more"></a>
<h1 id="servlet和jsp的关系">Servlet和JSP的关系</h1>
<p>JSP页面缺省的基类是HttpJspBase。</p>
<p>jsp在运行时首先被解析成一个java类，该类继承于org.apache.jasper.runtime.HtppJspBase类，这个类又继承了HttpServlet。</p>
<h1 id="jsp脚本元素">JSP脚本元素</h1>
<p>脚本元素提供了在jsp中插入java代码的能力。脚本元素有三种类型：</p>
<ul>
<li>脚本(scriptlet)是JSP页面中Java代码片段的容器。语法：<code>&lt;% java源代码 %&gt;</code>。</li>
<li>表达式(expression)将转换为String的Java表达式的值插入到返回给客户端的响应中。语法：<code>&lt;%= 表达式语句 %&gt;</code>。</li>
<li>声明(declarations)为JSP页面声明全局的方法和变量。语法：<code>&lt;%! 字段或方法声明 %&gt;</code>。</li>
</ul>
<h1 id="jsp指令元素">JSP指令元素</h1>
<h2 id="page指令">page指令</h2>
<p>用于设置页面属性。用<code>&lt;%@ page %&gt;</code>标记在JSP文件头部声明。</p>
<p>指定JSP页面使用JAVA语言时，使用指令<code>&lt;%@page language=&quot;java&quot;%&gt;</code>。<code>&lt;%@page language=&quot;java&quot; contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</code>中pageEncoding设置当前页面的页面编码字符集为UTF-8，contentType设置页面类型为text/html。</p>
<p>使用页面指令Page的<code>&lt;%@page import=&quot;&quot;%&gt;</code>属性在JSP文件引用一个外部Java类。例如JSP页面要用Java的Date类时，在JSP文件前面用<code>&lt;%@page import=&quot;Java.util.Date&quot;%&gt;</code>把Date类包含。</p>
<p>用JSP进行前端页面开发时，用<code>&lt;%@page errorPage=&quot;错误页面.jsp&quot;%&gt;</code>设置错误页面，从而方便把多个JSP页面的出错、错误处理信息集中到错误页面处理；对于错误页面，指定<code>&lt;%page isErrorPage=&quot;true&quot;%&gt;</code>。</p>
<h2 id="include指令">include指令</h2>
<p>include指令在JSP页面被转换成Servlet前将指定的文件包含。比如说，可能有多页面都需要用到一个logo和一些相应的连接啥的，但可以不每次都写一遍相关代码，而是将相关代码单独写一个<code>logo.jsp</code>，只需在想显示它的地方使用include指令包含进来<code>&lt;%@include file = &quot;logo.jsp&quot;%&gt;</code>。include只能包含静态的资源。</p>
<h2 id="taglib指令">taglib指令</h2>
<p>用于导入标签库，使用时需设置两个重要的属性分别是<code>uri</code>和<code>prefix</code>，例如导入jsp标准标签库：<code>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</code>。这玩意类似前面的include，但是包含的不是静态jsp，而是一段java代码。导入标签库之后就可以通过<code>&lt;前缀:类名 [参数1 [[参数2 [...]]]]&gt;&lt;/前缀:类名&gt;</code>插入这段代码。</p>
<h1 id="jsp动作元素">JSP动作元素</h1>
<p>标签库啥的的调用。</p>
<p><code>jsp:useBean</code>用于在JSP文件使用指定名称的JavaBean对象。例如在JSP页面会话中调用<code>Test.UserInfo</code>类，对象名为ui，则语句是<code>&lt;jsp:useBean id=&quot;ui&quot; class=&quot;Test.UserInfo&quot; scope=&quot;session&quot; type=&quot;...&quot;/&gt;</code>。</p>
<p><code>jsp:setProperty</code>设置JavaBean对象成员的值；用<code>jsp:getProperty</code>获取JavaBean对象成员的值。</p>
<p><code>jsp:forward</code>从当前页面转至其它JSP页面处理（请求转发）。<code>jsp:include</code>包含页面，但与上面的include指令不同，这里不是插入jsp代码，而是在运行后插入这段代码的应答。在转发或包含时，使用<code>jsp:param</code>传递参数。</p>
<h1 id="jsp的内置对象">jsp的内置对象</h1>
<ul>
<li><strong>application对象</strong>将信息保存在服务器中，直到服务器关闭。application对象中保存的信息在整个应用中有效。</li>
<li><strong>session对象</strong>是由服务器自动创建的与用户请求相关的对象。服务器为每个用户都生成一个session对象，用于保存该用户的信息，跟踪用户的操作状态。session对象内部使用Map类来保存数据，因此保存数据的格式为Key-value。session对象的value可以为复杂的对象类型，而不仅仅局限于字符串类型。<strong>内置对象session通过<code>setAttribute()</code>函数把数据以key-value形式写入保存，通过<code>getAttribute()</code>函数把保存的数据读取出来。JSP页面使用Session内置对象时，需要在JSP文件头部用<code>&lt;%@page session=&quot;true&quot; %&gt;</code>把Session属性设置为true。</strong></li>
<li><strong>request对象</strong>是javax.servlet.httpServletRequest类型的对象，代表客户端的请求信息，主要用于接受通过HTTP协议传送到服务器的数据。作用域为一次请求。</li>
<li><strong>response对象</strong>代表对客户端的响应，将JSP容器处理过的对象传回到客户端。response对象只在JSP页面内有效。</li>
<li><strong>page对象</strong>代表JSP本身，只在JSP页面内合法。类似于Java中的this。</li>
<li><strong>pageContext对象</strong>的作用是取得任何范围的参数，通过它可以获取JSP页面的out、request、reponse、session、application等对象。pageContext对象的创建和初始化都是由容器来完成的，在JSP页面中可以直接使用pageContext对象。</li>
<li>out对象用于在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。。</li>
<li>config对象的主要作用是取得服务器的配置信息。通过pageConext对象的<code>getServletConfig()</code>方法可以获取一个config对象。</li>
<li>exception对象的作用是显示异常信息，在包含<code>isErrorPage=&quot;true&quot;</code>的页面中可以被使用。</li>
</ul>
<h1 id="javabean">JavaBean</h1>
<p>JavaBean是一种仅包含数据属性和对数据进行存取的函数的类。</p>
<h1 id="外部包">外部包</h1>
<p>JSP文件用到外部（第三方）JAR包时，应在web项目的web-inf目录下建立lib目录，把jar包复制到<code>web项目/web-inf目录/lib目录</code>。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JSP</category>
      </categories>
      <tags>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・肆・语义分析</title>
    <url>/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E8%82%86%E3%83%BB%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
<h1 id="属性文法">属性文法</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E-&gt; TR&#123;R.in:&#x3D;T.val;E.val&#x3D;R.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; +TR&#39;&#123;R&#39;.in:&#x3D;R.in+T.val;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; -TR&#39;&#123;R&#39;.in:&#x3D;R.in-T.val;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; epsilon&#123;R.val:&#x3D;R.in&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">T-&gt; num&#123;T.val:&#x3D;lexval(num)&#125;</span></pre></td></tr></table></figure>
<h1 id="翻译模式">翻译模式</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E-&gt; T&#123;R.in:&#x3D;T.val&#125;R&#123;E.val&#x3D;R.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; +T&#123;R&#39;.in:&#x3D;R.in+T.val&#125;R&#39;&#123;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; -T&#123;R&#39;.in:&#x3D;R.in-T.val&#125;R&#39;&#123;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">R-&gt; epsilon&#123;R.val:&#x3D;R.in&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">T-&gt; num&#123;T.val:&#x3D;lexval(num)&#125;</span></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ParseE</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Tval=ParseT();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Rval=ParseR(Tval);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Print(Rval);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ParseR</span><span class="params">(<span class="keyword">int</span> in)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(lookahead==<span class="string">'+'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        MatchToken(<span class="string">'+'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Tval=ParseT();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rval=ParseR(in+Tval);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(lookahead==<span class="string">'-'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        MatchToken(<span class="string">'-'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Tval=ParseT();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rval=ParseR(in-Tval);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Rval=in;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ParseT</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    if(lookahead=='num')</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> num;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        error();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h1 id="属性文法翻译模式的左递归消除">属性文法/翻译模式的左递归消除</h1>
<h1 id="四元式的生成">四元式的生成</h1>
<p>有C片段如下:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a=x,b=y,c=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">1</span>)c=c*a;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    b=b/<span class="number">2</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    a=a*a;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>要获得它的四元式代码，首先将具有复杂含义的语句展开:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    a=x;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    b=y;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    c=<span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">begin</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> b&lt;=<span class="number">0</span> <span class="keyword">goto</span> <span class="built_in">end</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> b%<span class="number">2</span> != <span class="number">1</span> <span class="keyword">goto</span> nxt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    c=c*a;</span></pre></td></tr><tr><td class="code"><pre><span class="line">nxt:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    b=b/<span class="number">2</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    a=a*a;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">goto</span> <span class="built_in">begin</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">end</span>:</span></pre></td></tr></table></figure>
<p>容易得到四元式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01 &#x3D; ,x,&#x2F;,a</span></pre></td></tr><tr><td class="code"><pre><span class="line">02 &#x3D; ,y,&#x2F;,b</span></pre></td></tr><tr><td class="code"><pre><span class="line">03 &#x3D; ,1,&#x2F;,c</span></pre></td></tr><tr><td class="code"><pre><span class="line">04 &lt;&#x3D;,b,0,11</span></pre></td></tr><tr><td class="code"><pre><span class="line">05 % ,b,2,t</span></pre></td></tr><tr><td class="code"><pre><span class="line">06 !&#x3D;,t,1,8</span></pre></td></tr><tr><td class="code"><pre><span class="line">07 * ,c,a,c</span></pre></td></tr><tr><td class="code"><pre><span class="line">08 &#x2F; ,b,2,b</span></pre></td></tr><tr><td class="code"><pre><span class="line">09 * ,a,a,a</span></pre></td></tr><tr><td class="code"><pre><span class="line">10 go,&#x2F;,&#x2F;,4</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・贰・自顶向下语法分析</title>
    <url>/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E8%B4%B0%E3%83%BB%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・贰・词法分析</title>
    <url>/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E5%A3%B9%E3%83%BB%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
</center>
<a id="more"></a>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・〇・总论</title>
    <url>/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E3%80%87%E3%83%BB%E6%80%BB%E8%AE%BA/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
编译程序的基本组成与相关概念。
</center>
<a id="more"></a>
<h1 id="编译程序的功能">编译程序的功能</h1>
<p>把高级语言翻译为等价的低级语言。</p>
<h1 id="编译程序的组成">编译程序的组成</h1>
<p>编译程序接受一个字符流的源程序的输入。</p>
<p>字符流送<strong>词法分析模块</strong>进行词法<strong>分析</strong>。词法分析模块将从左至右扫描字符流，由词法规则识别出最小的语法单位即<strong>单词</strong>，将其转换为编译程序内部的符号表示，得到单词流。</p>
<p>单词流送送<strong>语法分析模块</strong>进行语法<strong>分析</strong>。语法分析模块由语法规则识别语法结构，生成一种语法的内部表示，如语法树、三元组或四元组等。同时检查语法正确性。</p>
<p>前面得到的语法结构送<strong>语义分析模块</strong>和<strong>中间代码生成模块</strong>进行语义<strong>分析</strong>与<strong>综合</strong>，进行静态语法检查、变量类型的确定与检查等，并生成中间代码。</p>
<p>以上模块称为编译程序的前端。</p>
<p>中间代码送<strong>中间代码优化模块</strong>，得到优化后的中间代码。</p>
<p>以上模块为中端。</p>
<p>优化后的中间代码送<strong>目标代码生成模块</strong>和<strong>目标代码优化模块</strong>，生成目标代码。</p>
<p>以上模块为后端。</p>
<p>除以上模块外，还有<strong>符号表管理模块</strong>，全程收集每个名字的各种属性；<strong>错误处理模块</strong>，负责报告错误并尝试从错误中恢复。</p>
<h1 id="遍">“遍”</h1>
<p>编译程序中有个叫“遍”或者“趟”（passes或phases）的概念，指从头到尾扫描一遍某种代码形式，并将之转换到另一代码空间（包含代码和一些额外信息如符号表等）。</p>
<p>“遍”的概念使程序结构更清楚，把哪些功能做成一个遍之类。一个编译程序的结构组织取决于其对各“遍”的组织，例如是单遍还是多遍？多个遍是顺序执行（通常如此）还是并发执行？</p>
<h1 id="编译程序的伙伴程序">编译程序的伙伴程序</h1>
<h2 id="预处理程序">预处理程序</h2>
<p>将宏定义（<code>#define</code>）、支持文件（<code>#include</code>）等替换为更复杂的源程序扩展信息。</p>
<h2 id="汇编程序">汇编程序</h2>
<p>将编译程序给出的汇编代码转换为可重定位的机器语言程序。</p>
<h2 id="装入和连接程序">装入和连接程序</h2>
<p>为可重定位的机器语言程序装载执行时库，生成可执行程序。</p>
<h1 id="编译程序的相关程序">编译程序的相关程序</h1>
<p>高级语言分编译型和解释性，后者对应解释程序。编译程序读入源程序，输出目标程序，目标程序读入程序输入，输出结果。而解释程序读入源程序和程序输入，输出结果。它不产生目标程序文件、翻译一句执行一句，执行时解释程序依旧在守护，也就是不区分翻译与执行。常用于虚拟机。</p>
<h1 id="文法">文法</h1>
<p>文法<code>G[S]</code>是一个四元组<code>(非终结符集合,终结符集合,重写规则集合,属于非终结符集合的识别符号S)</code>。</p>
<h1 id="使用文法产生语言">使用文法产生语言</h1>
<p>一串字汇集（非终结符集合并终结符集合）符号由重写规则进行重写的过程叫推导。</p>
<p>由识别符能推导出来的符号串叫句型。如果这里的符号都是终结符，就叫句子。</p>
<p>一个文法描述的语言为其推导出的句子集合。两文法等价当且仅当其能推导出的句子集合相等。</p>
<p>给定一个文法，则可唯一地确定其语言；给定一语言，可不唯一地确定其文法。</p>
<h1 id="使用其它方式描述语言">使用其它方式描述语言</h1>
<p>正则表达式之类的方法。</p>
<h1 id="文法和语言的分类chomsky语言分类法">文法和语言的分类——Chomsky语言分类法</h1>
<ul>
<li>0型语言：没什么要求，基本是个文法生成的都是。等价于图灵机。</li>
<li>1型语言：在0型语言的基础上，其文法之任一产生式之右部式长度有限。等价于线性有界自动机。</li>
<li>2型语言：在1型语言的基础上，其文法之任一产生式之左部式仅有一非终结符。这意味着规约一个非终结符时无需考虑它前后是啥玩意，称为上下文无关文法。等价于下推自动机。</li>
<li>3型语言：在2型语言的基础上，所有产生式均形如<code>A-&gt;aB|a</code>或所有产生式均形如<code>A-&gt;Ba|a</code>，等价于有限状态自动机。</li>
</ul>
<h1 id="推导与语法树">推导与语法树</h1>
<p>最左或最右推导（每次推导均队最左或最右的非终结符应用重写规则）生成的句型叫最左或最右句型。反过来有最左最右规约。最早被研究的是最右推导，所以规范推导指的是这玩意；分析程序时都是从左往右读所以是先规约左边，所以规范规约指的是这玩意。</p>
<p>不管你咋推导，只要得到了同一个句子，那语法树就应该是一样的，否则说明这个句子有二义性，生成这个句子的文法就叫二义性文法。</p>
<p>不能仅根据文法本身判断它是否有二义性。</p>
<h1 id="句型分析与语法树">句型分析与语法树</h1>
<p>给定一个符号串，判断它是否是某个文法的句型，这个过程叫句型分析。</p>
<p>一般有两种技术：</p>
<ul>
<li>自顶向下：从识别符号出发，尝试推导出相同的符号串。问题在于，同一个左部符号可能有多个产生式，推导的时候该应用哪个？</li>
<li>自底向上：从输入串出发，尝试规约到识别符号。问题在于，同样的右部串可能可以规约到多个左部符号，规约到哪个？</li>
</ul>
<p>对一棵语法树，每一棵子树（与数据结构上不同，这里叶子不算子树）的叶子构成的串叫一个短语，这意味着它们能被规约到这棵子树的根的符号。只有一层的子树的叶子构成的串叫简单短语，这意味着一次规约就能把它规约到根的符号。最左的简单短语叫句柄，规范规约中将首先被规约。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置DosBox+MASM汇编环境</title>
    <url>/2019/11/24/%E6%88%8F%E6%B3%95/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEDosBox-MASM%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191124_masm.png" /></p>
<center>
坑待填
</center>
<a id="more"></a>
<p>sudo pacman -S dosbox</p>
<p>mount c ~/Workspaces/MASM</p>
<p>MASM5.0，更高的版本需要Win行命令提示符环境才能运行</p>
<p>masm hw.asm</p>
<p>文件名长度不能超过8</p>
<p>link hw</p>
<p>hw</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>汇编</tag>
        <tag>DosBox</tag>
        <tag>MASM</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下使用opencv_traincascade</title>
    <url>/2019/11/18/Manjaro-Linux%E4%B8%8B%E4%BD%BF%E7%94%A8opencv-traincascade/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191118_opencv_traincascade.jpg" /></p>
<center>
使用opencv_traincascade训练实现车辆检测。
</center>
<a id="more"></a>
<p>OpenCV中有个神奇的AdaBoost，通过读入一个xml即可识别出目标区域。此物中文名唤“级联分类器”，“级联”指它由简单分类器级联组成，通过所有分类器的区域即为目标区域。训练时通过对样本的一定操作可生成样本的Haar/LBP/HOG等特征，检测时遍历待识别图片各区域进行特征匹配。</p>
<h1 id="训练">训练</h1>
<h2 id="文件准备">文件准备</h2>
<p>训练文件夹的结构应当如下：</p>
<ul>
<li><训练文件夹>
<ul>
<li><code>data</code>（训练结果文件夹）</li>
<li><code>vec</code>（样本集文件夹）</li>
<li><code>bg</code>（背景集文件夹）</li>
<li><code>vec.bat</code>（样本集相关信息）</li>
<li><code>vec.vec</code>（样本集相关信息）</li>
<li><code>bg.txt</code>（背景集相关信息）</li>
<li><code>opencv_createsamples</code>（生成<code>pos.vec</code>的工具）</li>
<li><code>opencv_traincascade</code>（训练的工具）</li>
</ul></li>
</ul>
<p>其中这些东西的名字都可以变。</p>
<p>首先建立训练文件夹和三个子文件夹，并分别放入样本集图片和背景集图片。样本的大小大约应当几十见方，太大会爆栈；背景应当远大于训练图片，几百见方，且内容较复杂。这是因为程序将训练图片作为滑动窗口在背景上滑动来采集训练图像，如果无法采集到足够多的样本就会报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>错误。</p>
<p>关于样本集与背景集的比例，有帖子认为一比三是比较合适的，我理解是生活中没有样本的情况（背景）多于有样本，但如果给太多背景影响训练效率。</p>
<p>放好后在训练文件夹下进入终端，<code>ls ./bg/&gt;bg.txt</code>生成背景集相关信息，<code>ls ./vec/&gt;vec.bat</code>生成样本集相关信息。自动生成的文件最后有个空行需要删掉。有帖子指出这里的文件对换行格式也有要求，实测VSCode中的“LF”格式没问题。</p>
<p>此时生成的两个文件内应当是形如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr></table></figure>
<p>将之改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr></table></figure>
<p>这是因为待会调用训练程序时无法指定图片地址，所以地址要在这两个文件中显式指出。</p>
<p>除此之外，还要指出样本图片（背景不需要）的该样本数目、起始坐标和表示样本宽高</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr><tr><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr></table></figure>
<p>那两个工具在电脑里查找一下，通过anaconda装的就是在anaconda文件夹里某个角落，复制过去即可。</p>
<h2 id="创建样本">创建样本</h2>
<p><code>./opencv_createsamples -vec vec.vec -info vec.bat -bg bg.txt -w xx -h xx</code></p>
<p>注意图片尺寸要对，否则报<code>Error: Assertion failed (_img.rows * _img.cols == vecSize)</code>。</p>
<p>这里的工具是直接拉过来用的，配套环境可能跟不上。如果报错他想找个啥库找不到之类，以<code>libopencv_core.so.3.2</code>为例：</p>
<blockquote>
<p>Find the folder containing the shared library <code>libopencv_core.so.3.2</code>using the following command line. <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;sudo find &#x2F; -name&quot;libopencv_core.so.3.2*&quot;</span></pre></td></tr></table></figure> Then I got the result: <code>/usr/local/&gt;lib/libopencv_core.so.3.2</code>.</p>
<p>Create a file called <code>/etc/ld.so.conf.d/opencv.conf</code> and write to it the path to the folder where the binary is stored.For example, I wrote <code>/usr/local/lib/</code> to my opencv.conf file.</p>
<p>Run the command line as follows. <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ldconfig -v</span></pre></td></tr></table></figure> Try to run the test binary again.</p>
</blockquote>
<p>生成<code>vec.vec</code>就是好了。</p>
<p>可能需要给工具一个执行权限。</p>
<h2 id="训练-1">训练</h2>
<p><code>./opencv_traincascade -data data -vec vec.vec -bg bg.txt -numPos xxx -numNeg xxx -numStages 20 -w xx -h xx -minHitRate 0.9999 -maxFalseAlarmRate 0.5 -mode ALL</code>，其中<code>numPos</code>和<code>numNeg</code>是每次训练使用的样本数量，而非你提供了多少样本。这个数量应当足够多（样本数应当大于10，否则报<code>Cascade classifier can’t be trained. Check the used training parameters.</code>），和提供的数量一样保持一比三，并且少于提供的样本数（否则报<code>Traincascade Error:Bad argument(Can not get new positive sample.The most possible reason is insufficient count of samples in given vec-file.</code>）；<code>numStage</code>是训练的级数，默认为20；<code>minHitRate</code>指“分类器的每一级希望得到最小检测率”，一般0.9999；<code>maxFalseAlarmRate</code>，最大虚警率，“影响弱分类器的阈值，表示每个弱分类器将负样本误分为正样本的比例”，一般默认值为0.5。还有其它贼多参数，用到再去查吧。</p>
<p>官方给的<code>numPos</code>和<code>numNeg</code>计算方法是<code>vec-file number &gt;= (numPos + (numStages-1) * (1 – minHitRate) * numPos) + S</code>。<code>vec-file number</code>是指提供的样本数。</p>
<p>训练过程中经常报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>，排除背景信息那个文本文档格式问题的话就是需要更多更大更复杂的背景的意思。</p>
<h1 id="检测">检测</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">xx = cv2.CascadeClassifier(&lt;xml路径&gt;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">xxx = xx.detectMultiScale(&lt;图片&gt;, scaleFactor=<span class="number">1.1</span>, minNeighbors=<span class="number">55</span>, minSize=(<span class="number">10</span>, <span class="number">10</span>),maxSize=(<span class="number">90</span>,<span class="number">90</span>),flags=cv2.CASCADE_SCALE_IMAGE)</span></pre></td></tr></table></figure>
<p><code>scaleFactor</code>指每次检测区域扩大多少，1.1就是每次扩大百分之十；<code>minNeighbors</code>大概意思是一个目标区域附近允许有多少目标区域——因为往往对同一个目标，程序会识别出许多临近的目标区域，看情况调调这个参数留一个就行。</p>
]]></content>
      <categories>
        <category>中医</category>
        <category>分类器</category>
      </categories>
      <tags>
        <tag>OpenCV</tag>
        <tag>AdaBoost</tag>
        <tag>cascade</tag>
      </tags>
  </entry>
  <entry>
    <title>摆脱祸乱之源——探索如何保持精力充沛</title>
    <url>/2019/11/11/%E5%85%B6%E5%AE%83/%E6%9C%89%E5%85%B3%E6%91%86%E8%84%B1%E7%A5%B8%E4%B9%B1%E4%B9%8B%E6%BA%90%E7%9A%84%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="36c2a5f9580b75b02aa356c90860fc9ce89b036437c813b871c5ccff24af97b4"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>其它</category>
        <category>柴米</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统・贰・存储器管理</title>
    <url>/2019/11/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%83%BB%E8%B4%B0%E3%83%BB%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><img src="" /></p>
<center>
坑待填
</center>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |5|5| |          |1|1|1|1| | |5|5|5|5|4|4|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |3|3| |          | |2|2|2| | |2|1|1|1|1|5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|4| |          | | |3|3| | |3|3|2|2|2|2|</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4|4|4|3|3|3|</span></pre></td></tr><tr><td class="code"><pre><span class="line">       1 2 3 4     5 6             +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                1 2 3 4 5 6</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |3|3|3|          |1|1|1|1| | |1| | |1|1|5|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |1|4|4|          | |2|2|2| | |2| | |2|2|2|</span></pre></td></tr><tr><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|2|5|          | | |3|3| | |5| | |5|4|4|</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4| | |3|3|3|</span></pre></td></tr><tr><td class="code"><pre><span class="line">       1 2 3 4     5 6 7           +-----------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                1     2 3 4</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">  +-----------------------------------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">  |5  0  1  2  0  3  0  4  2  3  0  3  2  1  2  0  1  5  0  1       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-+---------------------------------------------------------+-------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|51|51|51|21|  |20|01|00|21|  |20|31|21|20|  |01|  |00|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|  |01|01|00|  |31|31|30|30|  |01|01|00|11|  |11|  |10|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|  |  |11|10|  |10|10|41|41|  |41|41|40|40|  |40|  |51|  |  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------------------------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">          1     2  3  4  5     6  7  8  9     10    11</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・终・实验</title>
    <url>/2019/11/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E7%BB%88%E3%83%BB%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="目标">目标</h1>
<p>给定一个简单的玩具语言，由C语言小子集构成，为它设计一个编译器，完成词法分析、语法分析、语义分析等功能，并生成汇编语言。</p>
<h1 id="使用的文法规则">使用的文法规则</h1>
<h2 id="词法规则">词法规则</h2>
<ol type="1">
<li><p><span class="math inline">\(&lt;ID&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;ID&gt;&lt;LETTER&gt; \\ &amp; &lt;ID&gt;&lt;DIGIT&gt; \\ &amp; &lt;LETTER&gt; \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;NUM&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;DIGIT&gt; \\ &amp; &lt;NUM&gt;&lt;DIGIT&gt; \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;LETTER&gt;\rightarrow a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z\)</span></p></li>
<li><p><span class="math inline">\(&lt;DIGIT&gt;\rightarrow 0|1|2|3|4|5|6|7|8|9\)</span></p></li>
<li><p><span class="math inline">\(&lt;PLUS\_MINUS&gt;\rightarrow +|-\)</span></p></li>
<li><p><span class="math inline">\(&lt;STAR\_DIV&gt;\rightarrow *|/\)</span></p></li>
<li><p><span class="math inline">\(&lt;RELOP&gt;\rightarrow &lt;|&gt;|!=|&gt;=|&lt;=|==\)</span></p></li>
<li><p><span class="math inline">\(&lt;DELIMITER&gt;\rightarrow ,|;|(|)|\{|\}\)</span></p></li>
<li><p><span class="math inline">\(&lt;KEY&gt;\rightarrow main|int|if|else|whileDo|do\)</span></p></li>
</ol>
<h2 id="语法规则">语法规则</h2>
<ol type="1">
<li><p><span class="math inline">\(&lt;Program&gt;\rightarrow main() \left\{ &lt;CompSt&gt; \right\}\)</span></p>
<p>CompSt：由一对花括号括起来的语句块。该语句块内部先是一系列的变量定义DefList，然后是一系列的语句StmtList。</p></li>
<li><p><span class="math inline">\(&lt;CompSt&gt;\rightarrow &lt;Def&gt;;&lt;StmtList&gt;\)</span></p>
<p>Def：变量定义部分，由于选择的子集里只有int一种变量类型，所以不需要DefList，一条变量定义语句足矣。</p></li>
<li><p><span class="math inline">\(&lt;Def&gt;\rightarrow &lt;Specifier&gt;&lt;IdList&gt;\)</span></p>
<p>IdList：一个或多个标识符ID</p></li>
<li><p><span class="math inline">\(&lt;Specifier&gt;\rightarrow INT\)</span></p></li>
<li><p><span class="math inline">\(&lt;IdList&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;IdList&gt;,ID \\ &amp; ID \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;StmtList&gt;\rightarrow \left\{ \begin{aligned} &amp;&lt;StmtList&gt;,&lt;Stmt&gt; \\ &amp;&lt;Stmt&gt; \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;Stmt&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;Assign&gt; \\ &amp; &lt;IfElse&gt; \\ &amp; &lt;WhileDo&gt; \end{aligned} \right.\)</span></p>
<p>一条语句，可以是一个以分号结尾的表达式，或一个条件语句，或一个循环语句，或一个返回语句。这里不考虑返回语句的情况，并且表达式只考虑简单的<code>Id = Exp;</code>的情况即赋值语句、条件语句只考虑<code>if (条件) 语句（块） else 语句（块）</code>的情况、循环语句只考虑<code>while (条件) 语句（块） do 语句（块）</code>的情况。</p></li>
<li><p><span class="math inline">\(&lt;Assign&gt;\rightarrow ID=&lt;Exp&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;Exp&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;Exp&gt;&lt;PLUS\_MINUS&gt;&lt;Term&gt;\\ &amp; &lt;Term&gt; \\ \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;Term&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;Term&gt;&lt;STAR\_DIV&gt;&lt;Divisor&gt;\\ &amp; &lt;Divisor&gt; \\ \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;Divisor&gt;\rightarrow \left\{ \begin{aligned} &amp; ID \\ &amp; NUM \\ &amp; (&lt;Exp&gt;) \end{aligned} \right.\)</span></p></li>
<li><p><span class="math inline">\(&lt;IfElse&gt;\rightarrow if(&lt;Condition&gt;)&lt;Inner&gt;else&lt;Inner&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;Condition&gt;\rightarrow &lt;Exp&gt;RELOP&lt;Exp&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;Inner&gt;\rightarrow &lt;Stmt&gt;|{&lt;StmtList&gt;}\)</span></p></li>
<li><p><span class="math inline">\(&lt;WhileDo&gt;\rightarrow \left\{ \begin{aligned} &amp; while(&lt;Condition&gt;)do&lt;Inner&gt;\\ &amp; while(&lt;Condition&gt;)&lt;Inner&gt; \end{aligned} \right.\)</span></p></li>
</ol>
<p>可以看出，“C--”的语法规则类似C，但右花括号前的分号在右花括号外，且最外的右花括号后无分号。声明语句必须放在最前面。由于这个玩具语言只支持int，所以声明语句只需要一句，而且不需要进行各种类型检查；也没有数组、函数、结构体等概念。</p>
<p>由于它很简单，使用这个语言编写的的程序能出的错也比较少，编译器大致只需要能够查出源代码中可能包含的下述几类错误:</p>
<ul>
<li>词法错误
<ul>
<li>词法中未定义的字符</li>
<li>不符合词法单元定义的字符</li>
</ul></li>
<li>语法错误
<ul>
<li>任何不符合规则的语法</li>
</ul></li>
<li>语义错误
<ul>
<li>变量在使用时未经定义</li>
<li>变量出现重复定义</li>
<li>变量在使用时未经初始化</li>
</ul></li>
</ul>
<h1 id="对给定文法规则的分析">对给定文法规则的分析</h1>
<h2 id="消除左递归">消除左递归</h2>
<p><strong>4、5、8、9四条规则是存在左递归的</strong>，在自顶向下的分析中左递归将导致死循环。可以容易地消除左递归：</p>
<p>第4条：</p>
<ul>
<li><p><span class="math inline">\(&lt;IdList&gt;\rightarrow ID&lt;IdList&#39;&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;IdList&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; ,ID&lt;IdList&#39;&gt; \\ &amp; \epsilon \end{aligned} \right.\)</span></p></li>
</ul>
<p>第5条：</p>
<ul>
<li><p><span class="math inline">\(&lt;StmtList&gt;\rightarrow &lt;Stmt&gt;&lt;StmtList&#39;&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;StmtList&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; ;&lt;Stmt&gt;&lt;StmtList&#39;&gt; \\ &amp; \epsilon \end{aligned} \right.\)</span></p></li>
</ul>
<p>第8条：</p>
<ul>
<li><p><span class="math inline">\(&lt;Exp&gt;\rightarrow &lt;Term&gt;&lt;Exp&#39;&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;Exp&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;PLUS\_MINUS&gt;&lt;Term&gt;&lt;Exp&#39;&gt; \\ &amp; \epsilon \end{aligned} \right.\)</span></p></li>
</ul>
<p>第9条：</p>
<ul>
<li><p><span class="math inline">\(&lt;Term&gt;\rightarrow &lt;Divisor&gt;&lt;Term&#39;&gt;\)</span></p></li>
<li><p><span class="math inline">\(&lt;Term&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;STAR\_DIV&gt;&lt;Divisor&gt;&lt;Term&#39;&gt; \\ &amp; \epsilon \end{aligned} \right.\)</span></p></li>
</ul>
<h2 id="拓展属性文法">拓展属性文法</h2>
<p>声明语句需要扩展属性文法以生成符号表，网络上教属性文法的文章通常以此举例，可以容易地找到参考：</p>
<ol type="1">
<li><p><span class="math inline">\(&lt;Def&gt;\rightarrow &lt;Specifier&gt;&lt;IdList&gt;\{&lt;IdList&gt;.inh:=&lt;Specifier&gt;.type\}\)</span></p>
<p>将类型声明指定的类型赋给所有后面的标识符。</p></li>
<li><p><span class="math inline">\(&lt;Specifier&gt;\rightarrow INT \{&lt;Specifier&gt;.type:=integer\}\)</span></p>
<p>返回类型声明指定的类型为int。</p></li>
<li><p><span class="math inline">\(&lt;IdList&gt;\rightarrow ID\{addType(ID.entry,&lt;IdList&gt;.inh)\}&lt;IdList&#39;&gt;\{&lt;IdList&#39;&gt;.inh:=&lt;IdList&gt;.inh\}\)</span></p>
<p>传入指定的类型，将ID入表，ID后的所有标识符类型将为前面传来的类型。</p></li>
<li><p><span class="math inline">\(&lt;IdList&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; ,ID\{addType(ID.entry,&lt;IdList&#39;&gt;.inh)\}&lt;IdList_1&#39;&gt;\{&lt;IdList_1&#39;&gt;.inh:=&lt;IdList&#39;&gt;.inh\} \\ &amp; \epsilon \end{aligned} \right.\)</span></p>
<p>传入指定的类型，将ID入表，ID后的所有标识符类型将为前面传来的类型；如果是空就不管。</p></li>
</ol>
<p>注意，这里可能出现重复声明的错误。</p>
<p>赋值语句和表达式处也需要扩展属性文法以生成四元式。这个有点复杂，头秃。以表达式<span class="math inline">\(a+b\times c\)</span>为例，最先被规约的除了<span class="math inline">\(\epsilon\)</span>外就是<span class="math inline">\(\times c\)</span>了。想生成四元式，这里需要传入（也就是<span class="math inline">\(&lt;Term’&gt;\)</span>的继承属性）<span class="math inline">\(b\)</span>，并生成一个变量（也就是<span class="math inline">\(&lt;Term’&gt;\)</span>的综合属性）用于存储结果。将生成的变量——例如是<span class="math inline">\(tmp\)</span>——返回后再规约<span class="math inline">\(+tmp\)</span>，过程类似。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">           +------------------------------+Exp+---------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">           |                                                                    |</span></pre></td></tr><tr><td class="code"><pre><span class="line">           v                                                                    v</span></pre></td></tr><tr><td class="code"><pre><span class="line">   +----+Term+---+             +-------------------+--------------------------+Exp&#39;+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">   |             |             |                   |                                                 |</span></pre></td></tr><tr><td class="code"><pre><span class="line">   v             v             v                   v                                                 v</span></pre></td></tr><tr><td class="code"><pre><span class="line">Divisor        Term&#39;           +         +------+Term+-------------------+                          Exp&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   |             |                       |                               |                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">   v             v                       v                               v                           v</span></pre></td></tr><tr><td class="code"><pre><span class="line">   a           epsilon                Divisor         +---------------+Term&#39;+---------------+     epsilon</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                         |            |                  |                  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                         v            v                  v                  v</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                         b            *              Divisior             Term&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                                         |                  |</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                                         v                  v</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                                                         c                epsilon</span></pre></td></tr></table></figure>
<ol type="1">
<li><p><span class="math inline">\(&lt;Assign&gt;\rightarrow ID=&lt;Exp&gt;\{queue.push(&quot;=&quot;,&lt;Exp&gt;.val,N/A,ID)\}\)</span></p>
<p><span class="math inline">\(&lt;Exp&gt;\)</span>将返回一个符号，生成赋值四元式入队列。</p></li>
<li><p><span class="math inline">\(&lt;Exp&gt;\rightarrow &lt;Term&gt;&lt;Exp&#39;&gt;\{&lt;Exp&#39;&gt;.inh=&lt;Term&gt;.val;&lt;Exp&gt;.val=&lt;Exp&#39;&gt;.val\}\)</span></p>
<p>把<span class="math inline">\(&lt;Term&gt;\)</span>的返回符号传入<span class="math inline">\(&lt;Exp&#39;&gt;\)</span>，<span class="math inline">\(&lt;Exp&#39;&gt;\)</span>将返回一个符号，将之返回。</p></li>
<li><p><span class="math inline">\(&lt;Exp&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;PLUS\_MINUS&gt;&lt;Term&gt;&lt;Exp1&#39;&gt;\{&lt;Exp1&#39;&gt;.inh=&lt;Term&gt;.val;queue.push(&lt;PLUS\_MINUS&gt;,&lt;Exp&#39;&gt;.inh,&lt;Exp1&#39;&gt;.val,tmp);&lt;Exp&#39;&gt;.val=tmp\} \\ &amp; \epsilon\{&lt;Exp&#39;&gt;.val=&lt;Exp&#39;&gt;.inh\} \end{aligned} \right.\)</span></p>
<p>传入一个符号，并把<span class="math inline">\(&lt;Term&gt;\)</span>的返回符号传入<span class="math inline">\(&lt;Exp1&#39;&gt;\)</span>，<span class="math inline">\(&lt;Exp1&#39;&gt;\)</span>将返回一个符号，将传入的符号与<span class="math inline">\(&lt;Exp1&#39;&gt;\)</span>返回的符号做加减运算，四元式入队列，结果存在<span class="math inline">\(tmp_i\)</span>，将<span class="math inline">\(tmp_i\)</span>返回；但若<span class="math inline">\(&lt;Exp&#39;&gt;\)</span>为空，则直接将传入的符号返回。</p></li>
<li><p><span class="math inline">\(&lt;Term&gt;\rightarrow &lt;Divisor&gt;&lt;Term&#39;&gt;\{&lt;Term&#39;&gt;.inh=&lt;Divisor&gt;.val;&lt;Term&gt;.val=&lt;Term&#39;&gt;.val\}\)</span></p>
<p>把<span class="math inline">\(&lt;Divisor&gt;\)</span>的返回符号传入<span class="math inline">\(&lt;Term&#39;&gt;\)</span>，<span class="math inline">\(&lt;Term&#39;&gt;\)</span>将返回一个符号，将之返回。</p></li>
<li><p><span class="math inline">\(&lt;Term&#39;&gt;\rightarrow \left\{ \begin{aligned} &amp; &lt;STAR\_DIV&gt;&lt;Divisor&gt;&lt;Term1&#39;&gt;\{&lt;Term1&#39;&gt;.inh=&lt;Divisor&gt;.val;queue.push(&lt;STAR\_DIV&gt;,&lt;Term&#39;&gt;.inh,&lt;Term1&#39;&gt;.val,tmp);&lt;Term&#39;&gt;.val=tmp\} \\ &amp; \epsilon\{&lt;Term&#39;&gt;.val=&lt;Term&#39;&gt;.inh\} \end{aligned} \right.\)</span></p>
<p>传入一个符号，并把<span class="math inline">\(&lt;Divisor&gt;\)</span>的返回符号传入<span class="math inline">\(&lt;Term1&#39;&gt;\)</span>，<span class="math inline">\(&lt;Term1&#39;&gt;\)</span>将返回一个符号，将传入的符号与<span class="math inline">\(&lt;Term1&#39;&gt;\)</span>返回的符号做乘除运算，四元式入队列，结果存在<span class="math inline">\(tmp_i\)</span>，将<span class="math inline">\(tmp_i\)</span>返回；但若<span class="math inline">\(&lt;Term&#39;&gt;\)</span>为空，则直接将传入的符号返回。</p></li>
<li><p><span class="math inline">\(&lt;Divisor&gt;\rightarrow \left\{ \begin{aligned} &amp; ID \{&lt;Divisor&gt;.val=ID\}\\ &amp; NUM \{&lt;Divisor&gt;.val=NUM\}\\ &amp; (&lt;Exp&gt;) \end{aligned} \right.\)</span></p>
<p>返回一个符号，这个符号可能是ID，或NUM，或一个<span class="math inline">\(&lt;Exp&gt;\)</span>的返回符号。</p></li>
</ol>
<p>注意，这里可能出现使用未经定义的变量的错误。</p>
<p>条件语句和循环语句的四元式难点是怎么确定要跳转的位置我感觉，需要在分析到要跳转的地方后再回过头去修改最初跳转语句的目标位置为当前位置。</p>
<ol type="1">
<li><p><span class="math inline">\(&lt;IfElse&gt;\rightarrow if(&lt;Condition&gt;)\{queue.push(GO,&lt;Condition&gt;.val==false,N/A,else)\}&lt;Inner&gt;\{queue.push(GO,N/A,N/A,end)\}else&lt;Inner&gt;\)</span></p>
<p>条件表达式将返回一个布尔变量，如果为真则执行完第一个条件体后跳转至结尾，如果为假则跳转至<code>else</code>的标号。</p></li>
<li><p><span class="math inline">\(&lt;Condition&gt;\rightarrow &lt;Exp1&gt;\{&lt;Condition&gt;.exp1val=&lt;Exp1&gt;.val\}RELOP&lt;Exp2&gt;\{&lt;Condition&gt;.exp2val=&lt;Exp2&gt;.val\,queue.ppush(RELOP,&lt;Condition&gt;.exp1val,&lt;Condition&gt;.exp2val,tmp_i);&lt;Condition&gt;.val=tmp_i\}\)</span></p>
<p>将两个表达式返回的符号做给定的比较运算，结果存在一个新符号中，入四元式并返回。</p></li>
<li><p><span class="math inline">\(&lt;WhileDo&gt;\rightarrow \left\{ \begin{aligned} &amp; while(&lt;Condition&gt;)do&lt;Inner&gt;\\ &amp; while(&lt;Condition&gt;)&lt;Inner&gt; \end{aligned} \right.\)</span></p>
<p>类似条件语句，只不过跳转回去的时候要跳到判断那里，属性文法懒得写了：）</p></li>
</ol>
<p>之后按平时作业的编程题正常写即可。要求具有一定排错能力，这个比较难。哪天想起来再补充吧。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2中Action的几种传值方式</title>
    <url>/2019/11/07/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191107_struts2trans.jpg" /></p>
<center>
struts2中，传统的servlet中的request和response传递参数法仍可使用（但略有不同），并且增加了船新的传值方式。
</center>
<a id="more"></a>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="requestresponse">1. request/response</h1>
<blockquote>
<p>为避免与Servlet API耦合在一起，方便Action类做单元测试，Struts2对HttpServletRequest、HttpSession、ServletContext进行了封装，构造了三个Map对象来替代这三种对象。注意，这三个对象与Servlet API中的三个对象是相同的，即，在Action中放入Session中信息，在JSP页面中是可以读出来的。</p>
</blockquote>
<p>在Action类中引入上下文类ActionContext，使用<code>getContext()</code>实例化一个对象，就可以通过这个对象获取session和application的map对象，而ActionContext对象本身包含了request的map对象。</p>
<p>向它们中添加属性只需使用<code>put()</code>方法，若向request添加属性，只需向ActionContext对象中添加。</p>
<h1 id="getset">2. get/set</h1>
<p>之前带有传值的示例就是用的这种方式。在action类中定义与jsp页面中上传参数的东西同名的私有成员变量并生成get/set方法即可直接使用，贼方便。</p>
<p>这种方法的进阶版是传JavaBean——而不是一个个传数据。也非常简单，唯一需要注意的是jsp页面中上传参数的东西的name必须是<code>&lt;JavaBean的名字&gt;.名字</code>。</p>
<h1 id="示例">3. 示例</h1>
<p>一个学生登录的界面。用户在<code>index.jsp</code>填写表单，提交后跳转至欢迎界面，在欢迎界面显示输入的信息。</p>
<h2 id="index.jsp">3.1. index.jsp</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用JavaBean传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transJB"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.id"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.name"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.school"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"stud.pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用HttpServletRequest传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transSERVLET"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"school"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="struts.xml">3.2. struts.xml</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"TransTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transJB"</span> <span class="attr">class</span>=<span class="string">"transTest.JBtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succJB.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transSERVLET"</span> <span class="attr">class</span>=<span class="string">"transTest.SERVLETtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succSERVLET.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="transtest">3.3. transTest</h2>
<h3 id="servlettrans.java">3.3.1. SERVLETtrans.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext; </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SERVLETtrans</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        ActionContext ctx=ActionContext.getContext();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Map&lt;String,Object&gt; application=ctx.getApplication();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        String id=request.getParameter(<span class="string">"id"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String school = request.getParameter(<span class="string">"school"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String pw =  request.getParameter(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        String mail =  request.getParameter(<span class="string">"mail"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"id: "</span> + id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"name: "</span> + name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"school: "</span> + school);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"pw: "</span> + pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        System.out.println(<span class="string">"mail: "</span> + mail);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"id"</span>,id);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"name"</span>,name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"school"</span>,school);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"pw"</span>,pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        application.put(<span class="string">"mail"</span>,mail);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="jbtrans.java">3.3.2. JBtrans.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> transTest.StudentBean;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JBtrans</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">/**</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">	 * </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">	 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> StudentBean stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> StudentBean <span class="title">getStud</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStud</span><span class="params">(StudentBean stud)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.stud = stud;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="comment">//public StudentBean stud = new StudentBean();</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">/*System.out.println(stud.getName());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getSchool());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getPw());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getMail());</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">		System.out.println(stud.getId());*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="studentbean.java">3.3.3. StudentBean.java</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentBean</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> String name,id,school,pw,mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSchool</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> school;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(String school)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.school = school;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPw</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> pw;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPw</span><span class="params">(String pw)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.pw = pw;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMail</span><span class="params">(String mail)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.mail = mail;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="succjb和succservlet.jsp">3.4. succJB和succSERVLET.jsp</h2>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">jb:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号&lt;s:property value="stud.id"/&gt;，&lt;s:property value="stud.school"/&gt;学院的&lt;s:property value="stud.name"/&gt;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是&lt;s:property value="stud.mail"/&gt;，口令是&lt;s:property value="stud.pw"/&gt;。&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">servlet:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号$&#123;applicationScope.id&#125;，$&#123;applicationScope.school&#125;学院的$&#123;applicationScope.name&#125;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是$&#123;applicationScope.mail&#125;，口令是$&#123;applicationScope.pw&#125;。&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>表世界</category>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2中Action的几种Result</title>
    <url>/2019/11/02/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8DResult/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191102_struts2action.png" /></p>
<center>
action跳转至页面、URL或另一个action。
</center>
<a id="more"></a>
<p>Struts中调用Action后应当获得一个Result。它告诉Struts接下来该干啥。它的属性可以是以下类型：</p>
<ul>
<li>dispatcher：请求转发，用于整合JSP的结果类型。</li>
<li>redirect：请求重定向。值为一个请求URL。</li>
<li>redirect-action：请求重定向到action。值为定义的action的name。</li>
<li>plaintext：用于显示某个页面的源代码。</li>
<li>还有好多种不会的……</li>
</ul>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="dispatcher">1. dispatcher</h1>
<p>如果在result标签中没有指定type，则默认是dispatcher类型。此时它指定一个视图资源——通常是JSP页面。</p>
<h1 id="redirect">2. redirect</h1>
<p>使用该type的action重定向到一个页面，另一个action或一个网址。</p>
<h1 id="redirect-action">3. redirect-action</h1>
<p>使用该type的action使用ActionMapperFactory提供的ActionMapper来重定向请求到另外一个action。与redirect相比，在使用上没有什么区别。</p>
<h1 id="测试">4. 测试</h1>
<h2 id="struts.xml中的packge">4.1. struts.xml中的packge</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"ActionTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2JSP"</span> <span class="attr">class</span>=<span class="string">"actionTest.JSPaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succ.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"failed"</span>&gt;</span>/fail.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2URL"</span> <span class="attr">class</span>=<span class="string">"actionTest.URLaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>http://www.bing.com<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2ACT"</span> <span class="attr">class</span>=<span class="string">"actionTest.ACTaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirectAction"</span>&gt;</span>action2URL<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="actiontest包">4.2. actionTest包</h2>
<h3 id="jspaction类">4.2.1. JSPaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSPaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> String text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(String text)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"JSPaction set text:"</span>+<span class="keyword">this</span>.text);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">this</span>.text = text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"JSPaction get text:"</span>+text);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> text;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">if</span>(<span class="string">"hello world"</span>.equals(<span class="keyword">this</span>.text))&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"JSPaction execute success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"JSPaction execute failed."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">return</span> <span class="string">"failed"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="urlaction类">4.2.2. URLaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"URLaction execute success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h3 id="actaction类">4.2.3. ACTaction类</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ACTaction</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"ACTaction return success."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="jsp页面">4.3. JSP页面</h2>
<h3 id="index">4.3.1. index</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2JSP"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"text"</span>&gt;</span>Please enter hello world<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call JSP action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2URL"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call URL action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2ACT"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call ACT action"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<h3 id="succ和fail">4.3.2. succ和fail</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>success或者fial:get <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"text"</span>/&gt;</span> .<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr></table></figure>
<h1 id="带参数的重定向">5. 带参数的重定向</h1>
<h2 id="redirect-1">5.1. redirect&quot;</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>/login.do?userId=$&#123;userId &#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="redirect-action-1">5.2. redirect-action&quot;：</h2>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect-action"</span>&gt;</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"actionName"</span>&gt;</span>login.do<span class="tag">&lt;/<span class="name">param</span>&gt;</span> 重定向action名</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"userId"</span>&gt;</span>userId<span class="tag">&lt;/<span class="name">param</span>&gt;</span>带的参数</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>表世界</category>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理・叁・自底向上语法分析</title>
    <url>/2019/10/28/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%83%BB%E5%8F%81%E3%83%BB%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191028_ZiDiXlUhYuFaFfXi.png" /></p>
<center>
优先分析法和LR(0)、SLR(1)、LR(1)三种LR分析法。
</center>
<a id="more"></a>
<h1 id="概述">概述</h1>
<h2 id="基本思想">基本思想</h2>
<p>从输入符号串出发，在每一分析步对相应句型中的某个简单短语进行归约。如果最终能归约到识别符号，则该输入符号串是相应文法的句子，否则就不是。</p>
<h2 id="基本问题">基本问题</h2>
<p>（假设句型分析过程中每个分析步都对最左的简单短语进行直接归约）如何找出句柄及把此句柄直接归约为哪个非终结符号。</p>
<h2 id="基本思路">基本思路</h2>
<ul>
<li>找出句柄<span class="math inline">\(u\)</span></li>
<li>找出规则<span class="math inline">\(U\rightarrow u\)</span></li>
<li>把<span class="math inline">\(u\)</span>直接归约成<span class="math inline">\(U\)</span></li>
</ul>
<h2 id="基本概念">基本概念</h2>
<p><strong>活前缀</strong>:<strong>右句型</strong>（最右推导可得到的句型）的<strong>前缀</strong>（如<code>abc</code>的前缀为<code>a</code>、<code>ab</code>、<code>abc</code>），而且其右端不会超过该句型的最右边<strong>句柄</strong>（句柄是和某个产生式右部匹配的字符串，可以把句柄归约成产生式左部的非终结符）的末端。</p>
<p>举例，设有文法<span class="math inline">\(G[E]\)</span>：</p>
<p><span class="math display">\[
E\rightarrow E+E|E\times E
\]</span></p>
<p><span class="math inline">\(E+E\times E\)</span>归约成<span class="math inline">\(E+E\)</span>，句柄是<span class="math inline">\(E\times E\)</span>，那么它的活前缀就是<span class="math inline">\(E\)</span>、<span class="math inline">\(E+\)</span>、<span class="math inline">\(E+E\)</span>、<span class="math inline">\(E+E\times\)</span>、<span class="math inline">\(E+E\times E\)</span>。</p>
<p>这里又可以分为两种情况：</p>
<p><strong>归态活前缀</strong>： 活前缀的尾部正好是句柄之尾，这时可以进行规约，规约之后又成为另一句型的活前缀。</p>
<p><strong>非归态活前缀</strong>：句柄尚未形成，需继续移入若干符号之后才能形成句柄。</p>
<h1 id="自底向上优先分析">自底向上优先分析</h1>
<h2 id="简单优先分析法">简单优先分析法</h2>
<p>如果可以确定所有符号的优先级，则只需按优先级顺序规约（当一个符号优先级高于它后面的符号时，向前匹配一个产生式右部进行规约）即可。如果一个文法其任意两个符号间最多只有一种优先关系成立并且所有产生式的右部均不相同，则这么做是可行的，这种文法称为<strong>简单优先文法</strong>。这种分析方式有时用在表达式的分析上，大部分时候不实用。</p>
<h2 id="算符优先分析法">算符优先分析法</h2>
<p>如果只确定终结符之间的关系，则可大大提高适用性，但这时的规约不再是规范的。想通过终结符规约，需要所有产生式右部均没有相邻的非终结符（满足此条件称为<strong>算符文法</strong>）且任一对终结符之间仅有大于、小于或等于一种优先关系存在（满足此条件称为<strong>算符优先文法</strong>）。</p>
<p>如果两个终结符出现在了同一个产生式右部，称他俩优先级相等，写作<span class="math inline">\(a\doteq b\)</span>（点在中间，不会打，下面所有符号同）。</p>
<p>有类似<span class="math inline">\(A\to \dots aB\ldots\)</span>的产生式且有<span class="math inline">\(B\Rightarrow^{+} \Rightarrow Cb\ldots\)</span>（<span class="math inline">\(C\)</span>可以为空）的<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>，这种要规约的话肯定是先把含<span class="math inline">\(b\)</span>的式子规约到<span class="math inline">\(B\)</span>再规约<span class="math inline">\(a\)</span>，所以称为<span class="math inline">\(a\)</span>的优先级小于<span class="math inline">\(b\)</span>，写作<span class="math inline">\(a\dot&lt; b\)</span>。</p>
<p>有类似<span class="math inline">\(A\to \dots Bb\ldots\)</span>的产生式且有<span class="math inline">\(B\Rightarrow^{+} \Rightarrow \ldots aC\)</span>（<span class="math inline">\(C\)</span>可以为空）的<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>，这种要规约的话肯定是先把含<span class="math inline">\(a\)</span>的式子规约到<span class="math inline">\(B\)</span>再规约<span class="math inline">\(b\)</span>，所以称为<span class="math inline">\(a\)</span>的优先级大于<span class="math inline">\(b\)</span>，写作<span class="math inline">\(a\dot&gt; b\)</span>。</p>
<p>以<span class="math inline">\(G[S]\)</span>为例：</p>
<p><span class="math display">\[
\begin{aligned} 
&amp; S\rightarrow S;G|G\\
&amp; G\rightarrow G(T)|H\\
&amp; H\rightarrow a|(S)\\
&amp; T\rightarrow T+S|S
\end{aligned}
\]</span></p>
<p>判断<span class="math inline">\(\doteq\)</span>关系，只需硬看产生式。这里可知<span class="math inline">\((\doteq )\)</span>和隐式的<span class="math inline">\(\# \doteq \#\)</span>。</p>
<p>判断<span class="math inline">\(\dot&lt;\)</span>关系，需先找到所有终结符后跟非终结符的情况，有<span class="math inline">\(;G\)</span>、<span class="math inline">\((T\)</span>、<span class="math inline">\((S\)</span>、<span class="math inline">\(+S\)</span>和隐式的<span class="math inline">\(\#S\)</span>、<span class="math inline">\(\#G\)</span>。这几个关系中，在前面的终结符的优先级小于后面的非终结符的<span class="math inline">\(FirstV_t\)</span>中元素，这里指的是产生式中的第一个终结符，而非可能产生的句子中的第一个终结符，与First集略有不同。</p>
<p><span class="math display">\[
\begin{aligned} 
&amp;FirstV_t(S)=\{;\}+FirstV_t(G)=\{;\}+\{(\}+FirstV_t(H)=\{;\}+\{(\}+\{a,(\}=\{;,a,(\}\\
&amp;FirstV_t(G)=\{a,(\}\\
&amp;FirstV_t(H)=\{a,(\}\\
&amp;FirstV_t(T)=\{+\}+FirstV_t(S)=\{+,;,a,(\}
\end{aligned}
\]</span></p>
<p>故:</p>
<ul>
<li><span class="math inline">\(;G\)</span>有<span class="math inline">\(;\dot&lt; FirstV_t(G)\)</span>；</li>
<li><span class="math inline">\((T\)</span>有<span class="math inline">\((\dot&lt; FirstV_t(T)\)</span>；</li>
<li><span class="math inline">\((S\)</span>有<span class="math inline">\((\dot&lt; FirstV_t(S)\)</span>；</li>
<li><span class="math inline">\(+S\)</span>有<span class="math inline">\(+\dot&lt; FirstV_t(S)\)</span>；</li>
<li><span class="math inline">\(\#S\)</span>有<span class="math inline">\(\#\dot&lt; FirstV_t(S)\)</span>；</li>
<li><span class="math inline">\(\#G\)</span>有<span class="math inline">\(\#\dot&lt; FirstV_t(G)\)</span>。</li>
</ul>
<p>判断<span class="math inline">\(\dot&gt;\)</span>关系，需先找到所有非终结符后跟终结符的情况，有<span class="math inline">\(S;\)</span>、<span class="math inline">\(G(\)</span>、<span class="math inline">\(T)\)</span>、<span class="math inline">\(S)\)</span>、<span class="math inline">\(T+\)</span>和隐式的<span class="math inline">\(G\#\)</span>。这几个关系中，在前面的非终结符的<span class="math inline">\(LastV_t\)</span>集中元素优先级大于后面的终结符，这里指的是产生式中的最后一个终结符，而非可能产生的句子中的第一个终结符，与Last集略有不同。</p>
<p><span class="math display">\[
\begin{aligned} 
&amp;LastV_t(S)=\{;\}+LastV_t(G)=\{;\}+\{)\}+LastV_t(H)=\{;\}+\{)\}+\{a,)\}=\{;,a,)\}\\
&amp;LastV_t(G)=\{a,)\}\\
&amp;LastV_t(H)=\{a,)\}\\
&amp;LastV_t(T)=\{+\}+LastV_t(S)=\{+,;,a,)\}
\end{aligned}
\]</span></p>
<p>故:</p>
<ul>
<li><span class="math inline">\(S;\)</span>有<span class="math inline">\(LastV_t(S)\dot&gt;;\)</span>；</li>
<li><span class="math inline">\(G(\)</span>有<span class="math inline">\(LastV_t(G)\dot&gt;(\)</span>；</li>
<li><span class="math inline">\(T)\)</span>有<span class="math inline">\(LastV_t(T)\dot&gt;)\)</span>；</li>
<li><span class="math inline">\(S)\)</span>有<span class="math inline">\(LastV_t(S)\dot&gt;)\)</span>；</li>
<li><span class="math inline">\(G\#\)</span>有<span class="math inline">\(LastV_t(G)\dot&gt;\#\)</span>；</li>
<li><span class="math inline">\(T+\)</span>有<span class="math inline">\(LastV_t(T)\dot&gt;+\)</span>；</li>
</ul>
<p>将这些关系构建为一张表：</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>;</th>
<th>(</th>
<th>)</th>
<th>+</th>
<th>a</th>
<th>#</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>;</td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
</tr>
<tr class="even">
<td>(</td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\doteq\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td>)</td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
</tr>
<tr class="even">
<td>+</td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td>a</td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
<td></td>
<td><span class="math inline">\(\dot&gt;\)</span></td>
</tr>
<tr class="even">
<td>#</td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
<td></td>
<td><span class="math inline">\(\dot&lt;\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>没有冲突，该文法是算符优先文法。</p>
<p>引入最左素短语概念以确定算符优先分析的句柄，素短语是一个包含终结符的短语，且不包含除自身外的其它素短语。最左素短语就是最左的没啥好说的。可以看出，我们可以通过每次规约最左素短语进行规约。在算符优先文法的输入串中，如果一个终结符的优先级大于它两边的终结符的优先级，则它（和它两边的非终结符，如果有）是素短语。故对于算符优先文法的输入串，每次规约最左的、优先级比两边的终结符大的终结符即可，例如<code>a;(a+a)</code>之于上面的文法：</p>
<table>
<thead>
<tr class="header">
<th>步骤</th>
<th>句型</th>
<th>优先关系</th>
<th>最左素短语</th>
<th>规约</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td><code>#a;(a+a)#</code></td>
<td><code>#&lt;a&gt;;&lt;(&lt;a&gt;+&lt;a&gt;)&gt;#</code></td>
<td>a</td>
<td>H</td>
</tr>
<tr class="even">
<td>2</td>
<td><code>#H;(a+a)#</code></td>
<td><code>#&lt;;&lt;(&lt;a&gt;+&lt;a&gt;)&gt;#</code></td>
<td>a</td>
<td>H</td>
</tr>
<tr class="odd">
<td>3</td>
<td><code>#H;(H+a)#</code></td>
<td><code>#&lt;;&lt;(&lt;+&lt;a&gt;)&gt;#</code></td>
<td>a</td>
<td>H</td>
</tr>
<tr class="even">
<td>4</td>
<td><code>#H;(H+H)#</code></td>
<td><code>#&lt;;&lt;(&lt;+&gt;)&gt;#</code></td>
<td>T+S</td>
<td>T</td>
</tr>
<tr class="odd">
<td>5</td>
<td><code>#H;(T)#</code></td>
<td><code>#&lt;;&lt;(=)&gt;#</code></td>
<td>(T)</td>
<td>S</td>
</tr>
</tbody>
</table>
<p>这一步把<code>(T)</code>规约到<code>S</code>。这里只要求形式相同，具体非终结符是哪个并不关心。</p>
<table>
<thead>
<tr class="header">
<th>步骤</th>
<th>句型</th>
<th>优先关系</th>
<th>最左素短语</th>
<th>规约</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>6</td>
<td><code>#H;S#</code></td>
<td><code>#&lt;;&gt;#</code></td>
<td>H;S</td>
<td>S</td>
</tr>
<tr class="even">
<td>7</td>
<td><code>#S#</code></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>虽然接受了，但该字符串其实不是文法的句子。毕竟它不是规范的，难免。因此只适合表达式的分析。</p>
<h1 id="lr分析">LR分析</h1>
<h2 id="概述-1">概述</h2>
<p>LR(K)分析器包括总控程序和分析表。</p>
<p>总控程序根据不同的分析表决定下一步的处理动作。不同文法的总控程序相同，只是分析表不同。</p>
<p>分析表是LR(K)分析技术的核心，根据具体文法按某种规则构造，由分析动作表和转换表构成。</p>
<p>分析动作表<code>ACTION[S,y]</code>指明当状态<code>S</code>与向前看符号串<code>y</code>相匹配时所应采取的动作。包括：移进、归约、接受、出错 。</p>
<p>状态转换表<code>GOTO[S,U]</code>指明当状态<code>S</code>与非终结符号<code>U</code>相匹配时所转换到的下一状态。</p>
<h2 id="分析过程">分析过程</h2>
<ol type="1">
<li>将初始状态S0与#压进分析栈</li>
<li>根据栈顶状态和当前输入符号查动作表进行以下工作
<ul>
<li>移进(Si)：当前输入符号进符号栈,新的状态进状态栈,继续扫描.</li>
<li>归约(rj)：按某规则归约,若规则的右部长度n,则符号栈顶和状态栈顶n个元素同时退栈. 把归约后的左部符号进符号栈,查状态转换表,新的状态进状态栈.</li>
<li>接受(acc): 分析成功,结束.</li>
<li>出错(空白): 报告出错信息.</li>
</ul></li>
<li>重复(1),直到接受或出错为止.</li>
</ol>
<h2 id="lr0分析">LR(0)分析</h2>
<p>设有文法<span class="math inline">\(G[S]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(1)S\rightarrow A\\
&amp;(2)S\rightarrow B\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow c\\
&amp;(5)B\rightarrow aBb\\
&amp;(6)B\rightarrow d\\
\end{aligned}
\]</span></p>
<p>为了确保起始符号不出现在产生式右部，并显式地表示EOF，增加一个起始符号S'，得到增广文法<span class="math inline">\(G&#39;[S&#39;]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(0)S&#39;\rightarrow S\#\\
&amp;(1)S\rightarrow A\\
&amp;(2)S\rightarrow B\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow c\\
&amp;(5)B\rightarrow aBb\\
&amp;(6)B\rightarrow d\\
\end{aligned}
\]</span></p>
<p>并引入一个“・”记号，这个记号之前的部分为已经读入（并且匹配）的部分，之后的部分为期望为读入的部分匹配的部分。为了便于识别，手写时将点记号写作“<span class="math inline">\(\Delta\)</span>”。</p>
<p>为了得到想要的两个表，需要先构建这个文法的自动机。</p>
<p>首先看起始状态，现在面对一个未知的串，期望其匹配G'，也就是未读入的部分匹配<span class="math inline">\(S\#\)</span>。将现在的状态称为<span class="math inline">\(S_0\)</span>，也就是：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>既然期待<span class="math inline">\(S\)</span>，那左部符号为<span class="math inline">\(S\)</span>的产生式也可以被期待。加进去，就变成：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>同理，都期待<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>了，那左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td></td>
</tr>
</tbody>
</table>
<p>现在假设对每个项目，真的都读到了它的后继符号，那将进入新的状态。给它们起名字：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td>
<td><span class="math inline">\(S\)</span></td>
<td><span class="math inline">\(S_1\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta A\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td><span class="math inline">\(S_2\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(S\rightarrow \Delta B\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td><span class="math inline">\(S_3\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td><span class="math inline">\(S_5\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td><span class="math inline">\(S_6\)</span></td>
</tr>
</tbody>
</table>
<p>对于两个后继为<span class="math inline">\(a\)</span>的，由于其都是“第一个读到<span class="math inline">\(a\)</span>”的情况，所以对应的下一个状态是相同的。</p>
<p>现在考虑<span class="math inline">\(S_1\)</span>。现在已经读入了<span class="math inline">\(S\)</span>（或者不能叫读入了，因为<span class="math inline">\(S\)</span>并不是一个终结符，不过意思是这么个意思……），所以<span class="math inline">\(\Delta\)</span>要放在<span class="math inline">\(S\)</span>后面，那就是后面没有没有待匹配的东西了，这时进行规约：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_1\)</span></td>
<td><span class="math inline">\(S&#39;\rightarrow S\Delta\)</span></td>
<td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p><span class="math inline">\(S_2\)</span>和<span class="math inline">\(S_3\)</span>同理：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td><span class="math inline">\(S\rightarrow A\Delta\)</span></td>
<td><span class="math inline">\(\#S\rightarrow A\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td><span class="math inline">\(S\rightarrow B\Delta\)</span></td>
<td><span class="math inline">\(\#S\rightarrow B\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>对<span class="math inline">\(S_4\)</span>，已经读入了<span class="math inline">\(a\)</span>，对于<span class="math inline">\(A\rightarrow aAb\)</span>，期望看到<span class="math inline">\(A\)</span>；对于<span class="math inline">\(B\rightarrow aBb\)</span>，期望看到<span class="math inline">\(B\)</span>，所以左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待——注意此时的<span class="math inline">\(\Delta\)</span>在右部式的最左，而不是<span class="math inline">\(a\)</span>后，因为这个期待的<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>还没被读取：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow a\Delta Ab\)</span></td>
<td><span class="math inline">\(A\)</span></td>
<td><span class="math inline">\(S_7\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow a\Delta Bb\)</span></td>
<td><span class="math inline">\(B\)</span></td>
<td><span class="math inline">\(S_8\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(A\rightarrow \Delta c\)</span></td>
<td><span class="math inline">\(c\)</span></td>
<td><span class="math inline">\(S_5\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td>
<td><span class="math inline">\(a\)</span></td>
<td><span class="math inline">\(S_4\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(B\rightarrow \Delta d\)</span></td>
<td><span class="math inline">\(d\)</span></td>
<td><span class="math inline">\(S_6\)</span></td>
</tr>
</tbody>
</table>
<p>这里头两个项目时已经读入了<span class="math inline">\(a\)</span>，期待<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>，是新状态；之后的是已有的状态。</p>
<p>对于<span class="math inline">\(S_5\)</span>和<span class="math inline">\(S_6\)</span>，当读到期待的符号后后面就没了，期待EOF：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_5\)</span></td>
<td><span class="math inline">\(A\rightarrow c\Delta\)</span></td>
<td><span class="math inline">\(\#A\rightarrow c\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_6\)</span></td>
<td><span class="math inline">\(B\rightarrow d\Delta\)</span></td>
<td><span class="math inline">\(\#B\rightarrow d\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>对于<span class="math inline">\(S_7\)</span>和<span class="math inline">\(S_8\)</span>，当读到期待的符号后再后还有得读，又多了两种状态：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_7\)</span></td>
<td><span class="math inline">\(A\rightarrow aA\Delta b\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_9\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_8\)</span></td>
<td><span class="math inline">\(B\rightarrow aB\Delta b\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_{10}\)</span></td>
</tr>
</tbody>
</table>
<p>对于<span class="math inline">\(S_9\)</span>和<span class="math inline">\(S_10\)</span>，当读到期待的符号后期待EOF：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>项目</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_9\)</span></td>
<td><span class="math inline">\(A\rightarrow aAb\Delta\)</span></td>
<td><span class="math inline">\(\#A\rightarrow aAb\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_10\)</span></td>
<td><span class="math inline">\(B\rightarrow aBb\Delta\)</span></td>
<td><span class="math inline">\(\#B\rightarrow aBb\)</span></td>
<td>END</td>
</tr>
</tbody>
</table>
<p>这样所有的状态都分析完了。整合一下这个表，就是：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 3%" />
<col style="width: 73%" />
<col style="width: 8%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th>状态</th>
<th>项目集</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(\{\\S&#39; \rightarrow \Delta S\\S\rightarrow \Delta A\\S\rightarrow \Delta B\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td>
<td><span class="math inline">\(S\\A\\B\\a\\c\\a\\d\)</span></td>
<td><span class="math inline">\(S_1\\S_2\\S_3\\S_4\\S_5\\S_4\\S_6\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_1\)</span></td>
<td><span class="math inline">\(\{\\S&#39;\rightarrow S\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow A\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#S\rightarrow A\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow B\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#S\rightarrow B\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow a\Delta Ab\\B\rightarrow a\Delta Bb\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td>
<td><span class="math inline">\(A\\B\\a\\c\\a\\d\)</span></td>
<td><span class="math inline">\(S_7\\S_8\\S_4\\S_5\\S_4\\S_6\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_5\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow c\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#A\rightarrow c\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_6\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow d\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#B\rightarrow d\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_7\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aA\Delta b\\\}\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_9\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_8\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow aB\Delta b\\\}\)</span></td>
<td><span class="math inline">\(b\)</span></td>
<td><span class="math inline">\(S_10\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_9\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aAb\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#A\rightarrow aAb\)</span></td>
<td>END</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_{10}\)</span></td>
<td><span class="math inline">\(\{\\B\rightarrow aBb\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#B\rightarrow aBb\)</span></td>
<td>END</td>
</tr>
<tr class="even">
<td>END</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>这样就获得了这个文法的自动机。为了方便程序查找在啥状态下读到啥时该做啥，需要构建分析表。</p>
<p>当位于状态<span class="math inline">\(S_0\)</span>时，下一位可能的符号有<span class="math inline">\(a\)</span>，<span class="math inline">\(b\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>和<span class="math inline">\(\#\)</span>。由自动机知此时下一位若为<span class="math inline">\(a\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>是符合规则的。因此若下一位是<span class="math inline">\(a\)</span>则移进（shift）一位（就是把<span class="math inline">\(S_0,a\)</span>入分析栈，读入的指针右移一位）并转换到到<span class="math inline">\(S_4\)</span>，<span class="math inline">\(c\)</span>则<span class="math inline">\(S_5\)</span>，<span class="math inline">\(d\)</span>则<span class="math inline">\(S_6\)</span>。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td>s4</td>
<td></td>
<td>s5</td>
<td>s6</td>
<td></td>
</tr>
</tbody>
</table>
<p>也就是从这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |x       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>变成这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S4      |a       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |x       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>当位于状态<span class="math inline">\(S_1\)</span>时，如果遇到<span class="math inline">\(\#\)</span>就是分析完了，称之为“acc(ept)”，其它情况不符合自动机。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_1\)</span></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>acc</td>
</tr>
</tbody>
</table>
<p>当位于状态<span class="math inline">\(S_2\)</span>时，栈中的内容是<span class="math inline">\(A\)</span>，要进行规约（reduce）。</p>
<p>根据<span class="math inline">\(S_2\)</span>的规则，也就是规则1，<span class="math inline">\(A\)</span>规约后将变成<span class="math inline">\(S\)</span>。所以在表里填上“r1”表示根据规则1规约，并弹出被规约的内容，这里只有<span class="math inline">\(S_2,A\)</span>，规约后得到的非终结符是使用的规则的左部符号，到达栈顶状态遇到这一符号的状态。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
</tr>
</tbody>
</table>
<p>也就是由（这个例子中只有<span class="math inline">\(S_0\)</span>后继符号是<span class="math inline">\(S\)</span>，此时后继状态是<span class="math inline">\(S_1\)</span>）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S2      |A       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>变成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S1      |S       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>为方便查找，还要再搞一个将状态与非终结符联系起来的表，为表区分，之前的称为“ACTION”表，后者称为“GOTO”表。</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(S\)</span></th>
<th><span class="math inline">\(A\)</span></th>
<th><span class="math inline">\(B\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td>1</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><span class="math inline">\(S_3\)</span>同样是要规约，要从<span class="math inline">\(B\)</span>规约到<span class="math inline">\(S\)</span>也就是按规则2:</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th><span class="math inline">\(a\)</span></th>
<th><span class="math inline">\(b\)</span></th>
<th><span class="math inline">\(c\)</span></th>
<th><span class="math inline">\(d\)</span></th>
<th><span class="math inline">\(\#\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_3\)</span></td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
</tr>
</tbody>
</table>
<p>依此类推即可获得分析表。</p>
<p>这种分析方法的问题在于，一旦进入某个可以规约的状态，无论输入是什么都会规约。这可能导致错误的规约。</p>
<h2 id="slr1分析">SLR(1)分析</h2>
<p>对大部分文法，会出现移进与规约的冲突和规约与规约的冲突。</p>
<p>设有文法<span class="math inline">\(G[S]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(1)S\rightarrow A\\
&amp;(2)A\rightarrow aAd\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow \epsilon
\end{aligned}
\]</span></p>
<p>写为<span class="math inline">\(G&#39;[S&#39;]\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(0)S&#39;\rightarrow S\\
&amp;(1)S\rightarrow A\\
&amp;(2)A\rightarrow aAd\\
&amp;(3)A\rightarrow aAb\\
&amp;(4)A\rightarrow \epsilon
\end{aligned}
\]</span></p>
<p>构造自动机：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 2%" />
<col style="width: 65%" />
<col style="width: 19%" />
<col style="width: 11%" />
</colgroup>
<thead>
<tr class="header">
<th>状态</th>
<th>项目集</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow \Delta A\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta \\\}\)</span></td>
<td><span class="math inline">\(A\\a\\a\\\#A\rightarrow \epsilon\)</span></td>
<td><span class="math inline">\(S_1\\S_2\\S_2\\END\)</span></td>
</tr>
</tbody>
</table>
<p>可以发现这里面既有移进项又有规约项。这种情况就说这个文法不是LR(0)的。如果一个文法的自动机同时存在不止一个规约项目，它也不是LR(0)的。</p>
<p>继续分析：</p>
<table>
<colgroup>
<col style="width: 2%" />
<col style="width: 70%" />
<col style="width: 18%" />
<col style="width: 8%" />
</colgroup>
<thead>
<tr class="header">
<th>状态</th>
<th>项目集</th>
<th>后继符号</th>
<th>后继状态</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td><span class="math inline">\(\{\\S&#39;\rightarrow \Delta S\\S\rightarrow \Delta A\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta \\\}\)</span></td>
<td><span class="math inline">\(S\\A\\a\\a\\\#A\rightarrow \epsilon\)</span></td>
<td><span class="math inline">\(1\\2\\3\\3\\END\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_1\)</span></td>
<td><span class="math inline">\(\{\\S&#39;\rightarrow S\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td>
<td><span class="math inline">\(END\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td><span class="math inline">\(\{\\S\rightarrow A\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#S\rightarrow A\)</span></td>
<td><span class="math inline">\(END\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow a\Delta Ad\\A\rightarrow a\Delta Ab\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta\\\}\)</span></td>
<td><span class="math inline">\(A\\A\\a\\a\\\#A\rightarrow \epsilon\)</span></td>
<td><span class="math inline">\(4\\4\\3\\3\\END\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aA\Delta d\\A\rightarrow aA\Delta b\\\}\)</span></td>
<td><span class="math inline">\(d\\b\)</span></td>
<td><span class="math inline">\(5\\6\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_5\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aAd\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#A\rightarrow aAd\)</span></td>
<td><span class="math inline">\(END\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_6\)</span></td>
<td><span class="math inline">\(\{\\A\rightarrow aAb\Delta\\\}\)</span></td>
<td><span class="math inline">\(\#A\rightarrow aAb\)</span></td>
<td><span class="math inline">\(END\)</span></td>
</tr>
</tbody>
</table>
<p>除上述冲突外无其它冲突。冲突的<span class="math inline">\(A\)</span>的Follow集和这里的两个<span class="math inline">\(a\)</span>无交集，故可以根据这个进行判断是移进还是规约，这种叫SLR(1)文法，因为根据下一个输入字符即可判断执行什么操作。之所以是SLR而不是LR，是因为它仅在冲突时进行判断，不冲突时仍然是不管输入啥都规约。这导致有时仍然会错误地规约。一个项目集中有两个规约的情况类似，考察两个左部符号的Follow集，没有交集的话也OK。</p>
<p>类似LR(0)地可获得分析表。唯一区别就是有些地方状态既可能要移进也可能要规约，而不是要规约一整行都是规约：</p>
<table>
<thead>
<tr class="header">
<th>状态</th>
<th>a</th>
<th>b</th>
<th>d</th>
<th>#</th>
<th>A</th>
<th>S</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(S_0\)</span></td>
<td>s3</td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td>2</td>
<td>1</td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_1\)</span></td>
<td></td>
<td></td>
<td></td>
<td>acc</td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_2\)</span></td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td>r1</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_3\)</span></td>
<td>s3</td>
<td>r4</td>
<td>r4</td>
<td>r4</td>
<td>4</td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_4\)</span></td>
<td></td>
<td>s6</td>
<td>s5</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><span class="math inline">\(S_5\)</span></td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td>r2</td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(S_6\)</span></td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td>r3</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>以分析<code>ab#</code>为例，初始为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>S0遇a，故入栈S3和a，指针后移：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>S3遇b，按规则(4)规约。规则(4)右部串长度为0，故弹出栈顶前0个元素。弹完栈顶是(S3,a)，规则(4)左部符号为A，故S3遇A，将S4和A入栈。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S4      |A       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>S4遇b，入栈S6和b，指针后移。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +-----^----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S6      |b       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S4      |A       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>S6遇#，按规则(3)规约。规则(3)右部串长度为3，故弹出栈顶三元素，弹出后栈顶为(S0,#)，规则(3)左部符号为A。S0遇A，入栈S2和A。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+ +-----^----------------------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">|        |        |       +</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S2      |A       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure>
<p>S2遇#，按规则(1)规约，弹一对元素，S0遇S转S1，遇#，接受。</p>
<h2 id="lr1分析">LR(1)分析</h2>
<p>上面讲项目集规约与移进、规约与规约出现冲突时考察交集，那万一有呢？当时是通过比较Follow集，但Follow集只是个笼统的说法，一个非终结符的Follow集中的某个元素可能在某些句型中并不会出现。考虑在自动机的每一个产生式中标注其推导出的句型可能的后缀，当遇到可能遇到的后缀时才进行规约。这不止可以避免冲突，还可以避免误规约。</p>
]]></content>
      <categories>
        <category>深蓝</category>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>语法分析</tag>
      </tags>
  </entry>
  <entry>
    <title>在MyEclipse中使用Struts2框架</title>
    <url>/2019/10/24/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8Struts2%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191024_struts.png" /></p>
<center>
贼难配的环境。学委甚至到快结课才配好……
</center>
<a id="more"></a>
<p>CSDN——尤其是CSDN论坛，是好东西，也是坏东西。里面有许许多多大神分享有用的经验，但更多的是半吊子误人子弟，给出一些过时的、没用的建议。小白面对茫茫多的信息只能一边望洋兴叹，祈祷下一个看到的解决方案能稍微粘点边；一边对遇到的每行代码、每条命令追根究底，努力摆脱NOOB的身份。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Tomcat 9.0</li>
<li>MyEclipse 2017 ci10</li>
<li>Struts 2.5.20</li>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 1.8u221</li>
</ul>
<h1 id="struts2的下载">1. Struts2的下载</h1>
<p>在<code>http://struts.apache.org/download.cgi</code>下载zip包<code>struts-版本-min-lib.zip</code>和<code>struts-版本-all.zip</code>。</p>
<p>前者包含的Struts2所必须的最少的包，后者包含了所有的包和例程。</p>
<h1 id="新建项目与导包">2. 新建项目与导包</h1>
<p>新建一个动态Web项目——有人说这里对动态Web项目的版本有要求需要2.5，实测没有——然后例如取名为“Struts2_HelloWorld”。先不急着完成，去下一步勾选“Generate Web.xml 啥啥啥”那一项和“Generate index.jsp 啥啥啥”（这个缺省是勾选的）。前者将在WEB-INF下创建一个Web.xml，Struts2请求需要先通过其中定义的过滤器。有人说这里需要将“WebRoot”修改为“WebContent”，实测两者均可，估计改其它名也没影响。</p>
<p>将前面下载的<code>struts-版本-min-lib.zip</code>中的包丢到<code>WEB-INF/lib/</code>，选中这些包（选中的是包而不是文件夹lib），右键构建路径。随后工作空间栏中项目根目录下将出现一个“Web应用程序库”，里面显示这些包。不要导入ALL版的lib，因为这些包有一些冲突，最简单的冲突原因例如如果两个包中有同样路径的类，此时某包先加载，则后加载的包中同名的类无法加载，导致一些函数无法找到等。网上很多人都介绍了最小需求包集合，但不少都与官方的有出入。</p>
<p>如果包导多了，由于已经建立了依赖所以无法直接删除。在工作目录视图中右击项目根文件夹，选构建路径，配置构建路径，这里显示了所有已导入的包，移除想删的——或者所有的也行，再移除整个Web应用程序库。然后可以在lib文件夹下删除包，再重新导入即可。</p>
<h1 id="编写action">3. 编写Action</h1>
<p>在<code>src/</code>新建一个类，例如包名为“helloWorld.action”，类名为“HelloWorld”。在自动生成的类中添加一个<code>execute()</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	System.out.println(<span class="string">"进入action。"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	System.out.println(<span class="string">"赋值text。"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="string">"Hello World !"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>这里HelloWorld类并不需要继承什么东西，有<code>execute()</code>并返回一个String即可。这里希望执行action后跳转到的页面能够根据action的情况决定显示什么内容，而不是一个写死的jsp，所以加一个get函数，命名规则和JavaBean一样，跳转过去后struts2的<code>s:property</code>标签可以通过函数名找到这个函数从中获取值。多加一个<code>println()</code>便于判断是否成功进入action。</p>
<h1 id="编写页面">4. 编写页面</h1>
<p>这个测试例程将有两个页面，一个是主页，一个是执行action后将要跳转到的页面。主页已经生成好了，为<code>body</code>添加一个按钮：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"hello"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Say Hello to the World!"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<p>用户按下这个按钮，将调用<code>hello.action</code>。</p>
<p>除此之外还需要在jsp第一行加上<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>，这句话指明了这个页面将使用struts2的标签，而且这些标签将在s之前。</p>
<p>另外再创建action将跳转到的页面，例如命名为helloworld.jsp，与index同样位于<code>WebRoot/</code>。</p>
<p>在body中添加<code>&lt;h1&gt;&lt;s:property value=&quot;text&quot;/&gt;&lt;/h1&gt;</code>，并在一开始添加<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>。</p>
<h1 id="添加配置文件">5. 添加配置文件</h1>
<h2 id="struts.xml">5.1. struts.xml</h2>
<p><code>struts.xml</code>将URL、action类和jsp页面相关联。它规定了当收到某个URL请求时应当调用哪个类，并根据这个类的返回值决定跳转至哪个jsp页面。</p>
<p>可以从之前下载的<code>struts-版本-all.zip</code>中的<code>apps/</code>找一个例程，在其<code>WEB-INF/classes/</code>会有一个该文件。将该文件复制到项目的<code>src/</code>——或者什么其它地方，这个似乎无所谓，无论这个文件在项目的哪里IDE都会在<code>WEB-INF/classes/</code>下创建一个对应的配置文件。建议复制例程的该文件而不是自己编写，因为这样更不容易出错。</p>
<p>复制过来后将<code>&lt;struts&gt;&lt;/struts&gt;</code>中的内容修改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.devMode"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"HelloWorldPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">class</span>=<span class="string">"helloWorld.action.HelloWorld"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/helloworld.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure>
<p>设置<code>struts.devMode</code>为true可以输出更多日志信息，HelloWorldPkg中的hello这个action规定：当URL为<code>&lt;网站地址&gt;/hello</code>时，调用<code>helloWorld.action</code>包中的<code>HelloWorld</code>类，根据<code>execute()</code>的返回值决定跳转；当返回值为<code>&quot;success&quot;</code>时跳转至<code>/helloworld.jsp</code>。</p>
<h2 id="web.xml">5.2. Web.xml</h2>
<p>新建项目时已经自动生成了这个文件。将<code>&lt;Web-app&gt;&lt;/Web-app&gt;</code>内的内容修改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Struts2_HelloWorld<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr></table></figure>
<p>这一段内容指定index.jsp为welcome文件。然后配置了Struts2的过滤器来运行任何匹配模式/*的URL，即所有的URL都需要拦截后由Struts进行判断，如果程序决定要调用某个action，再由前面的<code>struts.xml</code>决定调用哪一个。这需要使用一个<code>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</code>类。注意在不同版本中这个类是不同的。</p>
<p>有帖子指出<code>welcome-file-list</code>必须放在最后。似乎这并不是必须的。</p>
<h2 id="log4j2.xml">5.3. log4j2.xml</h2>
<p>这个包似乎与日志生成有关，导入方法类似<code>struts.xml</code>，不导入的话会报错<code>ERROR StatusLogger Log4j2 could not find a logging implementation.</code>，但因为只是日志相关所以不影响使用。我导入了也会报错。可能是因为有依赖没搞好？先不管它。</p>
<h1 id="尾声">6. 尾声</h1>
<p>右击项目，运行方式-&gt;在服务器上运行即可。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>Struts2</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>MyEclipse</tag>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>编写一个注册页面并使用JS函数校验</title>
    <url>/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%B9%B6%E4%BD%BF%E7%94%A8JS%E5%87%BD%E6%95%B0%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_JSsubmit.jpg" /></p>
<center>
实现了简单的参数传递与判断。不连接数据库。
</center>
<a id="more"></a>
<p>首先新建一个Web Project，在WebRoot下新建一个html、一个js和一个css文件。将html自动生成的添加css文件的那段注释改成能用的，再添加<code>&lt;script type=&quot;text/javascript&quot; src=&quot;./js.js&quot;&gt;&lt;/script&gt;</code>引入js文件。</p>
<p>body中就是一个表格，action是跳转，单击时希望使用js文件中的函数进行校验。</p>
<p>在表单中加上<code>οnsubmit=&quot;return false;&quot;</code>可以阻止表单提交。但是对于如下的代码<code>οnsubmit=&quot;submitTest();&quot;</code>，如果提交表单时submitTest()返回false，实际情况是表单正常提交。原因在于如果这样写，相当于：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    submitTest();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
<p>而我们希望得到这样的函数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    return submitTest();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"succ.jsp"</span> <span class="attr">name</span>=<span class="string">"form"</span> <span class="attr">onsubmit</span>=<span class="string">"return signIn();"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">""</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">caption</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkName();"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onfocus</span>=<span class="string">"clearName();"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">value</span>=<span class="string">"在此输入用户名"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_name"</span>&gt;</span>请输入用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkPw();"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_pw"</span>&gt;</span>密码由六个或以上字符组成<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">name</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">id</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">				<span class="attr">onblur</span>=<span class="string">"checkRepw();"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_repw"</span>&gt;</span>请确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex1"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex0"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"PE"</span>&gt;</span>体育</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"music"</span>&gt;</span>音乐</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"chinese"</span>&gt;</span>文学</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"other"</span>&gt;</span>其他</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>出生年月<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"year"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1990"</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1991"</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1992"</span>&gt;</span>1992<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1993"</span>&gt;</span>1993<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1994"</span>&gt;</span>1994<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1995"</span>&gt;</span>1995<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1996"</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1997"</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1998"</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1999"</span>&gt;</span>1999<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2000"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;/<span class="name">select</span>&gt;</span>年</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"month"</span> &gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"7"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"8"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"9"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"10"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"11"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"12"</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;/<span class="name">select</span>&gt;</span>月</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>个人简介<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"4"</span> <span class="attr">cols</span>=<span class="string">"25"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure>
<p><code>required=&quot;required&quot;</code>可以要求该项为必填，否则无法提交。select中无法使用该属性，可以使用<code>&lt;option selected=&quot;selected&quot;&gt;2000&lt;/option&gt;</code>设定默认选择的项。</p>
<p>onblur和onfocus分别在对象失去和获得焦点时调用函数，可以实时地提醒用户一些信息。</p>
<p>比如将检查是否提交的函数分为几个小部分，在用户填写表单各小部分对应的对象获得和失去焦点时就调用，即时地给出提醒：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value==<span class="string">"在此输入用户名"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value = <span class="literal">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value !=<span class="string">"在此输入用户名"</span>&amp;&amp;<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"你好，"</span>+<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"请输入用户名"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value=<span class="string">"在此输入用户名"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)([0-9A-Za-z]*[\x00-\x2F\x3A-\x40\x5B-\xFF][0-9A-Za-z]*)&#123;2,&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"天呐这么复杂的密码你记得住？"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)[0-9A-Za-z]*[\x00-\x2f\x3A-\x40\x5B-\xFF][0-9A-Za-z]*$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这强度凑活吧……"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^[0-9A-Za-z]&#123;6,16&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这密码我一刻钟就能破解！"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"密码由六至十六个字符组成"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkRepw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> pw = <span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> repw = <span class="built_in">document</span>.getElementById(<span class="string">'repw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> tip_repw = <span class="built_in">document</span>.getElementById(<span class="string">'tip_repw'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(pw.value == repw.value&amp;&amp;pw.value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"√"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(repw.value==<span class="string">""</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"请确认密码"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		tip_repw.innerHTML=<span class="string">"密码不一致"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">signIn</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkName())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请检查用户名！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkPw())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请检查密码！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">if</span>(!checkRepw())</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		alert(<span class="string">"请重新确认密码！"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>HTML DOM 定义了多种查找元素的方法，如果需要查找文档中的一个特定的元素，最有效的方法是 getElementById()。在写html时给需要被查找的元素一个id属性，为它指定一个（在文档中）唯一的名称，然后就可以用该id查找想要的元素，该函数返回元素对象。<strong>注意要用.value获取它的“值”</strong>，因为返回的只是标签，而想要的“值”是标签里的东西。而修改的话就是修改<code>innerHTML</code>也就是标签里面的html语句，另外还有一个<code>innerText</code>类似前者，但是把内容都当文本理解（有点类似赋值给value？）。例如添加<code>&lt;h1&gt;test&lt;\h1&gt;</code>，前者显示h1级别的<code>test</code>，后者显示<code>&lt;h1&gt;test&lt;\h1&gt;</code>。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JavaScript与jQuery</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置JS&amp;jQuery开发环境</title>
    <url>/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJS-jQuery%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_spket.jpg" /></p>
<center>
之前的JSP环境直接就可以拿来写JS,但是并没有语法提示等,因此需要装个插件解决这个问题。
</center>
<a id="more"></a>
<p>javaScript是一种脚本语言。可以以<code>&lt;script&gt; code &lt;/script&gt;</code>的形式混合在HTML页面中编写动态网页。</p>
<h1 id="环境">0. 环境</h1>
<ul>
<li>MyEclipse 2017 Ci10</li>
<li>jquery-migrate-1.4.1.js</li>
<li>spket-1.6.23</li>
</ul>
<h1 id="安装spket">1. 安装spket</h1>
<p>spket是一个JS的IDE，但也可以作为eclipse或MyEclipse的插件使用。下载<code>https://spket.com/download.html</code>中的plugin版本得到一个zip，将其中两个文件夹直接与MyEclipse目录下同名文件夹合并即可。</p>
<p>为了让它可以对jQuery进行智能提示，还需为它指定jQuery的文件，在<code>https://jquery.com/download/</code>右击另存为uncompressed版本。网上说压缩过的min版本会各种报错。</p>
<h1 id="配置spket">2. 配置spket</h1>
<p>使用<code>.../&quot;MyEclipse 2017 CI&quot;/myeclipse -clean</code>启动MyEclipse。直接启动会报错，可能是因为插件缓存的缘故。注意因为MyEclipse 2017默认安装目录中间有空格所以要加引号。启动后在窗口-&gt;首选项-&gt;spket-&gt;JavaScript Profiles中new一个profile，比如取名为”jQuery“，点击Add Library，选择jQuery；再点击Add File，选择jQuery的<code>.js</code>。最后点Default。</p>
<p>在窗口-&gt;首选项–&gt;常规–&gt;编辑器–&gt;文件关联中将<code>*.js</code>的缺省编辑器设为“Spket JavaScript Editor”即可。</p>
<p>右键项目名称，点击Reload JavaScript Profile然后再打开JS文件（可能需要重启），应当会出现语法提示和智能补全。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JavaScript与jQuery</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>JavaScript</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>《城市：天际线》中的有用模组</title>
    <url>/2019/10/07/%E5%85%B6%E5%AE%83/%E3%80%8A%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%8B%E4%B8%AD%E7%9A%84%E6%9C%89%E7%94%A8%E6%A8%A1%E7%BB%84/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191007_skylinemod.jpg" /></p>
<center>
记录好用的《发际线》模组。感谢所有模组的作者！常年更新。
</center>
<a id="more"></a>
<p>尽管即使打开蓝灯也无法在steam客户端和游戏内访问创意工房，但在浏览器中的订阅也可以立即生效。因此可以在游戏中打开游戏内浏览器，再将地址复制至浏览器进行订阅操作。</p>
<h1 id="影响建造的模组">影响建造的模组</h1>
<h2 id="fine-road-anarchy和fine-road-tool">fine road anarchy和fine road tool</h2>
<p>前者屏蔽道路的碰撞判定。是极重要的前置模组。后者 强化了道路编辑模式下那个调整每次抬升高度的功能，点开后分为三行，除第一行保留原有功能外，第二行允许强制道路类型，第三行四个功能分别为取消道路角度限制、智能弯曲道路、自动吸附和道路与其它元素的无冲突（例如开启后升级道路不会挤没建筑）。</p>
<h2 id="move-it">Move It</h2>
<p>启用该模组后将在右下角推土机的左边新增一个十字箭头样的按钮，提供了移动已安放物品的功能。</p>
<p>点开后从左至右共九个按钮。</p>
<p>前两个按钮是导入与导出，可以导入与导出当前选中的元素。导出似乎与主题相关，将导出的内容导入到不同主题的地图时，不兼容的建筑不会被导入（似乎是因为这个，有待继续测试，总之道路没问题，低密度住宅区没问题，会成为“历史性建筑”出现，太阳能发电站垃圾焚烧厂收费站电车站各种直升机中心没问题，而小学警局消防局等和商业区等都无法导入）。之后两个选项是地形跟随与辅助线，前者控制在移动部分类型元素如房屋时其高度是否跟随地形变化，后者开启时为道路等提供角度为90°的整倍时的吸附。</p>
<p>之后的四个选项提供点选择（可使用shift多选）、区域选择、复制和删除的功能。其中复制可以使用ctrl+c，并支持ctrl+z撤销，区域选择功能提供了大量完善的分类功能，且可使用类似Ps中吸管的类型选定工具。</p>
<p>最后一个上三角图标提供了大量有用功能。从下往上数第一个柱状图一样的图标，先选中一个建筑或道路节点等，再选中它，再选另一个元素，即可使前者与后者同高。选中一个元素后再点一下第二个长相与第一个类似的图标就可以使它的高度恢复贴地状态（注意，对高架等使用此功能会使路面和柱子全部贴地，但不影响通行）。选中一段路的所有点和段后再点一下第三个像线性拟合一样的图标后再点击某两个节点，则选中道路的角度将与两点连线与地面之夹角相同。选中一些建筑后点击第四个五边形图标或第五个闪电形图标再点击其中或另外的一建筑，可使所有被选中建筑朝向被点击建筑的方向，区别在于前者的旋转中心为各建筑中心，后者为整体的中心。选中后点击第六个图标则可打乱方向。选中一些元素后点击上数第一个图标再点一个线性元素可实现镜面复制。</p>
<p>另外贴合右侧边缘处还提供了两个视图。</p>
<h2 id="network-extentions-2">network extentions 2</h2>
<p>提供更多道路种类。例如公交车道与人行道。尤其人行道可做成低级道路避免车辆抄近道。</p>
<h2 id="ploppable-rico">Ploppable RICO</h2>
<p>RICO指的是住宅、商业等四个区那种会生长的建筑（Residential住宅、Industrial工业、Commerical商业、Office办公，首字母RICO）的一种创意工房版本。启用此模组后会在工具栏右侧出现一个新的左绿右黄下蓝的图标，在创意工房订阅了“RICO”之后可以从此处“噗通”出建筑。也可以从弹出的面板右上角的设置中添加游戏自带的建筑并设置其属性使之成为“RICO”，此操作重启后生效。</p>
<h2 id="plop-the-growables">Plop the Growables</h2>
<p>原本Find It只能放置“RICO”，该模组可让游戏自带的“Growables”可通过Find It放置。</p>
<h2 id="precision-engineering">Precision Engineering</h2>
<p>修路时按住shift显示更多参数。</p>
<h1 id="影响经营的模组">影响经营的模组</h1>
<h2 id="extra-landscaping-tools">extra landscaping tools</h2>
<p>在工具栏上预算图标右侧新增矿物和水体两个图标，可编辑矿物与水的分布。</p>
<h2 id="improved-public-transport-2">Improved Public Transport 2</h2>
<p>在查看公共交通面板时提供时速等信息。</p>
<h2 id="no-problem-notifications">No Problem Notifications</h2>
<p>作</p>
<h2 id="quay-anarchy">quay anarchy</h2>
<p>允许小河堤在任何地方建造。小河堤平整坡面很有用也很好看。</p>
<h2 id="prop-tree-anarchy">Prop &amp; Tree Anarchy</h2>
<p>作</p>
<h2 id="prop-line-tool-plt-valpha">Prop Line Tool [PLT] (vAlpha)</h2>
<p>作 摆放prop时可使用类似修路的工具进行线性摆放。</p>
<h2 id="prop-precision">Prop Precision</h2>
<p>变大变小</p>
<h2 id="procedural-objects">Procedural Objects</h2>
<p>变大变小</p>
<h2 id="prop-scaling-0.3-experimental-alpha">Prop Scaling 0.3 [Experimental ALPHA]</h2>
<p>允许贴在表面</p>
<h1 id="影响城展的模组">影响城展的模组</h1>
<h2 id="adaptive-prop-visibility-distance">Adaptive Prop Visibility Distance</h2>
<p>允许调整元素距离多远可见。</p>
<h2 id="dynamic-resolution-fixed-for-1.9">Dynamic Resolution (Fixed for 1.9!)</h2>
<p>动态抗拒齿。</p>
<h2 id="first-person-auto-walking">first person auto walking</h2>
<p>提供第一人称行走功能。</p>
<h2 id="lod-toggler-deprecated">LOD Toggler (deprecated)</h2>
<p>允许手动调整细节程度。封面图是“READY TO MELT YOUR GPU？”。</p>
<h1 id="影响外观的模组">影响外观的模组</h1>
<h2 id="network-skins">network skins</h2>
<p>提供道路皮肤。在道路编辑模式下会在右下角出现小窗口用以选择。</p>
<h2 id="road-options-road-colors-changer-和-painter">Road Options (Road Colors Changer ++) 和 Painter</h2>
<h2 id="relight">Relight</h2>
<p>作显示设置中“色彩矫正覆盖”中提供一些滤镜。</p>
<h2 id="theme-mixer">Theme Mixer</h2>
<p>在该模组的选项中可以修改每种元素使用那个主题的样式，只支持创意工房的主题。</p>
<h2 id="surface-painter">Surface Painter</h2>
<p>在工具栏右侧增加一个“地表工具”图标，允许涂画地表。譬如建筑之间的缝隙原本是草坪，就可以用它涂成水泥，变得更工业风，非常有用。</p>
<h1 id="方便操作的模组">方便操作的模组</h1>
<h2 id="loading-screen-mod">Loading Screen Mod</h2>
<p>加载时显示加载信息。可提供缺失资产的信息，可禁止部分资产的加载。</p>
<h2 id="automatic-bulldoze-v2">Automatic Bulldoze v2</h2>
<p>建筑废弃后自动拆除。</p>
<h2 id="find-it">Find It!</h2>
<p>在工具栏右侧提供一个放大镜图标用于搜索资产。</p>
<h2 id="more-beautification">More Beautification</h2>
<p>为铲子那个图标提供更多分栏。</p>
<h2 id="advanced-toolbar">Advanced Toolbar</h2>
<p>在左下方问号图标旁提供一个加号图标，可将下方道具栏展开后的状态由显示一行提升为三行。</p>
]]></content>
      <categories>
        <category>其它</category>
        <category>丧志</category>
        <category>城市：天际线</category>
      </categories>
      <tags>
        <tag>城市：天际线</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux因显卡驱动无法进入图形界面之处理方法</title>
    <url>/2019/09/30/%E6%88%8F%E6%B3%95/Manjaro-Linux%E5%9B%A0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8B%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190930_bumblebee.jpg" /></p>
<center>
因尝试更换显卡驱动为nVIDIA 430xx导致重启后无法进入图形界面，只是黑屏并在屏幕左上角显示一个光标。
</center>
<a id="more"></a>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Manjaro Linux 18.1.0</li>
<li>video-hybrid-intel-nvidia-430xx-bumblebee VERSION 2019.08.24</li>
</ul>
<h1 id="进入tty界面">1. 进入tty界面</h1>
<p>tty，源于Teletypes，原指电传打字机，对于现在的电脑来讲可以叫终端。可以使用<code>w</code>查看当前使用的终端。在使用GNOME+GDM的manjaro下，共有6个tty。登录界面在tty1运行，登录成功后进入在tty2运行的图形界面（登录界面仍保持在tty1运行）。其余界面为文本界面。现在的问题在于由于显卡驱动问题无法进入tty2，因此只需在文字界面下解决驱动问题即可。</p>
<p>使用<code>ctrl+alt+Fx</code>可以切换到ttyx，现在切换到tty3，输入用户名，回车，密码，回车，即可进入tty3。</p>
<h1 id="修改语言配置">2. 修改语言配置</h1>
<p>tty3-6不能支持中文，而配置的语言是中文的，因此凡是中文会显示为方块。其实在输命令的时候没太大影响，但后面连Wifi的界面全是中文，所以要改成英文。</p>
<p>使用export命令可以修改语言，且仅对当次进入终端有效。</p>
<blockquote>
<p>Linux export 命令用于设置或显示环境变量。</p>
<p>在 shell 中执行程序时，shell 会提供一组环境变量。export 可新增，修改或删除环境变量，供后续执行的程序使用。export 的效力仅限于该次登陆操作。</p>
</blockquote>
<p>通过<code>export -p</code>可以查看当前的环境变量，有关语言的环境变量（也就是locale，也可以直接用<code>locale</code>查看，根据计算机用户所使用的语言、所在国家或地区以及当地的文化传统所定义的一个软件运行时的语言环境。locale的命名规则为<语言>_<地区>.<字符集编码>，如zh_CN.UTF-8，zh代表中文，CN代表大陆地区，UTF-8表示字符集）默认都是“zh_CN.UTF-8”，执行<code>export xxx=xxx</code>可以修改变量的值。</p>
<p>印象中当时是使用<code>export LC_ALL=en_US.UTF-8</code>和<code>export LANG=en_US.UTF-8</code>。这堆LC_xxx有一堆优先级规则，显而易见LC_ALL是老大。它是一个宏，如果该值设置了，则该值会覆盖所有LC_xxx的设置值。注意，LANG的值不受该宏影响。</p>
<p>【其它有关内容】</p>
<ul>
<li><code>locale -a</code>：查看本机可选的配置。可通过诸如<code>sudo locale-gen &quot;zh_CN.gbk&quot;</code>增加。</li>
<li>C和POSIX：默认配置，例如<code>export LC_ALL=C</code>。</li>
</ul>
<h1 id="连接wifi">3. 连接Wifi</h1>
<p>因为需要下载安装原本使用的驱动，所以先连Wifi。</p>
<p>一些Linux中连接Wlan专门有个界面，叫nmtui，即“Network Manager TextUI”，<code>nmtui</code>即可进入。</p>
<p>其中中间的三个选项，第一个是编辑保存的链接，第二个是进行连接。进去第二个等一会，扫描出来之后连上即可。</p>
<h1 id="更换驱动">4. 更换驱动</h1>
<p>manjaro提供了方便的驱动管理工具，叫mhwd，即“Manjaro Hardware Detection”，<code>mhwd</code>即可进入，<code>mhwd-tui</code>可进入TUI。在TUI中很方便地选择“Use nonfree graphics”就好了。更新引导<code>sudo mkinitcpio -P</code>即可。</p>
<h1 id="尾声">5. 尾声</h1>
<p>这个默认的闭源驱动是真的不错。</p>
<p>NVIDIA的Optimus（擎天柱）技术可让笔记本根据性能需要在英特尔集成显卡和NVIDIA独显之间自动切换（其实不是切换而是“是否开启独显”，显示一直都是由集显完成的，只是独立显卡按需渲染并传输给集成显卡显示功能），以达到节约能耗与平衡性能双需求，但此项技术仅仅支持Windows系统。</p>
<p>而默认的“video-hybrid-intel-nvidia-bumblebee”，也就是那个著名的把<code>rm -rf /usr/lib/nvidia-current/xorg/xorg</code>写成<code>rm -rf /usr /lib/nvidia-current/xorg/xorg</code>的软件，可以实现手动的切换。只需在命令前添加<code>optirun</code>即可指定该命令由独显执行。在Steam下，修改游戏属性中的高级启动选项为<code>optirun %command%</code>可指定游戏运行在独立显卡上。原本我的古墓丽影只能以720P全低特效运行，添加这一选项后可以1080P全最高特效丝般顺滑。可惜不知道为啥存档没能继承Windows上的……</p>
<p>不过Bumblebee不兼容Vulkan。可能可以通过“nvidia-xrun”解决，还未尝试。</p>
<p>最开始的时候在steam改高级选项后启动游戏，会闪一下steam的启动界面然后毫无反应。后来解决了，但是忘了怎么弄的了……果然好记性不如双飞燕……可能是一开始没有进行设置：</p>
<blockquote>
<p>In order to use Bumblebee, it is necessary to add your regular user to the bumblebee group:</p>
</blockquote>
<p>需要<code>gpasswd -a &lt;user&gt; bumblebee</code>。</p>
<p>使用<code>bumblebeed --version</code>查看bumblebee版本，<code>optirun nvidia-settings -c :8</code>以设置N卡，<code>optirun glxgears -info</code>进行测试，<code>vblank_mode=0 glxgears</code>查看关闭垂直同步后的帧数。</p>
<h1 id="后记">后记</h1>
<p>安装Manjaro后的第一次更新之后，再次出现了无法使用<code>optirun %command%</code>命令进入游戏的情况。从终端通过<code>optirun steam</code>进入游戏，则将以集显进入；通过<code>primusrun steam</code>进入，则报错“glXChooseVisual failed”。</p>
<p>尝试卸载显卡驱动重装，无效。尝试安装网上的驱动前置的东西<code>sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus</code>，无效。有说法认为报错原因是“libGL.so.1指向mesa和nvidia提供的模糊libGL”，因此删除这些（<code>sudo ldconfig -p | grep -i gl.so</code>中查看）指向mesa的.so即可，但我未找到指向mesa的.so。</p>
<p>最后的处理方案是<code>sudo systemctl disable bumblebeed.service</code>禁用了大黄蜂，安装了另一个管理软件<code>sudo pacman -S optimus-manager</code>并reboot后启用<code>systemctl enable optimus-manager.service</code>。该软件可<code>optimus-manager --switch nvidia</code>切换为N卡。但会注销，还是不如大黄蜂好用……</p>
<p>【第二天的更新】操，不能用，切完之后<code>optimus-manager --status</code>显示还是用的Intel，昨天断电了玩着卡还以为是断电的原因。似乎是因为GDM与之不兼容，还需要装兼容的版本。游戏啥的，戒了算了。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>Manjaro</tag>
        <tag>BumbleBee</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置MySQL并在MyEclipse中使用</title>
    <url>/2019/09/30/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEMySQL%E5%B9%B6%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190930_mysql.png" /></p>
<center>
配合MyEclipse使用MySQL。
</center>
<a id="more"></a>
<h1 id="环境">0. 环境</h1>
<ul>
<li>MyEclipse 2017 ci10</li>
<li>Tomcat 9.0</li>
<li>JDK 8u221</li>
<li>JDBC 8.0.17</li>
</ul>
<h1 id="mysql安装">1. MySQL安装</h1>
<p>只需<code>sudo pacman -S mysql</code>便可以安装MySQL。装好后根据提示<code>sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</code>，注意此步需root权限，并会返回临时的用户名和密码，在输出的那一堆东西里找一下。随后可<code>sudo systemctl enable mysqld</code>开机自启、<code>sudo systemctl start mysqld</code>启动服务、<code>sudo systemctl status mysqld</code>查看状态。</p>
<p>使用刚刚给出的临时密码登录<code>mysql -uroot -p&lt;密码&gt;</code>后会提示可以<code>sudo mysql_secure_installation</code>，如果运行的话会执行以下安全设置：</p>
<ul>
<li>为root用户设置密码</li>
<li>删除匿名账号</li>
<li>取消root用户远程登录</li>
<li>删除test库和对test库的访问权限</li>
<li>刷新授权表使修改生效</li>
</ul>
<p>看心情设置一下。之后通过“添加/删除软件”安装“MySQL WorkBench”即可进行图形化的操作。</p>
<h1 id="jdbc下载">2. JDBC下载</h1>
<p><code>https://dev.mysql.com/downloads/connector/j/</code>下载<code>Platform Independent</code>版本，解压。因为需要与MyEclipse链接，为了方便，丢到家目录下。</p>
<h1 id="与myeclipse链接">3. 与MyEclipse链接</h1>
<p>在MyEclipse中点击<code>窗口-&gt;Perspective-&gt;打开透视图-&gt;Database Explorer</code>，在左侧“DB Broster”中空白处右击new一数据库，弹出“DataBase Driver”界面：</p>
<ul>
<li>Driver template：选择MySQL Connector/J</li>
<li>Driver name：编个名字</li>
<li>Connection URL：改为 jdbc:mysql://localhost:3306/<数据库名></li>
<li>User name ：数据库用户名，默认root</li>
<li>Password：访问密码</li>
<li>Add Jar：JDBC的jar包的路径</li>
<li>Driver classname：系统会自动匹配</li>
</ul>
<p>Test一下成功后点完成即可。此时“DB Broster”中会多出MySQL数据库，双击即可链接上。</p>
<h1 id="测试链接">4. 测试链接</h1>
<p>使用MySQL WorkBench新建一个Schema（注意在Collation下拉列表中选择数据库需要修改为的字符集），并新建一个Table（不知为啥新建table时如果改table名字会导致无法操作其它内容，只能先设置其它内容应用后再回头改名字），用于测试。</p>
<p>在MyEclipse中新建一个Java项目，在其中新建一个lib文件夹，把JDBC的<code>.jar</code>丢进去，在MyEclipse中右击这个包构建一下路径。此时可以在该项目“引用的库”列表中看到这个包。</p>
<p>再在<code>src/</code>新建一包，在其中新建一类。以包名为<code>testDB</code>、类名为<code>Test</code>、前面新建的table名为<code>new_table</code>、table中有<code>name</code>和<code>pw</code>两列为例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testDB;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"></span>&#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String <span class="keyword">package</span> testDB;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"></span>&#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String JDBC_DRIVER = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String DB_URL = <span class="string">"jdbc:mysql://localhost:3306/db0?useSSL=false&amp;serverTimezone=UTC"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"root"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">static</span> <span class="keyword">final</span> String PASS = <span class="string">"235604"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">	</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		Statement stmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">try</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 注册 JDBC 驱动</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			Class.forName(JDBC_DRIVER);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 打开链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"连接数据库..."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn = DriverManager.getConnection(DB_URL,USER,PASS);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 执行查询</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			System.out.println(<span class="string">"实例化Statement对象..."</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			stmt = conn.createStatement();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			String sql;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			sql = <span class="string">"SELECT name,pw FROM new_table"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			ResultSet rs = stmt.executeQuery(sql);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 打印结果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">while</span>(rs.next())</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 通过字段检索</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				String name = rs.getString(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				String pw = rs.getString(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">					</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 输出数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"账户: "</span> + name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"\t"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"密码: "</span> + pw);</span></pre></td></tr><tr><td class="code"><pre><span class="line">				System.out.print(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 完成后关闭</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			rs.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			stmt.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			conn.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">catch</span>(SQLException se)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 处理 JDBC 错误</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			se.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 处理 Class.forName 错误</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			e.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">// 关闭资源</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">if</span>(stmt!=<span class="keyword">null</span>) stmt.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;<span class="keyword">catch</span>(SQLException se2)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">// 什么都不做</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="keyword">try</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="keyword">if</span>(conn!=<span class="keyword">null</span>) conn.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;<span class="keyword">catch</span>(SQLException se)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				se.printStackTrace();</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		System.out.println(<span class="string">"Goodbye!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>【注意】对旧版JDBC，<code>JDBC_DRIVER</code>与<code>DB_URL</code>两项与以上不同。与老版相比，这里使用的新的8.0版本将<code>com.mysql.jdbc.Driver</code>改为<code>com.mysql.cj.jdbc.Driver</code>（需要注意Tomcat也要用JDK8）；另外已不需要建立ssl连接，但需要设置CST时区。</p>
<p>各数据库默认端口号如下：</p>
<table>
<thead>
<tr class="header">
<th>数据库</th>
<th>端口</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Oracle</strong></td>
<td><strong>1521</strong></td>
</tr>
<tr class="even">
<td><strong>SQL Server</strong></td>
<td><strong>1433</strong></td>
</tr>
<tr class="odd">
<td><strong>MySQL</strong></td>
<td><strong>3306</strong></td>
</tr>
<tr class="even">
<td><strong>Derby</strong></td>
<td><strong>1527</strong></td>
</tr>
<tr class="odd">
<td>pointbase</td>
<td>9092</td>
</tr>
<tr class="even">
<td>DB2</td>
<td>5000</td>
</tr>
<tr class="odd">
<td>MongoDB</td>
<td>27017</td>
</tr>
<tr class="even">
<td>Redis</td>
<td>6379</td>
</tr>
<tr class="odd">
<td>memcached</td>
<td>11211</td>
</tr>
</tbody>
</table>
<h1 id="尾声">5. 尾声</h1>
<p>如需在Web开发中使用JDBC，需将<code>.jar</code>放一份到Tomcat的lib目录下，并重启。一定注意跑页面时选择Tomcat，不然连不上数据库。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JSP</category>
      </categories>
      <tags>
        <tag>MyEclipse</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux下配置JSP开发环境</title>
    <url>/2019/09/26/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJSP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190926_myeclipse.png" /></p>
<center>
MyEclipse的安装。
</center>
<a id="more"></a>
<h1 id="环境">0. 环境</h1>
<ul>
<li>Manjaro Linux 18.1.0</li>
<li>JDK 8u221</li>
<li>tomcat 9.0</li>
<li>Myeclipse 2017 ci10</li>
</ul>
<h1 id="安装jdk">1. 安装JDK</h1>
<p>从官网<code>https://www.oracle.com/technetwork/java/javase/downloads/index.html</code>下载JavaSE的tar.gz格式，完成后提取到随便什么地方，例如家目录下。</p>
<p>在<code>~/.bashrc</code>中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;~&#x2F;jdk1.8.0_221bin:$PATH</span></pre></td></tr><tr><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;~&#x2F;jdk1.8.0_221&#x2F;</span></pre></td></tr></table></figure>
<p>此时运行<code>java -version</code>可判断安装情况。</p>
<h1 id="安装myeclipse">2. 安装MyEclipse</h1>
<p>MyEclipse是集成了一些包的Eclipse，与后者不同，这是一个收费软件。</p>
<p>获取Myeclipse的<code>.run</code>文件、破解包和汉化包，进入<code>.run</code>文件目录打开终端，<code>chmod +x myeclipse-2017-ci-10-offline-installer-linux.run</code>增加权限，<code>./myeclipse-2017-ci-10-offline-installer-linux.run</code>运行程序安装。装好后取消勾选launch，不要打开。</p>
<p>打开破解包的<code>patch</code>，使用里面的文件替换掉MyEclipse安装目录下的plugins内的同名文件，再进入破解包另一个文件夹打开终端运行<code>java -jar cracker2017.jar</code>，注意该安装包只能运行在java8下，如果最开始安装的JDK是更新的版本，需要用同样的方法安装java8并修改PATH。进入破解软件界面后输入Usercode（任意字母或者数字），后面的下拉列表选择Blue，点击SystemId两次，点击Active，点击菜单栏-&gt;Tools-&gt;saveProperties。此时启动MyEclipse，在help-&gt;subscription information可见产品已激活。</p>
<p>直接使用汉化包中的文件夹合并MyEclipse安装目录中的同名文件夹并替换其中同名文件即可完成汉化。</p>
<p>在首选项中Maven项下关闭所有有关下载啊更新啊之类的项。</p>
<h1 id="安装tomcat并将之与myeclipse关联">3. 安装tomcat并将之与MyEclipse关联</h1>
<p>此项可忽略，因为MyEclipse自带Tomcat。但也按以下步骤可以安装新的版本，并不冲突。</p>
<p>从官网<code>http://tomcat.apache.org/</code>下载tar.gz包并提取，例如提取到家目录，可在终端执行<code>bin</code>下的<code>startup.sh</code>和<code>shutdown.sh</code>开启和关闭，开启后通过访问<code>http://localhost:8080/</code>可以看到一个页面。</p>
<p>在首选项中服务器项下的运行时环境项下点击&quot;add&quot;的添加按钮，弹出选项，选择与下载的相同的Tomcat版本，&quot;Next&quot;，选择Tomcat的安装目录，并选择安装的Java环境，&quot;Finish&quot;，完成配置。</p>
<p>新建Web Project时注意一下选项中的Target Runtime，如果不是刚才配置的则需要点后面的<code>New Runtime</code>添加。创建项目时记得在最后一个选项卡勾选<code>Generate Web.xml...</code>那一项。运行新建的Web Project，可以看到一个有一行文字的网页。</p>
]]></content>
      <categories>
        <category>表世界</category>
        <category>JSP</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>MyEclipse</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro Linux主力机的安装与及基本环境配置</title>
    <url>/2019/09/23/%E6%88%8F%E6%B3%95/Manjaro-Linux%E4%B8%BB%E5%8A%9B%E6%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8F%8A%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190923_manjaro.png" /></p>
<center>
双显卡笔记本电脑写代码环境的全配置，包括VSCode、Hexo和日常软件。
</center>
<a id="more"></a>
<h1 id="环境">环境</h1>
<p>本文时效性较强，许多配置方式会因软件的更新与迭代而发生变化。</p>
<p>戴尔Inspiron 15-7567笔记本，英特尔i7-7700HQ（集成HD630）+英伟达GTX1050Ti，三星970EVO500G（NVMe）。</p>
<p>使用32G闪迪酷刃U盘引导安装manjaro-GNOME-18.1.0-rc10-stable-x86_64，经测试兼容良好，触控板灵敏，所有功能键均可正常使用（第一次装的时候<code>Fx</code>键直接按是功能键，按<code>Fn</code>键是<code>Fx</code>，第二次装的时候按<code>Fx</code>直接就是<code>Fx</code>，按住<code>Fn</code>才是功能键，奇怪）。</p>
<h1 id="系统安装">系统安装</h1>
<h2 id="制作引导盘">制作引导盘</h2>
<p>在中科大镜像站<code>https://mirrors.ustc.edu.cn/manjaro-cd/</code>下载iso镜像（<code>manjaro|乐于简单</code>那个网站似乎是个人的……），再在<code>http://rufus.ie/</code>下载引导盘制作工具Rufus，分区类型<code>GPT</code>，目标系统类型<code>UEFI(非CSM)</code>，其余默认，点击开始。检测到ISOHybrid镜像后以DD镜像模式写入，否则系统无法识别。</p>
<p>应当使用尽可能新的系统镜像，这是由于Manjaro是滚动更新，新的补丁仅针对新的环境进行测试，老系统直接更新最新的内容的话很容易滚挂——基于同样的理由，装好系统后平时也应当保持最新。</p>
<h2 id="bios设置">BIOS设置</h2>
<p>开机闪DELL图标时狂按F12（不用按Fn），进入BIOS界面，选择<code>BIOS SETUP</code>进入图形界面进行设置，在出厂设置下修改<code>Secure Boot-&gt;Secure Boot Enable</code>为<code>Disabled</code>，否则会有一系列错误：<em>微软要求预装Windows的PC需要开启Secure Boot，此时操作系统启动过程中涉及到的无CA数字签名的软件比如Linux这种开源的无签名的系统就会被直接阻止</em>；修改<code>System Configuration-&gt;SATA Operation</code>为<code>AHCI</code>，否则系统将无法识别到NVMe的硬盘：<em>AHCI（Serial ATA Advanced Host Controller Interface，串行ATA高级主控接口/高级主机控制器接口）是以Intel为首的多家公司联合研发的接口标准，它允许存储驱动程序启用高级串行 ATA 功能，如本机命令队列和热插拔等</em>。</p>
<h2 id="系统安装-1">系统安装</h2>
<p>开机进BIOS界面，选择引导盘启动，进入grub界面，选择语言为中文，将光标移动至BOOT那一项上按E编辑启动设置，或进入那个空白的笔记本一样的选项，将<code>driver=free</code>改为（或直接添加，如果选择进入空白的笔记本一样的选项的话）<code>driver=intel xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</code>，否则会因默认的开源驱动nouveau与N卡冲突而卡死。按<code>ctrl+x</code>或<code>F12</code>即可启动。</p>
<p>启动后正常安装即可。</p>
<p>关于分区设置，选择默认的清空磁盘选项，如果选择自定义，应当在硬盘开始处设置1MiB空闲空间。安装完成后选择重启，在出现DELL图标后长按Esc键直至进入grub界面（网络上各路教程都说是按住Shift键进入，但经测试该机器下无效），按E进入编辑模式，在<code>quite</code>后添加<code>nouveau.modeset=0</code>，理由同上，按<code>ctrl+x</code>或<code>F12</code>即可启动。这一设置只影响当次启动，因此在配置好驱动前的每次启动都应做此设置。</p>
<h1 id="系统配置">系统配置</h1>
<h2 id="配置pacman">配置pacman</h2>
<p>Pacman是Arch Linux的包管理器。提供经过测试的完善支持的程序。应当尽可能使用pacman提供的程序，由社区维护的程序可能会出各种奇怪的问题。</p>
<p><code>sudo pacman-mirrors -i -c China -m rank</code>，随后会弹出一个图形界面，可在其中选择一些源添加。添加并更新<code>sudo pacman -Syy</code>后在国内也可以方便地下载包了。</p>
<p>pacman中的包通过GPG签名，想要安装一个包，则这个包必须通过检查。因此需要先为计算机安装和更新密钥以识别待安装的包：<code>sudo pacman -S archlinux-keyring</code>，<code>sudo pacman-key --refresh-keys</code>。重新加载<code>sudo pacman-key --init</code>、<code>sudo pacman-key --populate</code>并清除缓存<code>sudo pacman -Scc</code>后应当就没问题了。</p>
<p>此时可能出现仍无法进行验证的错误，将<code>/etc/pacman.conf</code>中的<code>SigLevel</code>项都设为<code>Never</code>即可，此选项决定对密钥的检查级别。记得用完改回来。</p>
<p>接下来（可以等省完系统啥的回来再说）配置额外的源：</p>
<p>archlinuxcn是由Arch Linux中国维护的提供具有中国特色的包的仓库。</p>
<p>在<code>/etc/pacman.conf</code>添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span></pre></td></tr><tr><td class="code"><pre><span class="line">SigLevel&#x3D;Optional TrustedOnly</span></pre></td></tr><tr><td class="code"><pre><span class="line">Server&#x3D;服务器地址</span></pre></td></tr></table></figure>
<p>以下地址供参考：</p>
<blockquote>
<p>CDN (ipv4, http, https) Global CDN (no nodes in mainland China)[archlinuxcn] Server= https://cdn.repo.archlinuxcn.org/$arch</p>
<p>浙江大学 (浙江杭州) (ipv4, ipv6, http, https) Added: 2017-06-05[archlinuxcn] Server= https://mirrors.zju.edu.cn/archlinuxcn/$arch</p>
<p>中国科学技术大学 (ipv4, ipv6, http, https)[archlinuxcn] Server= https://mirrors.ustc.edu.cn/archlinuxcn/$arch</p>
<p>清华大学 (ipv4, ipv6, http, https)[archlinuxcn] Server= https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</p>
<p>xTom (Hong Kong) (ipv4, ipv6, http, https) Added: 2017-09-18 xTom Hong Kong Mirror[archlinuxcn] Server= https://mirror.xtom.com.hk/archlinuxcn/$arch</p>
<p>Unique Studio (湖北武汉) (ipv4, http, https) Added: 2017-08-02[archlinuxcn] Server= https://mirrors.hustunique.com/archlinuxcn/$arch</p>
<p>上海科技大学 (上海) (ipv4, http, https) Added: 2016-04-07[archlinuxcn] Server= https://mirrors-wan.geekpie.org/archlinuxcn/$arch</p>
<p>中国科学院开源软件协会 (北京) (ipv4, http) Added: 2017-02-09[archlinuxcn] Server= http://mirrors.opencas.org/archlinuxcn/$arch</p>
<p>电子科技大学凝聚网络安全工作室 (ipv4, http) Added: 2016-05-28[archlinuxcn] Server= http://mirrors.cnssuestc.org/archlinuxcn/$arch</p>
<p>网易 (ipv4, http)[archlinuxcn] Server= http://mirrors.163.com/archlinux-cn/$arch</p>
<p>重庆大学 (ipv4, http)[archlinuxcn] Server= http://mirrors.cqu.edu.cn/archlinuxcn/$arch</p>
</blockquote>
<p>然后全面更新一下，再<code>sudo pacman-mirrors -g</code>更新源列表，更新密钥环<code>sudo pacman -S archlinuxcn-keyring</code>（可能需要多试几次）后即可使用。</p>
<p>不太建议使用其它的社区源。</p>
<p>不需要配置yaourt，它已经停止维护了。</p>
<h2 id="系统更新">系统更新</h2>
<p><code>sudo pacman-mirrors -g</code>更新源列表，这可以使pacman找到最新的仓库，更新系统前最好这么弄一下保证源最新；<code>sudo pacman -Syyu</code>刷新并更新系统（如果报<code>错误：同步所有数据库失败</code>，可<code>sudo pkill pacman</code>）。</p>
<h2 id="n卡驱动的安装">N卡驱动的安装</h2>
<p>在<code>Manjaro Setting Manager-&gt;Hardware Configuration</code>中选择<code>Auto Install Proprietary Driver</code>，等很久很久很久之后即可。</p>
<h1 id="常用应用安装">常用应用安装</h1>
<h2 id="输入法">输入法</h2>
<p>在linux中，输入法是依托于输入法框架的。主要有ibus和fcitx两个框架。不像搜狗输入法只能在fcitx上使用，RIME输入法两者皆可。这里使用fcitx上的RIME，尽管fcitx-rime并非由RIME官方维护。</p>
<p>首先安装fcitx：<code>sudo pacman -S fcitx-im</code>，该命令将安装fcitx所有必要的组件。另外，<code>sudo pacman -S fcitx-configtool</code>，这个包为fcitx的设置提供了图形界面。fcitx自带中文输入法，不过很难用。安装RIME：<code>sudo pacman -S fcitx-rime</code>。</p>
<p>接下来添加配置文件，指定在GTK或QT下使用fcitx输入。在<code>~/</code>下新建<code>.xprofile</code>，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE&#x3D;fcitx</span></pre></td></tr><tr><td class="code"><pre><span class="line">export QT_IM_MODULE&#x3D;fcitx</span></pre></td></tr><tr><td class="code"><pre><span class="line">export XMODIFIERS&#x3D;@im&#x3D;fcitx</span></pre></td></tr></table></figure>
<p>注意：文件为<code>~/.xprofile</code>，如果当前用户为root则类似<code>nano ~/.xprofile</code>的命令会把文件新建在<code>/root/</code>，这是不行的。</p>
<p>接下来重启即可，应当可以看到屏幕右上角出现了一个键盘样图标，点进去选择配置当前输入法，用<code>+</code>添加<code>中州韻</code>，用<code>-</code>删去其它输入法，重新部署之后就可以使用了。</p>
<p>与小狼毫不同，fcitx-rime的皮肤和相关设置由fcitx决定，不过从fcitx中配置也极为方便，不过我配置完后fcitx菜单中的<code>虚拟键盘/方案列表/输入法/皮肤</code>一栏的下拉菜单弹出后会立即收回无法选中，因为不影响使用就没管；另其外自带双拼配置文件（位于程序文件夹<code>/usr/share/rime-data</code>，若没有，从<code>https://github.com/rime/rime-double-pinyin</code>可下载），只需在用户配置文件夹<code>~/.config/fcitx/rime</code>（若为ibus，则为<code>~/.config/ibus/rime</code>）中新建一个<code>default.custom.yaml</code>，添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># default.custom.yaml  </span></pre></td></tr><tr><td class="code"><pre><span class="line"># save it to:   </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   ~&#x2F;.config&#x2F;ibus&#x2F;rime  (linux)  </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   ~&#x2F;Library&#x2F;Rime       (macos)  </span></pre></td></tr><tr><td class="code"><pre><span class="line">#   %APPDATA%\Rime       (windows)  </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">patch:  </span></pre></td></tr><tr><td class="code"><pre><span class="line">  schema_list:  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin          # 朙月拼音  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin_simp     # 朙月拼音 简化字模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: luna_pinyin_tw       # 朙月拼音 臺灣正體模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: terra_pinyin         # 地球拼音 dì qiú pīn yīn  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: bopomofo             # 注音  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: jyutping             # 粵拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: cangjie5             # 倉頡五代  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: cangjie5_express     # 倉頡 快打模式  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: quick5               # 速成  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wubi86               # 五笔 86  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wubi_pinyin          # 五笔拼音混合輸入  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin        # 自然碼雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_mspy   # 微軟雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_abc    # 智能 ABC 雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: double_pinyin_flypy  # 小鶴雙拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wugniu        # 吳語上海話（新派）  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: wugniu_lopha  # 吳語上海話（老派）  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: sampheng      # 中古漢語三拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: zyenpheng     # 中古漢語全拼  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: ipa_xsampa    # X-SAMPA 國際音標  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    - schema: emoji         # emoji 表情</span></pre></td></tr></table></figure>
<p>保存后重新部署即可。</p>
<h2 id="tim">Tim</h2>
<p><code>sudo pacman -S deepin.com.qq.office</code>安装即可。这个过程同时安装了wine。也可以使用wine打开其它<code>.exe</code>。<code>sudo pacman -S winetricks</code>后即可方便地添加一些windows上的库，例如<code>winetricks xna40</code>安装mono等。</p>
<h2 id="百度云">百度云</h2>
<p><code>sudo pacman -S baidunetdisk</code>，需要多试几次才能登录上。</p>
<h2 id="网易云">网易云</h2>
<p>网易云客户端虽然是网易云和深度合作的官方客户端，但除了可以下载外体验上似乎与Web端相比没什么优势……平时不如用Web……</p>
<p>非要下载的话Web也不是不可以，以钢铁洪流为例，地址为<code>https://music.163.com/#/song?id=1394369908</code>，将<code>#/song</code>替换为<code>song/media/outer/url</code>即可右键下载。许多网站提供给一个歌曲id跳转到这一页面的服务，也不算麻烦。</p>
<h1 id="代码环境配置">代码环境配置</h1>
<h2 id="vscode">VSCode</h2>
<p><code>sudo pacman -S visual-studio-code-bin</code>，<code>ctrl++</code>调大界面，选项里把bar移到右边。</p>
<p>在Explorer中打开文件夹，比如在家目录新建<code>Workspaces/VSCode</code>作为工作空间。</p>
<p>扩展中安装中文语言包。</p>
<p>设置里强制显示空格和制表符。</p>
<h3 id="markdown">Markdown</h3>
<p>安装三个插件即可：</p>
<ul>
<li>Markdown All in One</li>
<li>Markdown Preview Github Styling</li>
<li>Markdown TOC</li>
</ul>
<h3 id="c">C++</h3>
<h4 id="测试gcc环境和安装gdb">测试GCC环境和安装GDB</h4>
<p><strong>GCC</strong>即the GNU Compiler Collection，是GNU的一个编译器集合，包含多种编译器及相关工具。其中的gcc是GNU的C编译器(GNU C Compiler)；g++是GNU的C++编译器(GNU C++ Compiler)。也是GNU Compiler Collection的一部分，<code>sudo pacman -S gcc</code>即可。</p>
<p>使用<code>gcc -v</code>确认环境已正确配置。可以<code>nano HelloWorld.cpp</code>尝试写一个HelloWorld，通过<code>g++ HelloWorld.cpp</code>编译。编译完成后会生成一个<code>a.out</code>文档，<code>~/a.out</code>运行它。</p>
<p>除此之外，还需要一个GNU DeBugger即GDB。只需<code>sudo pacman -S gdb</code>即可安装。</p>
<h4 id="在vscode上运行程序">在VSCode上运行程序</h4>
<p>与在Windows上只需安装一个紫色程序即可高喊<strong>M$天下第一</strong>实现一切功能不同，在linux下，开发过程中需要使用一系列独立工具配合完成开发。VSCode只是一个文档编辑器，需要进行设置以告诉它怎么和其它工具（也就是前面说的几个）配合工作。</p>
<p>首先安装“C/C++”插件，这可以使它对<code>.c</code>和<code>.cpp</code>文件执行恰当的操作。除此之外，还有如下有用的插件应当安装：</p>
<ul>
<li>Code Runner：编译运行单个文件必备</li>
<li>Bracket Pair Colorizer：大括号变成彩虹色</li>
<li>RainBow Brackets：小括号变成彩虹色</li>
<li>Include Autocomplete：自动补全头文件</li>
<li>C++ Intellisense：不知道是干啥的，但是VSCode推荐了反正</li>
</ul>
<p>完成之后打开之前的HelloWorld，右键可以运行。但是不能调试，并且头文件那里有可能会标红说找不到。</p>
<p>Code Runner默认使用的是“输出”，这个是只读的，设置中勾上“Run In Terminal”即可在终端中进行<code>cin</code>等操作。</p>
<h4 id="在vscode上调试程序">在VSCode上调试程序</h4>
<p>在调试选项卡中单击“没有配置”下拉菜单，添加配置，选择<code>C++(GDB/LLDB)</code>。此时会在当前工作区下新建一个<code>launch.json</code>文件并让你设置。另外接下来使用中还会有其它两个需要配置的文件生成。这里不等它们自动生成直接自己手动添加，效果似乎是一样的。</p>
<h5 id="c_cpp_properties.json">c_cpp_properties.json</h5>
<p><code>gcc -v -E -x c++ -</code>搜索includePath，将结果填在下面的&quot;includePath&quot;处，注意添加<code>/*</code>和引号，中间用逗号分隔：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"configurations"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"name"</span>: <span class="string">"g++"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"intelliSenseMode"</span>: <span class="string">"gcc-x64"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"includePath"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/local/include/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include-fixed/*"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"/usr/include/*"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"defines"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"browse"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"path"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"$&#123;workspaceFolder&#125;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				],</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"limitSymbolsToIncludedHeaders"</span>: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"databaseFilename"</span>: <span class="string">""</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cStandard"</span>: <span class="string">"c11"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cppStandard"</span>: <span class="string">"c++17"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"compilerPath"</span>: <span class="string">"/usr/bin/gcc"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	],</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="number">4</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>这样就解决了标红的问题。</p>
<h5 id="launch.json">launch.json：</h5>
<p>此文件给出调试时的任务。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="string">"0.2.0"</span>, <span class="comment">//2019</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"configurations"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//配置名称，将会在启动配置的下拉菜单中显示</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"name"</span>: <span class="string">"(gdb) Launch"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//配置类型，这里只能为cppdbg</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//请求配置类型，可以为launch（启动）或attach（附加）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"request"</span>: <span class="string">"launch"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//将要进行调试的程序也就是前面task生成的那哥们的路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"program"</span>: <span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//程序调试时传递给程序的命令行参数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"args"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//设为true时程序将暂停在程序入口处</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//下面俩不理解</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"cwd"</span>: <span class="string">"$&#123;fileDirname&#125;"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"environment"</span>: [],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//调试时是否显示控制台窗口</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"externalConsole"</span>: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//miDebugger的配置，不太懂</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"miDebuggerPath"</span>: <span class="string">"/usr/bin/gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//调试会话开始前执行的任务，要与TASK的名字对应</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"preLaunchTask"</span>: <span class="string">"Build"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//不知道是干啥的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"setupCommands"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			]</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h5 id="tasks.json">tasks.json：</h5>
<p>此文件指定调试前执行的任务。</p>
<p>注意在以下文件中网上文章常用的路径是诸如<code>${workspaceFolder}</code>（比较新）或<code>${workspaceRoot}</code>（比较旧）。这会使编译和调试时在工作目录下生成和调试文件。为了方便在工作目录下使用子文件夹（个人偏好），此处均使用<code>${fileDirname}</code>。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">"tasks"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//任务的名字</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"label"</span>: <span class="string">"Build"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//该任务要执行的命令</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"command"</span>: <span class="string">"g++"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//参数们，执行时每个之间会用空格空开</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"args"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"-g"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"$&#123;file&#125;"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">//编译$&#123;file&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"-o"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="comment">//生成一个位于$&#123;fileDirname&#125;的$&#123;fileBasenameNoExtension&#125;.exe</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			],</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="comment">//下面的看不懂了先不管吧</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="attr">"problemMatcher"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"owner"</span>: <span class="string">"cpp"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"fileLocation"</span>: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"relative"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="string">"$&#123;fileDirname&#125;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				],</span></pre></td></tr><tr><td class="code"><pre><span class="line">				<span class="attr">"pattern"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"regexp"</span>: <span class="string">"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"file"</span>: <span class="number">1</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"line"</span>: <span class="number">2</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"column"</span>: <span class="number">3</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"severity"</span>: <span class="number">4</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">					<span class="attr">"message"</span>: <span class="number">5</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">				&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>至此可以使用VSCode调试C++了。实际调试时如果使用单步调试，遇到<code>cout</code>等时会报<code>/build/gcc/src/gcc-build/x86_64-unknown-linux-gnu/libstdc++-v3/include/bits/ostream.tcc: No such file or directory.</code>。必应了一夜都没找到解决方法，结果谷歌了一下第二条结果就可完美解决：</p>
<blockquote>
<p>This happens because the ostream source file cannot be found.</p>
<p>You can strip the libstdc++ library:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo strip &#x2F;usr&#x2F;lib&#x2F;libstdc++.so.6 </span></pre></td></tr></table></figure>
<p>And then gdb will not try to open the source file and the error will not appear anymore.</p>
<p>You can switch back to the unstripped version by reinstalling it with:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -S gcc-libs </span></pre></td></tr></table></figure>
</blockquote>
<p>注意：此操作会导致所有程序退出，并且操作后需要重启，需要先保存并关闭所有其它内容！</p>
<h4 id="多文件的编译">多文件的编译</h4>
<p>通常会将头文件分为两个文件，分别用来写实现和声明。例如对于如下的文件结构：</p>
<ul>
<li>某文件夹
<ul>
<li>main.cpp</li>
<li>header.hpp</li>
<li>header.cpp</li>
</ul></li>
</ul>
<p>主程序是<code>main.cpp</code>，<code>header.hpp</code>是一个头文件，但里面的类只是做了声明，具体的实现在<code>header.cpp</code>中。这个时候使用上面的配置就不管用了，因为在这个工程中两个<code>.cpp</code>都需要被编译，而上面的配置（无论是code-runner还是调试）只编译了<code>main.cpp</code>。</p>
<p>对于code-runner，打开VSCode的<code>settings.json</code>（不是<code>.vscode</code>下的那个针对Workspace的），添加一项<code>&quot;code-runner.executorMap&quot;:{}</code>，不出意外的话此时会自动填充好默认的各语言的配置文件。将&quot;cpp&quot;一项改为<code>&quot;cd $dir &amp;&amp; g++ *.cpp -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,</code>，也就是把具体的文件替换为了<code>*.cpp</code>即编译所有<code>.cpp</code>即可。</p>
<p>对于调试，将<code>tasks.json</code>中的<code>&quot;${file}&quot;</code>改为<code>&quot;*.cpp&quot;</code>会提示找不到文件，似乎是因为这里只能使用绝对目录，这特么就很尴尬了，尝试了加一个<code>cd</code>任务先进入文件夹再用<code>*.cpp</code>等很多方法研究了一晚上没找到合适的修改方法，暂时想调试这类工程只能手动在<code>tasks.json</code>中添加除主文件外的其它文件的绝对路径。</p>
<h4 id="后记">后记</h4>
<p>在第一次升级系统后执行格式化文档报错。查看C/C++扩展的输出发现报错为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Formatting failed:</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;oiljhihai&#x2F;.vscode&#x2F;extensions&#x2F;ms-vscode.cpptools-0.26.0&#x2F;bin&#x2F;..&#x2F;LLVM&#x2F;bin&#x2F;clang-format -style&#x3D;&#123; BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 &#125; -fallback-style&#x3D;LLVM -sort-includes&#x3D;0 -assume-filename&#x3D;&#x2F;home&#x2F;oiljhihai&#x2F;Workspaces&#x2F;VSCode&#x2F;HDU5396.cpp</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;oiljhihai&#x2F;.vscode&#x2F;extensions&#x2F;ms-vscode.cpptools-0.26.0&#x2F;bin&#x2F;..&#x2F;LLVM&#x2F;bin&#x2F;clang-format: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory</span></pre></td></tr></table></figure>
<p>可以看出是因为没找到<code>libinfo.so.5</code>。查了一下，这个东西是一个叫“ncurses”的包里的东西。<code>pacman -Ss</code>一下，大概是这次升级将ncurses5升级到了6，所以就找不到了。</p>
<p><code>pacman -Ss</code>中有两个跟nurses5有关的，先装了第一个看起来像是32位版的<code>sudo pacman -S lib32-ncurses5-compat-libs</code>，没什么用；又试了第二个<code>sudo pacman -S ncurses5-compat-libs</code>，问题解决。</p>
<h3 id="python">Python</h3>
<h4 id="安装插件">安装插件</h4>
<ul>
<li>Python</li>
<li>Python-autopep8</li>
</ul>
<p>再结合之前已经装好的Code Runner，就可以运行py程序了。</p>
<p>运行过程中VSCode会提示要装其它什么东西，装就行了，可能网不好会失败几次。</p>
<p>右键格式化，提示装些东西，选autopep8比较好用。</p>
<h4 id="安装anaconada">安装Anaconada</h4>
<p>在<code>https://repo.continuum.io/archive/</code>下载<code>.sh</code>文件，在文件目录<code>bash xxxx.sh</code>。安装没问题的话<code>which python</code>可以得到路径。由于路径被配置在了<code>~/.bashrc</code>，需要<code>source ~/.bashrc</code>一下。</p>
<p>注意下载Anaconda3，一开始下成了2之后还有点小麻烦……由于是先装了2，再装了3，3的路径就没添加上，所以卸掉2后按升级的方法重装了3：<code>bash xxxx.sh -u</code>；卸载的方法是删掉安装文件夹并删掉bashrc中自动生成的那一段信息。</p>
<p>在VSCode中打开一个<code>.py</code>，下方显示文件类型的地方点一下，选配置，在json中添加Anaconda的路径和其它设置选项：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"python.pythonPath": "&lt;which python的结果，类似/home/oiljhihai/anaconda3/bin/python，系统自带的py位于/user/bin/python&gt;",</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.autoComplete.extraPaths": [</span></pre></td></tr><tr><td class="code"><pre><span class="line">       <span class="string">"&lt;应该差不多是形如~/anaconda3/lib/python3.7/site-packages，找一下这个文件夹&gt;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   ],</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.linting.flake8Enabled": false,</span></pre></td></tr><tr><td class="code"><pre><span class="line">"python.formatting.provider": "autopep8",</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//禁用自动换行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.formatting.autopep8Args": [</span></pre></td></tr><tr><td class="code"><pre><span class="line">       "--max-line-length=200",</span></pre></td></tr><tr><td class="code"><pre><span class="line">   ],</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.unittestEnabled": true,</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.pytestEnabled": true,</span></pre></td></tr><tr><td class="code"><pre><span class="line">   "python.testing.nosetestsEnabled": false,</span></pre></td></tr></table></figure>
<h4 id="安装opencv">安装OpenCV</h4>
<p>在终端进入Python，运行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pip._internal</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(pip._internal.pep425tags.get_supported())</span></pre></td></tr></table></figure>
<p>可以查看当前py版本所支持的包。在<code>https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv</code>或清华镜像<code>https://pypi.tuna.tsinghua.edu.cn/simple/opencv-python/</code>找到符合条件的包，丢到前面的<code>&quot;python.autoComplete.extraPaths&quot;:</code>填的目录下直接<code>pip install opencv_python-xxxxxx.whl</code>即可。</p>
<p>以下不用看，把opencv版本搞错了。</p>
<p><del><code>conda install --channel https://conda.anaconda.org/menpo opencv3</code>即可安装，但过程中报错“Unsatisfiable Error”。大体意思是版本不对应。可以根据详细的报错信息判断出目前的Python是3.7，而openCV只支持到3.6。解决办法是安装3.6的环境<code>conda create -n python3.6 -c menpo configparser</code>。</del></p>
<p><del>安装完毕后电脑上同时有python3.7和3.6，其中3.7位于前面说的位置，3.6位于<code>~/anaconda3/envs/python3.6/bin/python</code>，bashrc只记录了3.7的路径。于是通过<code>conda activate python3.6</code>进入3.6的环境，再次安装即可。安装完毕后<code>python</code>进入写python代码模式，<code>import cv2</code>不报错就是装好了。</del></p>
<p><del><code>conda deactivate</code>退出python3.6。</del></p>
<p><del>进入VSCode，此时VSCode还在用3.7的路径，所以不能写openCV。用3.6的路径替换一下就OK了。这时运行<code>.py</code>还是先在终端默认的3.7运行，报错后VSCode会自动根据设定的路径<code>conda activate python3.6</code>。</del></p>
<p>通过：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span></pre></td></tr><tr><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'~/Workspaces/VSCode/test/test.jpeg'</span>,cv2.IMREAD_COLOR)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.imshow(<span class="string">'image'</span>,img)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.waitKey(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">cv2.destroyAllWindows()</span></pre></td></tr></table></figure>
<p>测试。然而如果用相对路径会报错“OpenCV Error: Assertion failed (size.width&gt;0 &amp;&amp; size.height&gt;0) in imshow”，没查到为啥（另外网上说中文路径、图片不在工程文件夹内都会报错。这也太WEAK了吧……）。但是这样的话目录啥的变了直接凉凉啊，研究半天，这里可以用路径获取+格式化输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line">path=os.path.dirname(os.path.abspath(__file__))</span></pre></td></tr><tr><td class="code"><pre><span class="line">img0=cv2.imread(<span class="string">r'%s/mipha.jpg'</span>%path)</span></pre></td></tr></table></figure>
<h2 id="hexogithubpages博客配置">Hexo+GithubPages博客配置</h2>
<h3 id="hexo基本环境的配置">Hexo基本环境的配置</h3>
<p>hexo依赖于git和node.js。</p>
<p>manjaro自带git，可<code>git</code>查看详情。</p>
<p>hexo官方建议使用node.js的管理工具nvm安装node.js（nvm是管理node.js的版本的工具，npm是node.js管理它的包的工具）。尝试了官方<code>https://github.com/nvm-sh/nvm</code>给出的<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v.xx.xx.xx/install.sh | bash</code>（xx为当前版本号）命令，访问会被拒绝。经测试可用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; <span class="built_in">cd</span> ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</span></pre></td></tr></table></figure>
<p>命令安装，可以看出这里是把它装到了<sub>/.nvm下。完成后在<code>~/.bash_profile</code></sub>~【更新：<code>~/.bashrc</code>下（否则重启终端后需要<code>source ~/.bash_profile</code>，不然会提示没有<code>npm</code>这个命令。官方教程说<code>~/.bashrc</code>, <code>~/.zshrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>都可以】中添加环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span></pre></td></tr></table></figure>
<p>注意地址与安装地址相匹配。最后一行是淘宝镜像源，根据需求添加，也可在调用<code>npm</code>时<code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install node</code>。保存后<code>source ~/.bash_profile</code>即可使用<code>nvm</code>和<code>node</code>命令。</p>
<p>然后使用NVM安装node.js，只需<code>nvm install node</code>，这样<code>npm</code>也可以使用了。</p>
<p>进行一下设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> user 0</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> unsafe-perm <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></pre></td></tr></table></figure>
<p>不设置前两个的话会报Permission denied，进度条卡在最开始不动，最后一个是镜像源。至此可以使用<code>npm</code>命令下载node包。</p>
<h3 id="hexo的安装与初始化">Hexo的安装与初始化</h3>
<p><code>npm install -g hexo-cli</code>，可使用<code>hexo -v</code>查看安装结果。</p>
<p>从github上下载网页的代码<code>hexo init &lt;folder&gt;</code>后在<code>&lt;folder&gt;/</code>安装所需的依赖<code>npm install</code>，之后<code>hexo -s</code>就可以看到网页了。考虑使用<code>~/blog</code>作为文件夹。</p>
<h3 id="写博客">写博客</h3>
<p>在Hexo目录下<code>hexo new [类型] &lt;&quot;博客名&quot;&gt;</code>，类型缺省时为新建一篇博客<code>post</code>（另两种是新建页面<code>page</code>和新建草稿<code>draft</code>）。这其实就是将模板文件<code>blog/scaffolds/</code>对应类型的内容复制过来并重命名为<code>博客名.md</code>。默认<code>post</code>新建博客类型的模板为以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure>
<p>其中前两项生成时会自动填写，<code>tags</code>一项的填写格式为</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">[标签1,标签2,...]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">或</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">标签1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">标签2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">……</span></span></pre></td></tr></table></figure>
<p>编辑保存后<code>hexo g</code>即可。运行<code>hexo s</code>可查看。</p>
<p>除默认配置外，有必要添加如下内容。</p>
<p><code>categories:</code>，分级目录属性。与<code>tags</code>属性不同，其可以划分父子级关系。例如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">怎么拿长老知识</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span>	</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">游戏</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> <span class="string">遗迹：灰烬重生</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure>
<p><code>&lt;!--more--&gt;</code>，此标签之后的部分将被隐藏，点进去才能看，对NexT很有用。</p>
<p>~~<code>thumbnail:</code>（如果主题支持文章封面），后跟图片链接即可。经测试，使用450*212的图片作为主题“Hueman”的封面可以获得比较好的画质，体积也只有20至30KB。~~之前用的Hueman，现在NexT不支持，不过可以在<code>&lt;!--more--&gt;</code>前放，格式更随意，横向两百多像素效果就不错，接着用212吧，嗯，水的华氏温标沸点……算是个整数？</p>
<p><code>updated: 1569245658000</code>更新日期。</p>
<p>最终效果如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">updated:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="bullet">-</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">![]()</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;center&gt;&lt;/center&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;!--more--&gt;</span></span></pre></td></tr></table></figure>
<p><em><strong>【！注意！】</strong></em> 任何行内式中不要出现两个同方向大括号连用的情况！否则会报Nunjucks Error，要空格分开！</p>
<p>对于一些具有一定私密性的博客，可通过安装插件<code>npm install hexo-blog-encrypt --save</code>后在博客配置文件写入：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure>
<p>后在要加密的文章添加<code>password: xxxxx</code>加密。与直接通过js代码加密不同，这种加密方式更难破解，不会出现看下网页源码就知道密码的情况。</p>
<p>不过还是没啥安全性就是了，毕竟是静态页面。</p>
<h3 id="站点的配置">站点的配置</h3>
<p>在<code>blog/</code>有一<code>_config.yml</code>文件，其保存有站点相关的设置。</p>
<p>开头是Site模块：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标题，会显示在浏览器标签栏上</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">描述</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">keywords:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">作者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">语言（简中：zh-CN；不同主题不同，例如NexT中似乎叫zh-Hans）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">timezone:</span> <span class="string">网站时区，默认使用电脑的无需改动</span></span></pre></td></tr></table></figure>
<p>剩下的似乎不是太用改，例如URL模块似乎是当网站放在子目录下时用的等等。</p>
<p>当此配置文件与主题的配置文件冲突时，此配置文件将覆盖主题的配置文件。</p>
<p>hexo的文章是<code>.md</code>经过swig转换成的html，生成的html中的空格和注释会影响JS的性能，可在<code>blog/</code>安装hexo自带的neat插件<code>npm install hexo-neat --save</code>进行压缩。安装插件后在站点配置文件中添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-neat</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 全局开关</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_html:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩css  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_css:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/*.min.css'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">neat_js:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">mangle:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">output:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">compress:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">exclude:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/*.min.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/jquery.fancybox.pack.js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="bullet">-</span> <span class="string">'**/index.js'</span></span></pre></td></tr></table></figure>
<p><code>exclude</code>项是跳过压缩的文件。</p>
<p><strong>【更新】neat突然会报错了，暂且设为false。</strong></p>
<h3 id="主题的配置">主题的配置</h3>
<p>如果想要换主题，首先找到一个主题，下载可得一个压缩包解压到<code>themes</code>文件夹下即可。注意很多主题同时会有WordPress和Hexo两个版本，不要下错。</p>
<p>曾经长期使用Landscape（2018年）和Hueman（2019年）两个主题。Landscape作为默认主题，简约大气，自己改一下图片啊配色啊啥的相当不错，但支持的功能略少；Hueman算是杂志风格，支持的功能也很多，但总感觉侧边栏和选项卡功能重复，不够简约，而且一些符号显示会出错，默认的代码块也很丑。目前使用最大众化的NexT主题。</p>
<p>该主题仓库位于<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">这里</a>，参照说明安装即可。</p>
<p>使用主题文件夹下多出的文件夹的名字替换掉博客根目录下的<code>_config.yml</code>中<code>theme</code>项的内容后<code>hexo g</code>即可，注意<code>theme:</code>后应当有一个空格。</p>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">这里</a>是一份较早前版本的参考文档，具有一定参考性，但已有部分设置与最新版本有偏差。</p>
<p>主题的<code>_config.yml</code>需要设置的项主要有一下一些：</p>
<p>修改风格项<code>Schemes</code>。</p>
<p>为侧栏增加标签页、分类页和关于页，将<code>menu</code>下对应项的注释取注，并按上述文档生成前两者页面即可。后者通过<code>hexo new page &quot;about&quot;</code>，在其内写入：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">about</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-09</span><span class="number">-23</span> <span class="number">18</span><span class="string">:13:29</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">正文</span></span></pre></td></tr></table></figure>
<p>来实现。</p>
<p>显示当前浏览进度<code>scrollpercent</code>置为true。</p>
<p>启用本地搜索只需<code>npm install hexo-generator-searchdb --save</code>并设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure>
<p>添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure>
<p>设置头像只需简单修改<code>Sidebar Avatar</code>字段。</p>
<p>这个主题还提供了评论功能，有许多可选的服务提供商，不过没什么卵用。国内的要么倒闭了要么需要实名制，国外的又要扶墙……</p>
<p>【更新】发现了一个比较好用的服务商，棒子的“<a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>”。只需正常步骤注册即可获得一段代码<del>，用此代码替换掉主题中的<code>layout/comment/livere.ejs</code>中的内容，再在主题配置文件中禁用<code>comment</code>项下的所有评论工具，在<code>comment</code>项外，比如上面一行添加<code>livere_uid: xxxxxxxx</code>，其中<code>xxxxxxx</code>为获取的代码中提供的UID。再将主题中的<code>layout/common/article.ejs</code>中最后一行<code>&lt;%- partial('comment/index') %&gt;</code>改为<code>&lt;%- partial('comment/livere') %&gt;</code>即可。</del>【更新】划去部分针对Hueman。NexT只需在主题配置文件下找到<code>livere_uid:</code>填上代码中的UID即可。</p>
<p>添加网站访问数统计只需在<code>xx-analysis</code>项添加从分析网站比如百度分析、谷歌分析等等网站获得的哈希值即可。注册帐号后根据提示操作即可获得一段JS代码，哈希值在其中。但这类网站只能站主登录进去查看自己网站的访问情况。若想在网站中显示访问数，可使用<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不算子</a><del>，注意<code>footer</code>文件的位置可能与官方描述有差别。不蒜子自身只提供标签与数字，具体内容由用户编辑。使用官方给出的简易程序对<code>footer</code>做如下修改将统计显示在页脚：</del>【更新】划去部分针对Hueman，Next集成不算子，只需调整<code>busuanzi_count</code>项即可。</p>
<p>如果想要开启RSS订阅，首先需要安装RSS插件<code>npm install hexo-generator-feed --save</code>，并在站点配置文件中添加RSS支持：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># RSS订阅支持</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">atom</span>                <span class="comment">#RSS的类型(atom/rss2)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span>            <span class="comment">#文件路径,默认atom.xml/rss2.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>                 <span class="comment">#展示文章的数量,0或false展示全部</span></span></pre></td></tr></table></figure>
<p>最后将主题配置文件中的<code>rss</code>项改为<code>rss: /atom.xml</code>可开启RSS订阅，可在<code>public/</code>见<code>atom.xml</code>。</p>
<p>字体配置先找到<code>font</code>并启用，这样就可以自定义字体怎么用而不是通过默认的谷歌字库外链加载默认字体。全局设置使用思源黑体，谷歌和奥多比联合开发，品质保证！<code>code</code>要以等宽字体显示所以需要设置为等宽字体，“Fira Code”虽然样子只能说还行，但提供了极好的连字模式，如果只是想表示<span class="math inline">\(\rightarrow\)</span>之类可以直接代码块<code>-&gt;</code>，非常方便。缺点是会给读者造成误解，管它呢，这破博客本身就是写了自嗨的。可选择字库外链，中科大的地址是<code>//fonts.lug.ustc.edu.cn</code>，速度勉强，偶尔会崩。</p>
<h3 id="部署至github">部署至GitHub</h3>
<p>安装hexo的插件：<code>npm install hexo-deployer-git --save</code>。</p>
<p>在github中建立一个以自己名字命名的仓库，建好后将<code>_config.yml</code>中的`deploy项替换为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">repository:</span> <span class="string">建好仓库后给出的地址中git格式那个复制一下粘过来</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span></pre></td></tr></table></figure>
<p>首先配置git用户名<code>git config --global user.name &quot;&lt;用户名&gt;&quot;</code>和邮箱<code>git config --global user.email &quot;&lt;邮箱&gt;&quot;</code>，这会生成一个<code>~/gitconfig</code>文件，想改的话直接改这个文件就行。然后获取SHH密钥<code>ssh-keygen -t rsa -C &quot;&lt;前面的邮箱&gt;&quot;</code>，一路回车即可，之后会生成一个<code>~/.ssh</code>文件夹，其中有一个私钥<code>id_rsa</code>和一个公钥<code>id_rsa.pub</code>，将公钥添加至github。从github网页右上角的下拉菜单里的settings中添加。</p>
<p>如果<code>ssh -T git@github.com</code>后（第一次连接时中间需要yes一下）出现<code>You've successfully authenticated, but GitHub does not provide shell access.</code>说明OK了，使用<code>hexo d</code>即可部署网页。</p>
<h3 id="域名解析">域名解析</h3>
<p>终端<code>ping -4 用户名.github.io</code>可以获得GitHub Pages的服务器地址。</p>
<p>在提供域名解析的网站的控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值为刚才ping得的地址。再设置一条主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>用户名.github.io</code>。这两条分别意味着将购买的域名指向一个IPv4地址和另一个域名。</p>
<p>在<code>blog/source/</code>建立<code>CNAME</code>文件，写入购买的域名。进入GitHub中的博客仓库。在仓库的Setting-&gt;Custom domain添加域名后保存即可。</p>
<h3 id="使用latex语法">使用LaTex语法</h3>
<p>在主题配置文件中开启“mathjax”一项为<code>true</code>即可使用LaTex语法，某些主题可能还需要将“math”开启，可选择是每个页面都开启还是需要手动开启。</p>
<p>注意，与正常使用Markdown不同，Hexo不支持LaTex，mathjax并非对<code>.md</code>渲染，而是渲染Hexo生成的Html。因此要确保Hexo不会误将LaTex标记渲染为Html标签。一种方法是在公式块中使用Markdown语法符号时使用转义，更一劳永逸的方法是更换Hexo的渲染引擎。</p>
<p>默认的渲染引擎“hexo-renderer-marked”可通过<code>npm uninstall hexo-renderer-marked --save</code>卸载，<code>npm install hexo-renderer-pandoc --save</code>，即可更换成另一个表现较好的引擎。与许多人推荐的<code>npm install hexo-renderer-kramed --save</code>相比，该引擎表现更好，无需额外修改一些配置文件。</p>
<p>【更新】发现无法渲染形如<span class="math inline">\(\xRightarrow[aaa]{bbb}\)</span>的格式。暂时用<span class="math inline">\(\Rightarrow_{aaa}^{bbb} \Rightarrow\)</span>这样子代替。</p>
<h3 id="看板娘">看板娘</h3>
<p>可以使用 Live 2D 为博客增添一个 2D 角色。</p>
<p>首先检查<code>package.json</code>里是否已安装<code>&quot;hexo-helper-live2d&quot;</code>，有的话可以先<code>npm uninstall hexo-helper-live2d</code>，官方称“THIS PACKAGE IS DEPRECATED BECAUSE IT WON'T ADD DEPENDENCIES ON YOUR PRODUCTION ENVIRONMENT”。</p>
<p>安装<code>npm install --save hexo-helper-live2d</code>后<code>node_moduels/</code>会生成配置文件夹<code>live2d-widget</code>。</p>
<p><code>https://github.com/xiazeyu/live2d-widget-models.git</code>提供了可用的模型，前缀为<code>live2d-widget-model-haru</code>的模型需要<code>npm install live2d-widget-model-haru</code>支持。</p>
<p>以一只黑猫的模型为例，<code>npm install live2d-widget-model-hijiki</code>后配置博客站点配置文件<code>_config.yml</code>，添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">model:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span>  <span class="comment">#模板目录，在node_modules里</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">display:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#位置只能调上下和靠左靠右 具体多靠左多靠右不能调</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">width:</span> <span class="number">200</span> <span class="comment">#大小</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">height:</span> <span class="number">290</span> <span class="comment">#上下位置</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">mobile:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span></pre></td></tr></table></figure>
<p>即可。这个位置大小是NexT的那个两栏的模式+黑猫我精心调之后觉得最合适的。</p>
<h1 id="尾声">尾声</h1>
<p>完成以上配置后的manjaro已经可以正常使用了。可以从<code>优化</code>中设置GNOME桌面的样式——不过默认外观已经很好看了，但是在<code>拓展</code>中可以启用GNOME的一些有用插件，例如显示在上方工具条中的许多有用工具。</p>
<p>Windows系统中的字体可以直接拿过来安装，非常方便；如果只是在Libre Office下用的话只拷贝到<code>～/.config/libreoffice/4/user/fonts</code>下也可以在Libre Office中用。如果没有fonts目录新建即可。</p>
<p>若报<code>未找到strip分割所需的二进制文件</code>，似乎是由于缺少编译器，<code>sudo pacman -S core/binutils</code>可安装酷睿的binutils工具集，或安装gcc。</p>
]]></content>
      <categories>
        <category>戏法</category>
      </categories>
      <tags>
        <tag>Manjaro</tag>
        <tag>Hexo</tag>
        <tag>VSCode</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
</search>
