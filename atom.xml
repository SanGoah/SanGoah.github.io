<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mech_Mind&#39;s blog</title>
  
  <subtitle>Proletoj el ĉiuj landoj, unuiĝu!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mechanicalmind.cn/"/>
  <updated>2020-06-06T07:06:49.000Z</updated>
  <id>http://mechanicalmind.cn/</id>
  
  <author>
    <name>Mechanical_Mind</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第六章：51单片机串行接口</title>
    <link href="http://mechanicalmind.cn/posts/ac2899d7.html"/>
    <id>http://mechanicalmind.cn/posts/ac2899d7.html</id>
    <published>2020-06-06T07:06:49.000Z</published>
    <updated>2020-06-06T07:06:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第五章：51单片机定时/计数器</title>
    <link href="http://mechanicalmind.cn/posts/a3394965.html"/>
    <id>http://mechanicalmind.cn/posts/a3394965.html</id>
    <published>2020-06-06T07:06:26.000Z</published>
    <updated>2020-06-06T07:06:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第四章：51单片机中断系统</title>
    <link href="http://mechanicalmind.cn/posts/46009304.html"/>
    <id>http://mechanicalmind.cn/posts/46009304.html</id>
    <published>2020-06-06T07:06:02.000Z</published>
    <updated>2020-06-06T07:06:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第三章：51单片机I/O接口</title>
    <link href="http://mechanicalmind.cn/posts/d1e12d51.html"/>
    <id>http://mechanicalmind.cn/posts/d1e12d51.html</id>
    <published>2020-06-06T07:05:39.000Z</published>
    <updated>2020-06-06T07:05:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第二章：51单片机指令系统</title>
    <link href="http://mechanicalmind.cn/posts/8e95d8ee.html"/>
    <id>http://mechanicalmind.cn/posts/8e95d8ee.html</id>
    <published>2020-06-06T07:04:25.000Z</published>
    <updated>2020-06-06T07:04:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>开始之前，先约定如下符号的含义：</p><ul><li>Rn（n=0～7）：当前工作寄存器R0～R7中的一个；</li><li>Ri（i=0|1）：R0和R1寄存器中的一个，用作间接寻址寄存器；</li><li>dir：8位直接地址（片内 RAM 和 SFR）</li><li>#data：8位立即数，即8位常数。可以为2进制（B）、10进制、16进制（H）、字符（''）；</li><li>#data16：表示16位立即数，取值范围为#0000H～#0FFFFH；</li><li>addr16：表示16位地址；</li><li>addr11：表示11位地址；</li><li>rel：相对偏移量（为1字节补码）用于相对转移指令中；</li><li>bit：位地址，在位地址空间中；</li><li>$：表示当前指令的地址；</li><li>(XXH)：用于注释中表示存储单元的内容。</li></ul><p>与在电脑上进行编程不同，51系列单片机指令系统的特点是不同的存储空间寻址方式不同，适用的指令不同，必须进行区分——因此相比电脑上的汇编，51的更加恶心。</p><h1 id="寻址方式">寻址方式</h1><h2 id="立即寻址">立即寻址</h2><p>指令中直接给出操作数的寻址方式称为立即寻址。51单片机中立即数前面要加<code>#</code>，如8位数（#30H）或16位数（#2000H）。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV A   ,#30H  ;A←30H，执行后A&#x3D;30H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#2000H;DPTR←2000H，执行后DPTR&#x3D;2000H</span></pre></td></tr></table></figure><h2 id="直接寻址">直接寻址</h2><p>操作数的地址直接出现在指令中。寻址对象：</p><ul><li>内部数据存贮器：使用它的地址。</li><li>特殊功能寄存器：既可使用它的地址，也可以直接使用寄存器名。</li></ul><p>例如地址41H处存储有数据78H、40H处存储有数据56H：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV A,40H  ; （40H）→A，执行后A&#x3D;56H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV P0,41H ; （41H）→P0，执行后（80H）&#x3D;（41H）&#x3D;78H（寄存器P0的地址为80H）</span></pre></td></tr></table></figure><h2 id="寄存器寻址">寄存器寻址</h2><p>操作数存放在寄存器中，寻址对象：A，B，DPTR，Rn。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV A,R0  ;R0→A，此处A、R0均为寄存器寻址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MUL A,B   ;A*B→B，A、B均为寄存器寻址</span></pre></td></tr></table></figure><h2 id="寄存器间接寻址">寄存器间接寻址</h2><p>操作数存放在以寄存器内容为地址的单元中。在寄存器前加前缀标志<code>@</code>。注意：<strong>只有Ri和DPTR可以作为间址寄存器</strong>（也就是说只有它们前面可以加“@”）。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV  R0,#20H       ;R0存放地址号码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV  @R0,A         ;A→(20H)，执行后地址为20H的RAM&#x3D;A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOV  DPTR,#3000H  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A       ;A→(3000H)，执行后地址为3000H的外部RAM&#x3D;A</span></pre></td></tr></table></figure><h2 id="变址寻址">变址寻址</h2><p>以DPTR或PC的内容加上A的内容之和为地址寻找操作数的寻址方式。它只有两条针对程序存储器的操作指令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+DPTR  ;（A+DPTR） → A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+PC    ;（A+PC） → A</span></pre></td></tr></table></figure><h2 id="相对寻址">相对寻址</h2><p>以PC寄存器加上偏移量形成新的PC值作为转移地址的寻址方式，仅用于相对转移指令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SJMP 08 ;08+PC→PC</span></pre></td></tr></table></figure><h2 id="位寻址">位寻址</h2><p>寻址对象为片内RAM中20H～2FH中的128个位或SFR中的可位寻址的位，形式与直接寻址相同，究竟是位寻址还是直接寻址，由另一个操作数决定。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV C,20H ;位寻址，位地址为20H的内容送CY标志位（C&#x3D;CY）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV A,20H ;直接寻址</span></pre></td></tr></table></figure><h1 id="数据传送指令">数据传送指令</h1><h2 id="mov指令内部ramsfr之间的传送">MOV指令：内部RAM、SFR之间的传送</h2><ul><li>MOV A,Rn/dir/<span class="citation" data-cites="Ri">@Ri</span>/#data（只能传8位的数据）</li><li>MOV dir,A/Rn/dir/<span class="citation" data-cites="Ri">@Ri</span>/#data（dir间是可以直接互传的）</li><li>MOV Rn,A/dir/#data（Rn之间不行）</li><li>MOV <span class="citation" data-cites="Ri">@Ri</span>,A/dir/#data（Rn不行）</li><li>MOV DPTR,#data16</li></ul><h2 id="movx指令外部存储器和累加器a之间的传送">MOVX指令：外部存储器和累加器A之间的传送</h2><ul><li>MOVX <span class="citation" data-cites="Ri">@Ri</span>,A</li><li>MOVX <span class="citation" data-cites="DPTR">@DPTR</span>,A</li><li>MOVX A,<span class="citation" data-cites="Ri">@Ri</span></li><li>MOVX A,<span class="citation" data-cites="DPTR">@DPTR</span></li></ul><p>例如实现(2000H)→(2100H)，使用DPTR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV   DPTR  , #2000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOVX  A     , @DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOV   DPTR  , #2100H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">MOVX  @DPTR , A</span></pre></td></tr></table></figure><p>使用Ri（Ri只能存8位数据）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV  P2，#20H  ;高位地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV  R0，#00   ;低位地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOVX A，@R0    ;读片外RAM</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">MOV  P2，#21H  ;改变高位地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">MOVX @R0，A    ;写片外RAM</span></pre></td></tr></table></figure><h2 id="movc访问程序存储器指令">MOVC：访问程序存储器指令</h2><p>主要用于查表，只能从程序存储器读取数据到A累加器，只能使用变址间接寻址方式。</p><ul><li>MOVC A，<span class="citation" data-cites="A+DPTR">@A+DPTR</span> ;A←(A+DPTR)，范围为64KB程序存储器任意空间；</li><li>MOVC A，<span class="citation" data-cites="A+PC">@A+PC</span> ;A←(A+PC)，范围为该指令后256B范围内。</li></ul><p>例如想查表格中的第二个数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV  A,#01</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV  DPTR,#TAB</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">TAB：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">DB 66H, 77H, 88H,99H</span></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV  A,#02</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+PC ;取完该指令后PC指向RET，RET占一个字节，所以要再往后移两字节是77H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">DB 66H, 77H, 88H,99H</span></pre></td></tr></table></figure><h1 id="堆栈操作指令">堆栈操作指令</h1><p>51单片机的堆栈设在内部RAM，SP为堆栈指针，初始化时SP指向07H，入栈时SP自动加1，出栈时SP自动减1。堆栈操作指令如下：</p><ul><li>入栈指令：PUSH dir ;SP←SP+1，(SP) ←(dir)</li><li>出栈指令：POP dir ;(dir)←(SP)，SP←SP-1</li></ul><h1 id="数据交换指令">数据交换指令</h1><h2 id="字节交换指令">字节交换指令</h2><ul><li>XCH A，Rn</li><li>XCH A，<span class="citation" data-cites="Ri">@Ri</span></li><li>XCH A，dir</li></ul><p>即XCH指令中一个操作数必须是A。</p><h2 id="低半字节交换指令">低半字节交换指令</h2><ul><li>XCHD A，<span class="citation" data-cites="Ri">@Ri</span></li></ul><h2 id="a的高低半字节交换指令">A的高低半字节交换指令</h2><ul><li>SWAP A</li></ul><h1 id="算术运算指令与逻辑运算指令">算术运算指令与逻辑运算指令</h1><h2 id="第一个操作数是a的">第一个操作数是A的</h2><ul><li>加：ADD</li><li>进位加：ADDC</li><li>借位减：SUBB</li><li>与：ANL</li><li>或：ORL</li><li>异或：XRL</li></ul><p>第二个可以是Rn，<span class="citation" data-cites="Ri">@Ri</span>，#data，dir。</p><p>除此之外，逻辑运算指令的第一个操作数还可以是dir，此时第二个操作数可以为A或#data。</p><p>ADDC为两数相加后还需加进位位（CY）；</p><p>SUBB为两数相减后还需减去进位位（CY），由于减指令没有SUB指令，所以在多字节减法程序中，最低位字节作减法时，注意要先清 CY。</p><p>除CY外，加减运算指令影响标志位OV、AC。逻辑运算是按位进行的，因此不影响CY、OV、AC标志位。</p><h2 id="自增自减">自增自减</h2><ul><li>加一：INC，操作数可以是Rn，<span class="citation" data-cites="Ri">@Ri</span>，DPTR，dir，A；</li><li><p>减一：DEC，操作数可以是Rn，<span class="citation" data-cites="Ri">@Ri</span>，dir，A，不能是DPTR。</p><p>4、凡是指令执行结果在A累加器中，运行结果“1”的奇、偶性反映在P标志位（包括前面的传送指令和后面的移位指令）。</p></li></ul><h2 id="十进制调整指令">十进制调整指令</h2><p>单片机中ADD指令完成的是二进制加法，如果要实现十进制相加（即BCD码相加）并得到十进制结果，必须进行十进制调整（即BCD码调整），调整指令：DA A，将A中二进制相加的和调整成十进制数（BCD码）。</p><p>调整方法：若和的低4位大于9或有半进位AC=1，则低4位加6；若和的高4位大于9或有进位CY=1，则高4位加6。</p><p>该指令只对加法ADD指令的和调整，不能对减法结果进行调整。所以应紧跟在加指令之后，在加指令和该指令之间不能有影响标志位的指令。</p><h2 id="专对a的指令">专对A的指令</h2><ul><li>A取反：CPL A</li><li>A清零：CLR A</li><li>循环右移：RR A</li><li>循环左移：RL A</li><li>向右到CY循环移：RLC A</li><li>向左到CY循环移：RRC A</li></ul><h2 id="乘法指令-mul-ab">乘法指令 MUL AB</h2><p>A、B中各放一8位无符号乘数，执行后16位积的高8位在B中，低8位在A中，使CY=0，当乘积大于255，OV置1。</p><p>例如A=50H，B=A0H，指令执行后A=00H，B=32H，CY=0，OV=1。</p><h2 id="除法指令-div-ab">除法指令 DIV AB</h2><p>A中放一8位无符号被除数、B中放一8位无符号除数，商在A中，余数在B中，使CY=0，若除数B=00H，则OV=1，A，B内容不变。</p><p>例如A=28H，B=12H，指令执行后，A=02H，B=04H,CY=0, OV=0。</p><h1 id="控制转移指令">控制转移指令</h1><p>这一类指令的功能是转到新的PC地址执行。</p><h2 id="子程序调用">子程序调用</h2><h3 id="长调用-lcall-addr16">长调用 LCALL addr16</h3><p>可用于保护断点和将子程序的入口地址送PC，转子程序执行，子程序可在64KB地址空间的任一处。</p><p>本指令的机器码为三字节。</p><h3 id="短调用-acall-addr11">短调用 ACALL addr11</h3><p>addr11→PC0～10,而PC11～15保持不变。因此地址范围2KB，如果用来调用子程序，子程序入口距当前PC不得超过2KB地址范围。</p><p>本指令的机器码为二字节。</p><h3 id="子程序返回指令">子程序返回指令</h3><ul><li>RET：从栈顶弹出断点到PC。</li><li>RETI：从中断服务程序返回。</li></ul><h2 id="无条件转移">无条件转移</h2><p>无条件转移到目的地址。</p><h3 id="短转移-ajmp-addr11">短转移 AJMP addr11</h3><p>类似ACALL。</p><h3 id="长转移-ljmp-addr16">长转移 LJMP addr16</h3><p>类似LCALL。</p><h3 id="间接转移常用于多路转移">间接转移（常用于多路转移）</h3><p>JMP <span class="citation" data-cites="A+DPTR">@A+DPTR</span>;A+DPTR→PC</p><h3 id="无条件相对转移">无条件相对转移</h3><p>SJMP rel;PC+rel→PC</p><h2 id="条件转移">条件转移</h2><p>满足条件转移到目的地址。</p><h3 id="累加器为零非零转移">累加器为零（非零）转移</h3><ul><li>JZ rel;A=0则转移（PC+rel→PC）否则程序顺序执行</li><li>JNZ rel;A≠0则转移（PC+rel→PC）否则程序顺序执行</li></ul><h3 id="减1不等于零转移">减1不等于零转移</h3><ul><li>DJNZ Rn,rel</li><li>DJNZ dir,rel</li></ul><p>本指令有自动减1功能。</p><h3 id="比较转移指令">比较转移指令</h3><ul><li>CJNE A , dir , rel</li><li>CJNE A , #data , rel</li><li>CJNE Rn , #data , rel</li><li>CJNE <span class="citation" data-cites="Ri">@Ri</span> , #data , rel</li></ul><p>CJNE指令都是3字节指令，作减操作，不回送结果，影响CY标志。若第一操作数大于或等于第二操作数，则标志CY=0。若第一操作数小于第二操作数，则CY=1——因此这几条指令除实现两操作数相等与否的判断外，利用对CY的判断，还可完成两数大小的比较。</p><h1 id="位操作指令">位操作指令</h1><p>位操作指令的对象只能是C和直接位地址，共17条，位的逻辑运算指令的目的操作数只能是C，而位地址有多种表达方式，以下D4H、PSW.4、RS1和ABC表示相同的位：</p><ul><li>用直接位地址表示，如D4H。</li><li>用“·”操作符号表示，如PSW.4，或D0H.4</li><li>用位名称表示，如RS1。</li><li>用BIT自定义名表示。如ABC BIT D4H，其中ABC定义为D4H位的位名。</li></ul><h2 id="位清零">位清零</h2><ul><li>CLR C</li><li>CLR bit</li></ul><h2 id="位置壹">位置壹</h2><ul><li>SETB C</li><li>SETB bit</li></ul><h2 id="位取反">位取反</h2><ul><li>CPL C</li><li>CPL bit</li></ul><h2 id="位与">位与</h2><ul><li>ANL C，bit ;CY∧（bit）→CY</li><li>ANL C，/bit ;CY∧（/bit）→CY</li></ul><h2 id="位或">位或</h2><ul><li>ORL C，bit ;CY∨（bit）→CY</li><li>ORL C，/bit ;CY∨（/bit）→CY</li></ul><h2 id="位传送">位传送</h2><ul><li>MOV C，bit</li><li>MOV bit,C</li></ul><h2 id="位转移">位转移</h2><p>根据位的值决定转移，均为相对转移指令。</p><ul><li>JC rel;CY=1，则转移（PC+rel→PC），否则程序顺序执行</li><li>JNC rel;CY=0,则转移（PC+rel→PC），否则程序顺序执行</li><li>JB bit，rel;(bit)=1,则转移（PC+rel→PC），否则程序顺序执行</li><li>JNB bit,rel;(bit)=0,则转移（PC+rel→PC），否则程序顺序执行</li><li>JBC bit,rel;(bit)=1,则转移（PC+rel→PC）且该位清零，否则程序顺序执行</li></ul><p>注意，没有位异或，如果要用位操作指令实现X=X0⊕X1，设X为ACC.0，X0为P1.0，X1为P1.1。</p><p>可以利用X0⊕X1=X0(/X1)+(/X0)X1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">X   BIT  ACC.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">X0  BIT   P1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">X1  BIT   P1.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">MOV  C,   X0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">ANL  C,   &#x2F;X1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">MOV  20H, C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">MOV  C,   X1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">ANL  C,   &#x2F;X0 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">ORL  C,   20H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">MOV  X,   C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">SJMP $</span></pre></td></tr></table></figure><p>或根据异或规则——一数与“0”异或值不变；与“1”异或值变反：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ORG   0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">MOV   C  , X0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">JNB   X1 , NCEX    ;X1&#x3D;0，X&#x3D;C&#x3D;X0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">CPL   C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">NCEX:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">MOV   X  , C       ;X1&#x3D;1，X&#x3D;C&#x3D;X0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">SJMP  $</span></pre></td></tr></table></figure><h1 id="空操作指令-nop">空操作指令 NOP</h1><p>机器码为00，该指令经取指、译码后不进行任何操作（空操作）而转到下一条指令，常用于生产一个机器周期的延时，或上机修改程序时作填充指令，以方便增减指令。</p><h1 id="伪指令">伪指令</h1><p>伪指令是为汇编程序（汇编器）提供信息的指令，它没有机器码，不被计算机执行。</p><h2 id="起始指令">起始指令</h2><p>ORG addr16</p><p>定义程序或数据块的起始地址。指示后面的程序或数据块以addr16为起始地址，存放在程序存储器中。</p><h2 id="字节定义">字节定义</h2><p>标号： DB （字节常数，或字符或表达式）</p><p>指示以标号为起始地址的单元里存放的数为字节数据 （8位二进制数）,例如<code>LN：DB  32，’C’，25H，-1</code>。</p><h2 id="字定义">字定义</h2><p>标号：DW （字常数或表达式）</p><p>指示在以标号为起始地址的单元里存放的数为字数据 （16位二进制数），例如<code>GH：DW 1234H,5678H,08</code>。</p><h2 id="保留字节">保留字节</h2><p>标号：DS （数值表达式）</p><p>指示在程序存储器中保留以标号为起始地址的若干字节单元，其单元个数由数值表达式指定，例如<code>L1：DS 32</code>：从L1地址开始保留32个存储单元。</p><h2 id="等值指令">等值指令</h2><p>标号 EQU （数值表达式）</p><p>表示EQU两边的量等值，用于为标号或标识符赋值。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">X1 EQU 2000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">X2 EQU 0FH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">MAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">MOV  DPTR，#X1  ;DPTR&#x3D;2000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">ADD  A   ，#X2  ;A&#x3D;A+0FH</span></pre></td></tr></table></figure><h2 id="位定义">位定义</h2><p>标号 BIT [位地址]</p><p>同EQU指令，不过定义的是位操作地址，前面用到过。</p><h2 id="汇编结束-end">汇编结束 END</h2><p>指示源程序段结束，放在程序的最后。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>第一章：51单片机基础</title>
    <link href="http://mechanicalmind.cn/posts/386c1aa8.html"/>
    <id>http://mechanicalmind.cn/posts/386c1aa8.html</id>
    <published>2020-06-06T07:04:04.000Z</published>
    <updated>2020-06-06T07:04:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>51单片机型号介绍与内部结构。</center><a id="more"></a><h1 id="单片机">单片机</h1><p>单片微型计算机(Single-Chip Microcomputer)，又称微控制器MCU(Micro Controller Unit)，是将计算机的基本部分微型化，使之集成在一块芯片上的微机。片内含有CPU、ROM、RAM、并行I/O、串行I/O、定时器/计数器、中断控制、系统时钟及系统总线等，它本身就是一个嵌入式系统。</p><p>市场占有最高的是8051系列单片机。51单片机最早由Intel公司推出，称为MCS-51。</p><p>51系列单片机有多种型号的产品，<strong>普通型主要有8031、 8051、8751、89C51、89S51</strong>等：</p><ul><li>8031片内没有ROM程序存储器(老产品，已被淘汰)；</li><li>8051内部设有4KB的掩模ROM程序存储器；</li><li>8751是将8051片内的ROM换成EPROM</li><li>89C51则换成4KB的闪速EEPROM；</li><li>89S51结构同89C51(可在线编程)；</li></ul><p>增强型的存储容量为普通型的一倍，名字是XXX52。</p><h1 id="单片机内部结构">51单片机内部结构</h1><ul><li>一个8位的CPU：<ul><li>运算器：可执行算术、逻辑、位运算，状态信息送PSW；</li><li>计数器PC：16位自动加一寄存器，存放指令地址，执行指令时，PC内容的低8位经P0口输出，高8位经P2口输出；</li><li>指令寄存器：从程序存储器读取指令代码至此；</li></ul></li><li>一个片内振荡器及时钟电路：<ul><li>内部震荡方式：在引脚XTAL1和XTAL2外接晶体振荡器，由于单片机内部有一个高增益运算放大器，当外接晶振后，就构成了自激振荡器并产生振荡时钟脉冲；</li><li>外部震荡方式：适宜用于使单片机的时钟与外部信号保持一致，外部信号接XTAL1即可，XTAL2悬空。</li><li>注：单片机的时序单位有：<ul><li>振荡周期：晶振的振荡周期，又称时钟周期，为最小的时序单位；</li><li>机器周期（MC）：1个机器周期由12个振荡周期组成。是计算机执行一种基本操作的时间单位；</li><li>指令周期：执行一条指令所需的时间。一个指令周期由1～4个机器周期组成，依据指令不同而不同。</li></ul></li></ul></li><li>复位电路，初始化单片机，给复位引脚RST加5ms以上高电平时触发（如果系统不能工作，可尝试检查复位信号，若持续高电平则循环复位不执行），分为上电复位和开关复位，主要特殊功能寄存器复位状态归纳如下：<ul><li>PC=0000H：表明程序从0000H地址单元开始执行（所以程序必须从0000H开始存放）。</li><li>A=00H：表明累加器已被清零。</li><li>PSW=00H：表明选寄存器0组为工作寄存器组。</li><li>SP=07H：表明堆栈指针指向片内RAM07H单元，根据堆栈操作的先加后压法则，第一个被压入的数据被写入08H单元中。</li><li>P0～P3=FFH：表明已向各端口线写入１，各端口既可用于输入又可用于输出。</li></ul></li><li>存储器（哈佛结构编址）：<ul><li>统一编址的4KBROM程序存储器和64KB外部程序存储器（0000H-FFFFH，0000H从程序存储器开始还是从外部程序存储器取决于EA的电平，EA接高电平时这个0000H是片内开始算否则片外），其中一些地址有专门作用：<ul><li>0000H：复位操作后的程序入口</li><li>0003H：外部中断0服务程序入口</li><li>000BH：定时器0中断服务程序入口</li><li>0013H：外部中断1服务程序入口</li><li>001BH：定时器1中断服务程序入口</li><li>0023H：串行口中断服务程序入口</li><li>002BH：定时器2中断服务程序入口（增强型）</li></ul></li><li>128BRAM数据存储器（00H-7FH，对于加强型，有256B，后半截使用寄存器间接寻址访问，直接寻址访问的是SFR），<strong>其中一些地址有专门作用</strong>：<ul><li>00H-1FH：共四组通用寄存器R0-R7，其中R0、R1可做间址寄存器，使用时通过PSW的RS1和RS0选择一组使用，默认0组，其它组作为数据存储器使用；</li><li>20H-2FH：可用于位寻址或字节寻址。</li></ul></li><li>64KB外部数据存储器（0000H-FFFFH，与外部I/O口统一编址，使用相同的控制信号、寄存器间址和MOVX指令）。</li></ul></li><li>特殊功能存储器SFR（Special Fuction Register），21个特殊功能寄存器不连续的分布在80H～FFH128个字节地址空间，对于加强型，使用直接寻址访问，间接寻址的话访问的是数据寄存器的后128B；</li><li>32条可编程的I/O线（四个8位并行I/O端口）；</li><li>两个16位定时器/计数器；</li><li>一个可编程全双工串行口；</li><li>五个中断源、两个优先级嵌套中断结构。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
51单片机型号介绍与内部结构。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>实验三：键盘与电子管</title>
    <link href="http://mechanicalmind.cn/posts/5588866d.html"/>
    <id>http://mechanicalmind.cn/posts/5588866d.html</id>
    <published>2020-05-26T17:38:29.000Z</published>
    <updated>2020-05-26T17:38:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>使用8255芯片拓展51单片机。</center><a id="more"></a><h1 id="环境">环境</h1><ul><li>Keil µVision3</li><li>ISIS 7 Pro</li></ul><h1 id="代码唐都单片机文档资料">代码（唐都单片机文档资料）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">; 文件名称: KeyScan.Asm</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">; 功能描述: 8255扩展IO, 完成键盘及数码管显示实验，按下按键, 数码管显示相应键值。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">;8255端口定义</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">A_8255EQU 7F00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">B_8255EQU 7F01H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">C_8255EQU 7F02H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">CON_8255EQU 7F03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">ORG 0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">LJMP MAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">ORG 0100H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">MAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">MOV 50H,#00H;键值缓冲</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">MOV 51H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">MOV 52H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">MOV 53H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">MOV R5, #53H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">MOV  A, #81H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">MOV  DPTR, #CON_8255;8255控制端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR, A;写入控制字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">BEGIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">LCALL DIS;调用显示子程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">LCALL CLEAR;清屏</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">LCALL CCSCAN;调用键扫子程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">JNZ INK1;判是否有键按下</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">LJMP BEGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">INK1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">LCALL DIS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">LCALL DL1MS;消除按键抖动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">LCALL DL1MS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">LCALL CLEAR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">LCALL CCSCAN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">JNZ INK2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">AJMP BEGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">INK2:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">MOV R2,#0FEH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">MOV R4,#00H;从第0列开始扫描</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">COLUM:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#A_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">MOV A,R2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A;写入列扫描值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">MOV DPTR, #C_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">MOVX A,@DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">JB ACC.0,LINE1;判第0行的值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">MOV A,#00H;第0行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">AJMP KCODE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">LINE1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">JB ACC.1,LINE2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">MOV A,#04H;第1行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">AJMP KCODE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">LINE2:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">JB ACC.2,LINE3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">MOV A,#08H;第2行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">AJMP KCODE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">LINE3:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">JB ACC.3,NEXT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">MOV A, #0CH;第3行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">KCODE:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">ADD A,R4;得到键值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">ACALL PUTBUF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">PUSH ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">KON:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">ACALL DIS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">ACALL CLEAR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">ACALL CCSCAN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">JNZ KON</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">POP ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">NEXT:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">INC R4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">MOV A,R2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">JNB ACC.4,KERR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">RL A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">MOV R2,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">AJMP COLUM</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">KERR:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">AJMP BEGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">CCSCAN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#A_8255;按键扫描</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">MOV A,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#C_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">MOVX A,@DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">CPL A;取反</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">ANL A,#0FH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">CLEAR:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">MOV DPTR, #B_8255;清屏（共阴极段码送00H时，全灭）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">MOV A,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">DIS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">PUSH ACC;显示</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">PUSH 00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">PUSH 03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">MOV R0,#50H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">MOV R3,#0F7H;(显示4位时)11110111</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">MOV A,R3 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">AGAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#A_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">MOV A,@R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#DSEGS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#B_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">ACALL DL1MS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">INC R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">MOV A,R3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">JNB ACC.0,OUT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">RR A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">MOV R3,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">AJMP AGAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">OUT:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">POP 03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">POP 00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">POP ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">;数码管段显示值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">DSEGS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">DB 03FH, 06H,05BH,04FH,066H,06DH,07DH, 07H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">DB 07FH,06FH,077H,07CH,039H,05EH,079H,071H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">DL1MS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">MOV R7,#01H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">DL0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">MOV R6,#0FFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">DL1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">DJNZ R6,DL1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line">DJNZ R7,DL0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">PUTBUF:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">PUSH 00H;保存键值到缓冲RAM中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">PUSH ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">MOV A,R5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line">MOV R0,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line">POP ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">MOV @R0,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">DEC R5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">CJNE R5,#04FH,GOBACK</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">MOV R5,#53H;重置缓冲地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">GOBACK:POP 00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h1 id="代码修改为按某键后显示特定内容">代码（修改为按某键后显示特定内容）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">;8255端口定义</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">A_8255EQU 7F00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">B_8255EQU 7F01H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">C_8255EQU 7F02H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">CON_8255EQU 7F03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">ORG 0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">LJMP MAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">ORG 0100H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">MAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">MOV 50H,#00H;键值缓冲清0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">MOV 51H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">MOV 52H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">MOV 53H,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">mov 54h,#00h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">mov 55h,#00h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">MOV R5, #55H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">MOV  A, #81H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">MOV  DPTR, #CON_8255;8255控制端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR, A;写入控制字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">BEGIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">LCALL DIS;调用显示子程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">LCALL CLEAR;清屏</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">LCALL CCSCAN;调用键扫子程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">JNZ INK1;判是否有键按下</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">LJMP BEGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">;键值缓冲</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">INK1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">MOV 50H,#06H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">MOV 51H,#05H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">MOV 52H,#04H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">MOV 53H,#03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">mov 54h,#02h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">mov 55h,#01h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">LCALL DIS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">;LCALL DL1MS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">;LCALL DL1MS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">;LCALL CLEAR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">;LCALL CCSCAN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">;JNZ INK2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">AJMP BEGIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">;按键扫描</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">CCSCAN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#A_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">MOV A,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#C_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">MOVX A,@DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">CPL A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">ANL A,#0FH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">;清屏</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">CLEAR:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">MOV DPTR, #B_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">MOV A,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">;显示</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">DIS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">PUSH ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">PUSH 00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">PUSH 03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">MOV R0,#50H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">MOV R3,#0DFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">MOV A,R3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">AGAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#A_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">MOV A,@R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#DSEGS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">MOVC A,@A+DPTR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">MOV DPTR,#B_8255</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">MOVX @DPTR,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">ACALL DL1MS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">INC R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">MOV A,R3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">JNB ACC.0,OUT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">RR A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">MOV R3,A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">AJMP AGAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">OUT:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">POP 03H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">POP 00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">POP ACC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">;数码管段显示值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">DSEGS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">DB 3FH,06H,5BH,4FH,66H,6DH,7DH,07H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">DB 7FH,6FH,77H,7CH,39H,5EH,79H,71H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">DL1MS:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">MOV R7,#01H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">DL0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">MOV R6,#0FFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">DL1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">DJNZ R6,DL1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">DJNZ R7,DL0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h1 id="步骤">步骤</h1><p>实验电路如图，编程、编译、链接，在ISIS中载入<code>.HEX</code>和<code>.ASM</code>，调试程序，会弹出源程序（如果没弹出再添加一次<code>.ASM</code>），按F12即可：</p><p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/11.png" /></p><p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/12.png" /></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
使用8255芯片拓展51单片机。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>实验二：跑马灯</title>
    <link href="http://mechanicalmind.cn/posts/6c782387.html"/>
    <id>http://mechanicalmind.cn/posts/6c782387.html</id>
    <published>2020-05-26T08:29:18.000Z</published>
    <updated>2020-05-26T08:29:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>主要是熟悉单片机的集成功能模块，包括中断与计数器。</center><a id="more"></a><h1 id="环境">环境</h1><ul><li>Keil µVision3</li><li>ISIS 7 Pro</li></ul><h1 id="中断">中断</h1><h2 id="代码">代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#include &quot;SST89x5x4.h&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ORG 0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">LJMP START</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">ORG 0003H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">LJMP EINT0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">ORG 0013H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">LJMP EINT1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">START:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">MOV P1,#00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">SETB IT0;定义外部中断0为边沿触发</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">SETB EX0;使能外部中断0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">SETB IT1;定义外部中断1为边沿触发</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">SETB EX1;使能外部中断1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">SETB EA;使能总中断</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">SJMP $</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">;外部中断0中断服务程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">EINT0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">MOV R4, #04H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">ELP0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">MOV P1, #0FFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">ACALL DELAY</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">MOV P1, #00H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">ACALL DELAY</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">DJNZ R4, ELP0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">RETI</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">;外部中断1中断服务程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">EINT1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">MOV A, #80H;初始状态为1000 0000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">MOV R7, #28H;执行28H&#x3D;40次</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">ILP1:MOV P1, A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">RR A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">ACALL DELAY</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">DJNZ R7, ILP1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">RETI</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">;延时子程序</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">DELAY:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">MOV R6, #0FFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">DLP1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">MOV R5, #0FFH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">DLP2:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">DJNZ R5, DLP2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">DJNZ R6, DLP1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">RET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h2 id="步骤">步骤</h2><ol type="1"><li><p>实验电路如图，编程、编译、链接，在ISIS中载入<code>.HEX</code>和<code>.ASM</code>； <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/03.png" /></p></li><li><p>在ISIS中调试程序，会弹出源程序（如果没弹出再添加一次<code>.ASM</code>），按F12即可； <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/04.png" /></p></li><li><p>两个开关都能按，可以看到效果，分别是全闪和从左向右跑马： <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/05.png" /> <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/06.png" /> <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/07.png" /></p></li></ol><h1 id="定时计数器">定时/计数器</h1><h2 id="查询方式代码">查询方式代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#include &quot;SST89x5x4.h&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ORG 0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">AJMP START</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">ORG 0100H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">START:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">MOV TMOD, #60H;设置定时器&#x2F;计数器1为计数器方式, 且为方式2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">MOV TH1, #0F6H;装入计数初值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">MOV TL1, #0F6H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">SETB TR1;启动计数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">MLP1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">JNB TF1, MLP1;判溢出标志</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">CPL P1.0;取反P1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">CLR TF1;清溢出标志</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">AJMP MLP1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h2 id="中断方式代码">中断方式代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#include &quot;SST89x5x4.h&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ORG 0000h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">AJMP START</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">ORG 001BH</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">AJMP MLP1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">START:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">MOV TMOD,#60H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">MOV TH1,#0F6H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">MOV TL1,#0F6H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">SETB TR1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">SETB ET1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">SETB EA</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">AJMP $</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">MLP1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">CPL P1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">CLR TF0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">MOV TH1,#0F6H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">MOV TL1,#0F6H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">RETI</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h2 id="步骤-1">步骤</h2><ol type="1"><li><p>实验电路如图，编程、编译、链接，在ISIS中载入<code>.HEX</code>和<code>.ASM</code>； <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/08.png" /></p></li><li><p>在ISIS中调试程序，会弹出源程序（如果没弹出再添加一次<code>.ASM</code>），按F12即可； <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/09.png" /></p></li><li><p>两个开关都能按，可以看到效果，每按10次最右的灯反转一次： <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/10.png" /></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
主要是熟悉单片机的集成功能模块，包括中断与计数器。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>实验一：数据排序</title>
    <link href="http://mechanicalmind.cn/posts/ad5f8869.html"/>
    <id>http://mechanicalmind.cn/posts/ad5f8869.html</id>
    <published>2020-05-25T07:40:20.000Z</published>
    <updated>2020-05-25T07:40:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>在Keil中调试冒泡，主要是熟悉Keil的使用。</center><a id="more"></a><h1 id="环境">环境</h1><ul><li>Keil µVision3</li></ul><h1 id="代码">代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ORG 0000H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">LJMP MAIN</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ORG 0100H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">MAIN:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">MOV R0, #30H;R0&#x3D;数据起始地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">MOV R7, #09H;R7&#x3D;数据个数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">LP1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">MOV A, R7</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">MOV R6, A;R6&#x3D;R7</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">MOV A, R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">MOV R1, A;R1&#x3D;R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">INC R1;++R1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">LP2:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">MOV A, @R0;A&#x3D;(R0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">CLR C;清进位标志</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">SUBB A, @R1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">JC LP3;if(A&lt;&#x3D;(R1)) goto LP3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">MOV A, @R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">XCH A, @R1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">MOV @R0, A;swap((R0),(R1))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">LP3:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">INC R1;++R1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">DJNZ R6, LP2;if(--R6) goto LP2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">INC R0;++R0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">DJNZ R7, LP1;if(--R7) goto LP1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">SJMP $</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">END</span></pre></td></tr></table></figure><h1 id="步骤">步骤</h1><ol type="1"><li>编程，编译，链接，调试；</li><li><p>为30H～39H赋初值：在命令行中键入<code>E CHAR D:30H＝10个数逗号隔开</code>后回车； <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/01.png" /></p></li><li><p>将光标移到语句行SJMP $处，点击命令，将程序运行到该行，可在右下（如果没有就在视图还是哪里调出来）观察排序结果。 <img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/%E5%8D%95%E7%89%87%E6%9C%BA/02.png" /></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
在Keil中调试冒泡，主要是熟悉Keil的使用。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>51单片机开发环境配置</title>
    <link href="http://mechanicalmind.cn/posts/d5919c41.html"/>
    <id>http://mechanicalmind.cn/posts/d5919c41.html</id>
    <published>2020-05-06T08:03:28.000Z</published>
    <updated>2020-05-06T08:03:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>Keil µVision3/4 + Proteus ISIS.</center><a id="more"></a><h1 id="环境">环境</h1><p>一开始打算通过安装native Linux的软件来配置开发环境，例如SDCC等，但最后发现还是通过wine安装windows的软件最方便。环境如下：</p><ul><li>wine 5.7-1</li><li>winetricks 20200412-1</li></ul><p>开发环境主要有两个部分，一是Keil µVision，为ARM旗下的KEIL公司开发的一个IDE；二是Proteus，为Lab Center Electronics公司推出的电子设计自动化（EDA）软件，主要用到其ISIS组件的仿真功能。</p><h1 id="keil">Keil</h1><p>本来是打算安装官方的面向学习者的Lite版本，但是官网的下载页面打不开……</p><p>Keil的安装包有“MDK”后缀和“C51”后缀两种，分别对应ARM的芯片和8051的芯片。一开始搞错了，使用了<code>MDK412</code>的版本。</p><p>首先正常安装安装包（wine挺慢的，要等很久才能打开），然后正常打开，进入<code>File</code>-&gt;<code>License Management</code>，复制CID，打开注册码生成机，输入CID，选ARM，生成注册码再输回去即可。</p><p>之后才发现这个版本的uVision貌似不带51单片机相关的开发套件，于是又找到了<code>c51v802</code>版本来安装，两次安装到一个文件夹，完成后发现生成了新的<code>c51v802</code>的快捷方式，但再次打开原先<code>MDK412</code>的快捷方式，发现已经可以建立51单片机相关的工程了，但在<code>MDK412</code>中调试会提示不兼容，如果有P1等寄存器连编译都通不过。</p><p>关于Keil的使用，先新建一个页面，写入代码，保存（汇编就<code>.asm</code>后缀、c51就<code>.c</code>后缀），在项目上右键添加到项目，就可以编译了。</p><p>编译的时候要注意设置，一是在<code>Device</code>选项卡中把两个框都勾上，否则报错“FATAL ERROR L210”；二是在<code>Output</code>选项卡中勾上“Create HEX File”。</p><h1 id="proteus">Proteus</h1><p>笔者所使用的安装包来自<a href="http://www.pc6.com/softview/SoftView_55565.html" target="_blank" rel="noopener">这里</a>，按说明安装即可（但是汉化完后少部分字符会乱码，似乎是wine的问题，注意备份原文件）。</p><p>安装完成后可以导入<code>.DSN</code>工程文件，导入工程文件后可在其单片机上双击调出属性窗口，导入<code>.HEX</code>文件；工程文件可能指定了<code>.ASM</code>文件的路径，需要在<code>源代码</code>-&gt;<code>添加/删除源文件</code>处删除之。</p><p>开始调试后在<code>调试</code>菜单最下面几行可以打开看内存的值。</p><h1 id="小结">小结</h1><p>至此，51单片机开发环境配置完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
Keil µVision3/4 + Proteus ISIS.
&lt;/center&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://mechanicalmind.cn/categories/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>弱小的人，才习惯嘲讽和否定</title>
    <link href="http://mechanicalmind.cn/posts/18d24c8.html"/>
    <id>http://mechanicalmind.cn/posts/18d24c8.html</id>
    <published>2020-05-06T08:02:38.000Z</published>
    <updated>2020-05-06T08:02:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>最近两天都在思考这句话，再抬头看，发现整个世界都不一样了。</center><a id="more"></a><blockquote><p>在自然语言和形式语言中，如果一句句子直接或间接提及自身，就称为自指（Self-reference）。</p></blockquote><p>生活中经常见到自指，比如“我随手一打就是这么标准的十五字”。这个自指很安全，但是许多情况下自指是危险的，比如“弱小的人，才习惯嘲讽和否定”，如果说话的人认为这句话是对的，那么他将不得不（当然，这里忽略了“习惯”二字）承认自己是弱小的。</p><p>一个更熟悉的例子，“停机问题”：能否写出这样一个判断程序，输入一个程序及其传入参数时，这个判断程序能够判断此时输入程序是否陷入死循环？</p><p>不难证明，答案是否定的：假如写出了这样一个程序<code>bool isLoop(func input_func, para input_para)</code>，当输入程序<code>input_func()</code>在接受<code>input_para</code>后将陷入死循环时返回<code>1</code>，否则返回<code>0</code>——现在不妨将其改写一个很hack的程序<code>void hack(func input)</code>，在其中调用一次<code>isLoop()</code>，其中的两个参数均为<code>input</code>，当<code>isLoop()</code>返回<code>true</code>即<code>input()</code>在传入<code>input()</code>时会陷入死循环时，<code>hack()</code>返回，否则进入一段类似<code>while(true)</code>的代码。</p><p>现调用一次<code>isLoop(hack,hack)</code>：</p><ul><li>若返回<code>true</code>，则<code>hack()</code>在输入<code>hack()</code>时将陷入死循环，则<code>hack(hack)</code>中调用的<code>isLoop(hack,hack)</code>返回了<code>false</code>，矛盾；</li><li>若返回<code>false</code>，则<code>hack()</code>在输入<code>hack()</code>时不会陷入死循环，则<code>hack(hack)</code>中调用的<code>isLoop(hack,hack)</code>返回了<code>true</code>，矛盾。</li></ul><p>故写不出这样的程序。</p><p>这个例子比让B站和背后站台的一票大媒体承认自己是弱小的危险一点，但还好。现在用类似的方法构造一个更危险的命题，也就是著名的罗素悖论：</p><p>假设有一个集合，该集合为全体非本身子集构成的集合。现给定该集合的一个子集，问后者是否属于前者？</p><ul><li>后者是前者的子集，则后者不应当属于前者；</li><li>假如后者不属于前者，则后者不是前者的子集。</li></ul><p>故这样的集合不存在——但它应当是存在的。给定一个性质，符合该性质的元素归入一个集合，这不是理所应当的么？集合的定义就是这样的啊！</p><p>对于这个悖论的处理，数学大佬们是修改了集合的定义，比如罗素本人的类型论和现在主流的公理化集合论，在笔者看来都是用很hack的手法排除了这些涉及自我指涉的情况，笔者作为一个数学的门外汉觉得……emmm，好像这种不算解决吧？类似假装看不见的行为……</p><p>很容易从这上面联想到哥德尔不完备定理。虽然笔者并未研究过其推导等，但对结论的了解应该偏差不大，即不能从一个足够复杂的形式化系统中推导出它应当包含的所有命题，笔者不清楚“自指”一类的问题相关的结论是否属于这一类，但显然“集合论”这一系统无力处理这一情况。</p><p>在今天之前，笔者一直坚信没有什么是数学无法处理的，只要数学家能搞明白，程序员就能给它整得服服贴贴。当初转专业时曾看过许多知乎上的经验贴，印像最深的是一位国际关系的学长转数学系，立志要写出一本《社会科学的数学原理》。现在想来，恐怕他的志向比想象中还要难得多吧，现在的数学工具对于如此复杂的系统真的能进行足够好的描述么？最著名的无解的就是三体问题了吧，这还只是三个球而已。</p><p>——提到三体，突然想到有些科幻小说中有所谓“数学武器”的设定，可以修改区域内的数学规律使敌人的武器等失去理论基础而失效。看似荒谬至极的设定现在看来也有那么点道理——数学规律真的是宇宙内秉的么？还是只是人类发明的？</p><p>当然，哥德尔可没说“人类是有极限的”，只是说一个形式化的系统是有极限的，而人类可以构建很多不同的形式化系统，在一个形式化系统中不可证明的命题在另一个形式化系统中便可能可以证明，所以笔者的信仰并没有完全破碎，哈哈。哥德尔只是说不能仅仅根据公理通过推导得出所有结论——回到题目的这句话，不论这句话本身意义如何，试图用一句话讲明白某个道理（因为“弱小……”这句话冲突性不够强，再举个例子：没有什么是绝对的。这只是“自指”这一种难以处理的情况，谁知道有多少其它情况？）本身就是错误的思想——如此错综复杂的世界，显然超出了一句话加上简单推理所能判断的能力范围。</p><p>我们不能只用有限的、形式化的方式给这世界下判断，无论是数学的、程序的还是自然语言的——想到这里再抬头看这世界，顿感广袤无垠。</p><p>上一段用一句话下了个判断，矛盾，所以上一句话是伪命题，散了吧。</p><p>我知道为啥哲学家自杀的多了。</p><p>其实就是学得少，想得多。不想了，还是开心最重要～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
最近两天都在思考这句话，再抬头看，发现整个世界都不一样了。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="地球Online加载Tips" scheme="http://mechanicalmind.cn/categories/%E5%9C%B0%E7%90%83Online%E5%8A%A0%E8%BD%BDTips/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux网络编程</title>
    <link href="http://mechanicalmind.cn/posts/49618a82.html"/>
    <id>http://mechanicalmind.cn/posts/49618a82.html</id>
    <published>2020-05-04T08:40:10.000Z</published>
    <updated>2020-05-04T08:40:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>Socket的TCP和UDP通信相关函数的使用。</center><a id="more"></a><h1 id="socket">Socket</h1><blockquote><p>socket 是计算机网络中用于在节点内发送或接收数据的内部端点。具体来说，它是网络软件（协议栈）中这个端点的一种表示，包含通信协议、目标地址、状态等，是系统资源的一种形式。</p></blockquote><p>即socket将除应用层之外的四个网络层次封装，应用层的程序员只需调用其提供的方法即可实现网络通信；socket的原意是插座，一边连接供电网络，用电器的工程师只需在设计电器时设计好插头就行了，一个道理。一个插座有三个主要属性：在谁家里、在哪个房间以及能插什么电器（USB充电口还是三个脚的插口还是两个脚的插口，是国标220V还是多少），同样Socket的属性也是一个三元组：<code>(IP,protocol,port)</code>，使用以下数据结构表示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//此数据结构用做bind、connect、recvfrom、sendto等函数的参数，指明地址信息。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr</span> &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> sa_family; <span class="comment">//协议域</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> sa_data[<span class="number">14</span>]; <span class="comment">//协议地址（14字节形式）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//上述结构使用较少，实际常用如下等价形式：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> <span class="keyword">int</span> sin_family;<span class="comment">//协议域</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> sin_port;<span class="comment">//端口号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">sin_addr</span>;</span><span class="comment">//地址，见下</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> sin_zero[<span class="number">8</span>];<span class="comment">//留空以使该结构的大小与sockaddr统一</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//此数据结构表示一个32位的IPv4地址。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">in_addr_t</span> s_addr<span class="comment">//ipv4地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>另外在传输数据时，不同机器内部对变量的字节存储顺序不同，因此要对数据进行转换统一一下：</p><ul><li><code>htons()</code>：“Host to Network Short”，主机字节顺序转换为网络字节顺序（对无符号短型进行操作2bytes）；</li><li><code>htonl()</code>：“Host to Network Long ”，主机字节顺序转换为网络字节顺序（对无符号长型进行操作4bytes）；</li><li><code>ntohs()</code>：“Network to Host Short”，网络字节顺序转换为主机字节顺序（对无符号短型进行操作2bytes）；</li><li><code>ntohl()</code>：“Network to Host Long ”，网络字节顺序转换为主机字节顺序（对无符号长型进行操作4bytes）；</li></ul><p>具体的协议有关的内容是计网的内容，王道的计网小姐姐声音真好听……</p><p>以一个聊天室程序演示之。</p><h1 id="tcp编程示例">TCP编程示例</h1><h2 id="服务器">服务器</h2><ol type="1"><li>创建一个socket：<code>int socket(int domain, int type, int protocol)</code>，传入协议域、socket类型和协议，该函数返回一个socket标识符（可能需要设置其属性：<code>setsockopt()</code>）；</li><li>设置自己的IP地址、端口等信息并绑定：<code>int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen)</code>，传入一个socket标识符、要绑定的地址（根据socket的协议域不同而不同）和这个地址的长度，将该socket与一个地址绑定。服务器需要这么绑定一下，客户端的话让系统自动分配就行了；</li><li>开启监听：<code>int listen(int sockfd, int backlog)</code>，第二个参数是可以排队的最大数量；</li><li>接收客户端的连接请求：<code>int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen)</code>，传入服务器本身的socket、协议地址及其长度（因为要返回给客户端这些信息），返回一个与接入的客户端的链接的socket；</li><li>收发数据：<code>ssize_t send(int sockfd, const void *buf, size_t len, int flags)</code>和<code>ssize_t recv(int sockfd, void *buf, size_t len, int flags)</code>（或一些其它函数）；</li><li>关闭socket：<code>int close(int fd)</code>。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT 1234</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BACKLOG 1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 1024</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> buf[MAXSIZE];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; client_list;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ret_recv, listenfd, fd;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server</span>, <span class="title">client</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">pthread_service</span><span class="params">(<span class="keyword">void</span> *sfd)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> fd = *(<span class="keyword">int</span> *)sfd;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        bzero(buf, MAXSIZE);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        ret_recv = recv(fd, buf, MAXSIZE, <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (ret_recv &lt;= <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            client_list.erase(fd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"client "</span> &lt;&lt; fd &lt;&lt; <span class="string">" quited."</span> &lt;&lt; <span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it = client_list.begin(); it != client_list.end(); ++it)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span> (*it != fd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">                    send(*it, buf, ret_recv, <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"from "</span> &lt;&lt; fd &lt;&lt; <span class="string">" to "</span> &lt;&lt; *it &lt;&lt; <span class="string">" forwarded."</span> &lt;&lt; <span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    close(fd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> (<span class="keyword">void</span> *)<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"starting server..."</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> ((listenfd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        perror(<span class="string">"socket creating failed."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    server.sin_family = AF_INET;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    server.sin_port = htons(PORT);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    server.sin_addr.s_addr = htonl(INADDR_ANY);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (bind(listenfd, (struct sockaddr *)&amp;server, <span class="keyword">sizeof</span>(struct sockaddr)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        perror(<span class="string">"Bind error."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (listen(listenfd, BACKLOG) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        perror(<span class="string">"listen() error\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"success!"</span>&lt;&lt;<span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//一开始accept()第三个参数写的是(socklen_t*)sizeof(struct sockaddr_in)，跟正确写法不等价！</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">socklen_t</span> size = <span class="keyword">sizeof</span>(struct sockaddr_in);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> ((fd = accept(listenfd, (struct sockaddr *)&amp;client, &amp;size)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            perror(<span class="string">"accept() error\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        client_list.insert(fd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">pthread_t</span> tid;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        pthread_create(&amp;tid, <span class="literal">NULL</span>, pthread_service, &amp;fd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">    close(listenfd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="客户端">客户端</h2><ol type="1"><li><code>socket()</code>（可选<code>setsockopt()</code>、<code>bind()</code>，参见服务器）；</li><li>设置要连接的对方的IP地址和端口等属性并连结：<code>int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen)</code>，类似<code>accept()</code>地，传入的是客户端自己的标识符，返回一个连接的标识符；</li><li>收发数据：<code>send()</code>和<code>recv()</code>;</li><li>关闭：<code>close()</code>；</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT 1234</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1024</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOST <span class="meta-string">"127.0.0.1"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> sendbuf[<span class="number">1024</span>], recvbuf[<span class="number">1024</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server</span>;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> msg, usrname;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> fd;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">pthread_recv</span><span class="params">(<span class="keyword">void</span> *ptr)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> ((recv(fd, recvbuf, MAXN, <span class="number">0</span>)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            perror(<span class="string">"recv() error\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, recvbuf);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">memset</span>(recvbuf, <span class="number">0</span>, <span class="keyword">sizeof</span>(recvbuf));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"no username inputed."</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    usrname = argv[<span class="number">1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"link start..."</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> ((fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        perror(<span class="string">"socket() error\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    server.sin_family = AF_INET;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    server.sin_port = htons(PORT);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    server.sin_addr = *((struct in_addr *)gethostbyname(HOST)-&gt;h_addr);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (connect(fd, (struct sockaddr *)&amp;server, <span class="keyword">sizeof</span>(struct sockaddr)) == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        perror(<span class="string">"connect() error\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"success!"</span> &lt;&lt; <span class="built_in">endl</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    msg = usrname + <span class="string">" has entered.\n"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    send(fd, msg.c_str(), msg.length(), <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">pthread_t</span> tid;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    pthread_create(&amp;tid, <span class="literal">NULL</span>, pthread_recv, <span class="literal">NULL</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">memset</span>(sendbuf, <span class="number">0</span>, <span class="keyword">sizeof</span>(sendbuf));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        fgets(sendbuf, <span class="keyword">sizeof</span>(sendbuf), <span class="built_in">stdin</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">///用cin好像会导致不能输出东西……</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        msg = sendbuf;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (msg == <span class="string">"q\n"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"quited.\n"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">            msg = usrname + <span class="string">" has quited.\n"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            send(fd, msg.c_str(), msg.length(), <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            close(fd);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">            msg = usrname + <span class="string">" : "</span> + msg;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">            send(fd, msg.c_str(), msg.length(), <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="udp编程示例">UDP编程示例</h1><h2 id="服务器-1">服务器</h2><ol type="1"><li>创建一个socket：<code>socket()</code>，可选<code>setsockopt()</code>；</li><li>设置与绑定IP地址、端口等信息：<code>bind()</code>；</li><li>循环接收数据：<code>recvfrom()</code>；</li><li>关闭网络连接；</li></ol><h2 id="客户端-1">客户端</h2><ol type="1"><li><code>socket()</code>（可选<code>setsockopt()</code>、<code>bind()</code>，参见服务器）；</li><li>设置对方的IP地址和端口等属性;</li><li>发送数据：<code>sendto()</code>;</li><li>关闭网络连接；</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
Socket的TCP和UDP通信相关函数的使用。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://mechanicalmind.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux多线程</title>
    <link href="http://mechanicalmind.cn/posts/293980e9.html"/>
    <id>http://mechanicalmind.cn/posts/293980e9.html</id>
    <published>2020-05-04T08:40:00.000Z</published>
    <updated>2020-05-04T08:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux进程间通信</title>
    <link href="http://mechanicalmind.cn/posts/e0738fea.html"/>
    <id>http://mechanicalmind.cn/posts/e0738fea.html</id>
    <published>2020-05-04T08:39:41.000Z</published>
    <updated>2020-05-04T08:39:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title> 蓝桥杯2020模拟赛</title>
    <link href="http://mechanicalmind.cn/posts/33d846cd.html"/>
    <id>http://mechanicalmind.cn/posts/33d846cd.html</id>
    <published>2020-03-16T09:24:55.000Z</published>
    <updated>2020-03-16T09:24:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>2020年蓝桥杯因为疫情延期，搞了个线上模拟赛。讲真，完全没有也不想准备这比赛了，要是干脆取消这一届退钱就好了……</center><a id="more"></a><h1 id="单位换算">单位换算</h1><p>侮辱智商，拒绝作答。</p><h1 id="约数统计">约数统计</h1><p>暴力。</p><h1 id="在1至2019中有多少个数的数位中包含数字9">在1至2019中，有多少个数的数位中包含数字9？</h1><p>因为是各自在家比赛，其实是可以百度的。想找找stl里有没有啥逃课的方法，果然找到了个<code>find()</code>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2019</span>;++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">string</span> cur=to_string(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(cur.find(<span class="string">'9'</span>)!= cur.npos)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            ++cnt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>注意如果找不到返回的是<code>string.npos</code>而不是0或-1之类。</p><h1 id="树的结点数">树的结点数</h1><p>总觉得这题做过好多好多次了……</p><h1 id="寻找数位递增的数">寻找数位递增的数</h1><p>写的转string暴力一位一位比。不过事后一想可能会超时？最多的样例会有百万次判断，按每次判断进行4次比较算一秒钟应该也OK……</p><p>看到有大佬用DP：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, a[<span class="number">11</span>], dp[<span class="number">11</span>][<span class="number">10</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> pre, <span class="keyword">bool</span> limit)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (pos == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (!limit &amp;&amp; dp[pos][pre] != <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> dp[pos][pre];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> up = limit ? a[pos] : <span class="number">9</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pre; i &lt;= up; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        ans += dfs(pos - <span class="number">1</span>, i, limit &amp;&amp; i == a[pos]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (!limit)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        dp[pos][pre] = ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="keyword">sizeof</span>(dp));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//注意数组和原数相反了，现在是找递减。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (n)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        a[k++] = n % <span class="number">10</span>,n /= <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(k - <span class="number">1</span>, <span class="number">0</span>, <span class="literal">true</span>) - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="寻找hello这样的单词">寻找hello这样的单词</h1><p>字符串判断的题。</p><h1 id="寻找递增三元组的中心">寻找递增三元组的中心</h1><p>上来先写了判断是否存在递增三元组的代码，每找到一个就记录这个三元组的中心，看最后有多少个中心：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,num[N],min1,min2,idx_min2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    min1=min2=INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (num[i]&lt;=min1) min1 = num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num[i] &lt; min2) min2 = num[i],idx_min2=i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num[i] &gt; min2) s.insert(idx_min2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.size();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>写完发现不对，这个算法是判断是否存在三元组的，不是找到所有三元组，对于有许多递增三元组的数列它找不全，例如数列<code>1 2 5 3 5</code>，它只会给出<code>1 2 5</code>、<code>1 2 3</code>和<code>1 2 5</code>，<code>1 3 5</code>不会给出，所以对这个样例来说会少掉“3”这一中心。</p><p>最后用的笨方法，对每个数判断之前、之后的最小、最大值，不过使用两个数组保存某位置之前的最小值、之后的最大值，只需一遍遍历，其实很快。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, num[N], max_after_cur_idx[N], min_befor_cur_idx[N], ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    min_befor_cur_idx[<span class="number">0</span>] = num[<span class="number">0</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    max_after_cur_idx[n - <span class="number">1</span>] = num[n - <span class="number">1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        min_befor_cur_idx[i] = min(min_befor_cur_idx[i - <span class="number">1</span>], num[i]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        max_after_cur_idx[n - <span class="number">1</span> - i] = max(max_after_cur_idx[n - i], num[n - <span class="number">1</span> - i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (min_befor_cur_idx[i - <span class="number">1</span>] &lt; num[i] &amp;&amp; max_after_cur_idx[i + <span class="number">1</span>] &gt; num[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            ++ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="满足条件的数列">满足条件的数列</h1><p>DFS。</p><h1 id="草坪扩张">草坪扩张</h1><p>BFS，跟淹海岛的题一样。</p><h1 id="组织晚会">组织晚会</h1><p>小明发现，观众对于晚上的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。</p><p>小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。</p><h2 id="输入格式">输入格式：</h2><p>输入的第一行包含两个整数 n, m ，表示节目的数量和要选择的数量。</p><p>第二行包含 n 个整数，依次为每个节目的好看值。</p><h2 id="输出格式">输出格式：</h2><p>输出一行包含 m 个整数，为选出的节目的好看值。</p><h2 id="样例输入">样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">3 1 2 5 4</span></pre></td></tr></table></figure><p>样例输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">3 5 4</span></pre></td></tr></table></figure><h2 id="样例说明">样例说明</h2><p>选择了第1, 4, 5个节目。</p><h2 id="评测用例规模与约定">评测用例规模与约定</h2><p>对于 30% 的评测用例，1 &lt;= n &lt;= 20；</p><p>对于 60% 的评测用例，1 &lt;= n &lt;= 100；</p><p>对于所有评测用例，1 &lt;= n &lt;= 100000，0 &lt;= 节目的好看值 &lt;= 100000。</p><h2 id="解">解</h2><p>这题想了好久……后来网上找到解法发现极为简单，好吧，这么简单的代码居然是最后一道题，不知道是不是预料到大家会往复杂了想。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, cur;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> idx, val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;node&gt; ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp_val</span><span class="params">(node a, node b)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> a.val &gt; b.val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp_idx</span><span class="params">(node a, node b)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> a.idx &lt; b.idx;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &amp;&amp; <span class="built_in">cin</span> &gt;&gt; cur; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        ans.push_back(&#123;i, cur&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//从大到小排列节目</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    sort(ans.begin(), ans.end(), cmp_val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//最大的m个再按编号从小到大排列</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    sort(ans.begin(), ans.begin() + m, cmp_idx);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[<span class="number">0</span>].val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; ans[i].val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
2020年蓝桥杯因为疫情延期，搞了个线上模拟赛。讲真，完全没有也不想准备这比赛了，要是干脆取消这一届退钱就好了……
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="蓝桥杯" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="蓝桥杯" scheme="http://mechanicalmind.cn/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>沉痛悼念李文亮医生</title>
    <link href="http://mechanicalmind.cn/posts/a37770e.html"/>
    <id>http://mechanicalmind.cn/posts/a37770e.html</id>
    <published>2020-02-07T11:37:24.000Z</published>
    <updated>2020-02-07T11:37:24.000Z</updated>
    
    <content type="html"><![CDATA[<center>R.I.P.</center><a id="more"></a><p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/lwl.jpg" /></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;
R.I.P.
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1003 Emergency</title>
    <link href="http://mechanicalmind.cn/posts/224301ee.html"/>
    <id>http://mechanicalmind.cn/posts/224301ee.html</id>
    <published>2020-01-17T14:10:26.000Z</published>
    <updated>2020-01-18T12:39:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p><p>Input Specification:</p><p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: <span class="math inline">\(N (≤500)\)</span> - the number of cities (and the cities are numbered from 0 to N−1), M - the number of roads, <span class="math inline">\(C_1\)</span> and <span class="math inline">\(C_2\)</span> - the cities that you are currently in and that you must save, respectively. The next line contains N integers, where the i-th integer is the number of rescue teams in the i-th city. Then M lines follow, each describes a road with three integers <span class="math inline">\(c_1\)</span>, <span class="math inline">\(c_2\)</span> and L, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from <span class="math inline">\(C_1\)</span> to <span class="math inline">\(C_2\)</span>.</p><p>Output Specification: For each test case, print in one line two numbers: the number of different shortest paths between <span class="math inline">\(C_1\)</span> and <span class="math inline">\(C_2\)</span> , and the maximum amount of rescue teams you can possibly gather. All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5 6 0 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">1 2 1 5 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">0 1 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">0 2 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">0 3 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">1 2 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">2 4 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">3 4 1</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2 4</span></pre></td></tr></table></figure><p>看题目第一反应呀Dijkstra稍微改改，简单，一想诶Dijkstra咋写的来着忘掉了，这尼玛就很尴尬了。</p><p>首先存储顶点间边的关系，以样例为例：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td></td></tr><tr class="even"><td><strong>1</strong></td><td></td><td>0</td><td>1</td><td></td><td></td></tr><tr class="odd"><td><strong>2</strong></td><td></td><td></td><td>0</td><td></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td></td><td></td><td></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td></td><td></td><td></td><td></td><td>0</td></tr></tbody></table><p>因为是无向图，所以反过来也成立：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td></td></tr><tr class="even"><td><strong>1</strong></td><td>1</td><td>0</td><td>1</td><td></td><td></td></tr><tr class="odd"><td><strong>2</strong></td><td>2</td><td>1</td><td>0</td><td></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td>1</td><td></td><td></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td></td><td></td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>其它到不了，距离为无穷：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td><span class="math inline">\(\infin\)</span></td></tr><tr class="even"><td><strong>1</strong></td><td>1</td><td>0</td><td>1</td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td></tr><tr class="odd"><td><strong>2</strong></td><td>2</td><td>1</td><td>0</td><td><span class="math inline">\(\infin\)</span></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td>1</td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>再用一个数组存储始点到其余点的路程：<span class="math inline">\(0,1,2,1,\infin\)</span>。</p><p>接下来不停贪心，每次取距起点最近的点，并判断能否由这个点到其它点使距离变短。例如现在1和3距起点0最近，所以取1，判断到除起点0和当前点1之外其它点的距离有没有变短：</p><ul><li><code>1-&gt;2</code>为1加<code>0-&gt;1</code>为2没变；</li><li><code>1-&gt;3</code>为无穷加<code>0-&gt;1</code>为无穷变大了；</li><li><code>1-&gt;4</code>为无穷加<code>0-&gt;1</code>为无穷变大了。</li></ul><p>再取下一个点3，判断到除起点0和判断过的点1和当前点3之外其它点的距离有没有变短：</p><ul><li><code>3-&gt;2</code>为无穷加<code>0-&gt;3</code>为无穷变大了；</li><li><code>3-&gt;4</code>为1加<code>0-&gt;3</code>为2变小了。</li></ul><p>新的数组为<span class="math inline">\(0,1,2,1,2\)</span>。</p><p>因为这题的目标点是2，而现在2已经是没判断过的点中距离最小的了，所以可以结束。若想知道起点到所有点的最短距离只需对2和4进行类似的判断。</p><p>然后这题还需要记录有几个最小以及分别的权数，难度不大。</p><p>首先写出基本的Dijstra：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 512</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, c1, c2, tmpc1, tmpc2, min_dis, cur_c, tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> team_num[MAX], roads[MAX][MAX], dis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c1 &gt;&gt; c2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(roads, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(roads));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; team_num[i], roads[i][i] = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc1 &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc2; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; roads[tmpc1][tmpc2], roads[tmpc2][tmpc1] = roads[tmpc1][tmpc2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化dis</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">dis[i] = roads[c1][i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//起点到起点距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">vis[c1] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//循环直至到c2的最短路被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!vis[c2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到未被确定最短路的城市中路径最短的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">min_dis = INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; dis[i] &lt; min_dis)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">min_dis = dis[i], cur_c = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//标明起点到该城市最短距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">vis[cur_c] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断由此城市到其它城市会不会更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//若当前所选城市能到达某城市i且未被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (roads[cur_c][i] &lt; INF &amp;&amp; !vis[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (tmp = dis[cur_c] + roads[cur_c][i], dis[i] &gt; tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改从起点到i的最短距离</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">dis[i] = tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; dis[c2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>然后加上两个数组<code>cnt</code>和<code>team_sum</code>，记录道路组合数目和队伍数。最开始不是把cnt作为数组而是作为一个整型，当发现到达目标城市有相同长度的路径时自增，有更短路径时置为1。牛客网AC但PAT测试点只过了两三个的亚子。研究了好久发现这种方法下如果到某中间城市有多种最短路径，该中间城市到目标城市有一条路径，且由此中间城市到目标城市所需总计最短距离与其它方式的最短距离相等时cnt会自增，但实际上应当增加由起点到该中间城市的最短路径的数目，所以cnt应当是个数组，记录到所有城市的最短路径数目，当发现经由当前城市到达某城市的最短路径与其它方式到达某城市有相同长度的路径时不是自增，而是增加到达当前城市的最短路径数。这个问题困扰了我大概三四个小时。</p><p>所以最后应该是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 512</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, c1, c2, tmpc1, tmpc2, min_dis, cur_c, tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cnt[MAX], team_num[MAX], roads[MAX][MAX], dis[MAX], team_sum[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c1 &gt;&gt; c2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(roads, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(roads));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; team_num[i], roads[i][i] = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc1 &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc2; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; roads[tmpc1][tmpc2], roads[tmpc2][tmpc1] = roads[tmpc1][tmpc2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化dis、team_sum和cnt</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为肯定要收集初始点的队伍，所以可以先都加上初始点队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果起点可直达某点，则通路数记为1，否则记为0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">dis[i] = roads[c1][i], team_sum[i] = team_num[c1], cnt[i] = team_sum[i] == INF ? <span class="number">0</span> : <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//起点到起点距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">vis[c1] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//循环直至到c2的最短路被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!vis[c2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到未被确定最短路的城市中路径最短的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">min_dis = INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; dis[i] &lt; min_dis)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">min_dis = dis[i], cur_c = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//标明起点到该城市最短距离已确定，并加上该城市具有的队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">vis[cur_c] = <span class="literal">true</span>, team_sum[cur_c] += team_num[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断由此城市到其它城市会不会更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//若当前所选城市能到达某城市i且未被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (roads[cur_c][i] &lt; INF &amp;&amp; !vis[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (tmp = dis[cur_c] + roads[cur_c][i], dis[i] &gt; tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改从起点到i的最短距离和路径数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">dis[i] = tmp, cnt[i] = cnt[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改以最小距离到达i可获得的队伍数为以最小距离到当前城市可获得的队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">team_sum[i] = team_sum[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i距离相同</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dis[i] == tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果是当前城市到目的城市距离与原先相同则通路数加当前城市最短路径数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">cnt[i] += cnt[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到目的城市可获得的队伍数更多则修改之</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">team_sum[i] = team_sum[i] &gt; team_sum[cur_c] ? team_sum[i] : team_sum[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; cnt[c2] &lt;&lt; <span class="string">' '</span> &lt;&lt; team_sum[c2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1002 A+B for Polynomials</title>
    <link href="http://mechanicalmind.cn/posts/3b6e04ed.html"/>
    <id>http://mechanicalmind.cn/posts/3b6e04ed.html</id>
    <published>2020-01-17T13:08:50.000Z</published>
    <updated>2020-01-17T13:08:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>多项式求和。</center><a id="more"></a><p>This time, you are supposed to find A+B where A and B are two <strong>polynomials（多项式）</strong>.</p><p>Input Specification:</p><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p><p><span class="math display">\[K\space N_1\space a_{N_1}\space N_2\space a_{N_2}\space ...\space N_K\space a_{N_K}\]</span></p><p>where K is the number of nonzero terms in the polynomial, <span class="math inline">\(N_i\)</span> and <span class="math inline">\(a_{N_​i}(i=1,2,⋯,K)\)</span> are the <strong>exponents（指数）</strong> and <strong>coefficients（系数）</strong>, respectively. It is given that <span class="math inline">\(1≤K≤10，0≤N_K&lt;⋯&lt;N_2&lt;N_1≤1000\)</span>.</p><p>Output Specification:</p><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2 1 2.4 0 3.2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">2 2 1.5 1 0.5</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">3 2 1.5 1 2.9 0 3.2</span></pre></td></tr></table></figure><p>主要的难点是有个坑，系数加完为0的情况。加句判断就好了。用map很方便，然而这个是<span class="math inline">\(0≤N_K&lt;⋯&lt;N_2&lt;N_1≤1000\)</span>，也就是按key的大小倒序排列，写完查了下才知道有<code>reverse_iterator</code>这个东西。</p><p>另外输出格式控制，<code>setprecision(n)</code>指定输出的浮点数的最长有效数字的个数，一开始当成小数点后位数用了，贡献了几次WA。正确的做法是加一句<code>fixed</code>才是指定小数点后的位数。作用范围到下一个<code>setprecision(n)</code>，因为只对浮点数生效所以不需要因为中间要输出的整型指数修改，设置一次即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXK 12</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> k, tmpe;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt; m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;::iterator i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (k--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; tmpe &gt;&gt; tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">m.insert(make_pair(tmpe, tmpc));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (k--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; tmpe &gt;&gt; tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">i = m.find(tmpe);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.end() == i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">m.insert(make_pair(tmpe, tmpc));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i-&gt;second + tmpc != <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">i-&gt;second += tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">m.erase(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">1</span>) &lt;&lt; m.size();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="comment">i = m.end();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">for (--i; i != m.begin(); --i)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">cout &lt;&lt; ' ' &lt;&lt; i-&gt;first &lt;&lt; ' ' &lt;&lt; i-&gt;second;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">cout &lt;&lt; ' ' &lt;&lt; i-&gt;first &lt;&lt; ' ' &lt;&lt; i-&gt;second;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;::reverse_iterator ri = m.rbegin(); ri != m.rend(); ++ri)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ri-&gt;second)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; ri-&gt;first &lt;&lt; <span class="string">' '</span> &lt;&lt; ri-&gt;second;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>使用注释掉的部分最后一个用例会报段错误。所以遇到倒序还是用<code>reverse_iterator</code>吧。</p><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
多项式求和。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1001 A+B Format</title>
    <link href="http://mechanicalmind.cn/posts/d9519229.html"/>
    <id>http://mechanicalmind.cn/posts/d9519229.html</id>
    <published>2020-01-16T14:42:07.000Z</published>
    <updated>2020-01-16T14:42:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>求a+b的值并进行千分位分割。</center><a id="more"></a><p>Calculate a+b and output the sum in standard format -- that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p><p>Input Specification:</p><p>Each input file contains one test case. Each case contains a pair of integers a and b where <span class="math inline">\(−10^6≤a,b≤10^6\)</span>. The numbers are separated by a space.</p><p>Output Specification:</p><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-1000000 9</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-999,991</span></pre></td></tr></table></figure><p>相加简单，题目中说数据范围是正负百万的量级，而int的范围远大于此，所以使用int即可，也无需担心溢出；主要要考虑的是格式化。其实格式化也不难，这题是只有整数的输入，不用考虑小数点，所以想法是先转为string，再从后往前每三位加一个逗号（同时注意判断带负号的情况）。不过一想，相比C，C++其实更加接近Python，这么基础的功能应该在标准输入输出流或stl中实现了，遂谷歌了一下，发现在locale库中确实提供了国际化的输出方案。例如，在中文环境下的默认输出格式即是题中要求的格式。可以通过如下方式设置中文（Chinese Simplied）输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">locale <span class="title">chs</span><span class="params">(<span class="string">"chs"</span>)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>.imbue(chs);</span></pre></td></tr></table></figure><p>然而这么设置之后在自己机器上跑了一下却报错：<code>locale::facet::_S_create_c_locale name not valid</code>。似乎是因为我的电脑并未配置中文环境。这哪行哦，鬼知道OJ的服务器配置的啥环境。继续百度，发现除了像刚才一样根据名字拷贝一个设定好的locale对象外，还可以构造自定义格式的locale对象，例如，查阅locale的源代码，发现有一句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Facet</span>&gt; <span class="title">locale</span>(<span class="title">const</span> <span class="title">locale</span>&amp; <span class="title">other</span>, <span class="title">Facet</span>* _<span class="title">f</span>);</span></span></pre></td></tr></table></figure><p>即，这个构造函数将复制构造一个locale对象other，并使用由_f指定的facet——facet似乎是locale库中的一个概念，类似偏好或策略的意思。故，可以派生定义一个Facet，然后通过这个locale对象使用它。因此可以：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">my_numpunct</span> :</span> numpunct&lt;<span class="keyword">char</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">do_grouping</span><span class="params">()</span> <span class="keyword">const</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"\3"</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function">locale <span class="title">loc</span><span class="params">(<span class="built_in">cout</span>.getloc(), <span class="keyword">new</span> my_numpunct)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>.imbue(loc);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; a + b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>其中<code>getloc()</code>获取当前程序所处的环境，然后修改原本的<code>numpunt</code>类中的<code>do_grouping()</code>为三个数一组，其默认的分隔符就是逗号。</p><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
求a+b的值并进行千分位分割。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GithubPages部署静态博客</title>
    <link href="http://mechanicalmind.cn/posts/7840277d.html"/>
    <id>http://mechanicalmind.cn/posts/7840277d.html</id>
    <published>2020-01-10T07:08:59.000Z</published>
    <updated>2020-01-11T14:13:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>博客基本配置全攻略。</center><a id="more"></a><h1 id="环境">环境</h1><ul><li>Manjaro Linux 18.1.5</li><li>Hexo 4.0.0</li><li>NexT.Pisces 7.6.0</li><li>git 2.24.1</li><li>npm 6.13.6</li><li>node 13.2.0</li></ul><h1 id="配置hexo">配置Hexo</h1><h2 id="基础依赖">基础依赖</h2><p>hexo依赖于git和node.js。</p><p>manjaro自带git，可<code>git</code>查看详情。</p><p>hexo官方建议使用node.js的管理工具nvm安装node.js（nvm是管理node.js的版本的工具，npm是node.js管理它的包的工具）。尝试了官方<code>https://github.com/nvm-sh/nvm</code>给出的<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v.xx.xx.xx/install.sh | bash</code>（xx为当前版本号）命令，访问会被拒绝。经测试可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; <span class="built_in">cd</span> ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</span></pre></td></tr></table></figure><p>命令安装，可以看出这里是把它装到了<sub>/.nvm下。完成后在<code>~/.bash_profile</code></sub>~【更新：<code>~/.bashrc</code>下（否则重启终端后需要<code>source ~/.bash_profile</code>，不然会提示没有<code>npm</code>这个命令。官方教程说<code>~/.bashrc</code>, <code>~/.zshrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>都可以】中添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span></pre></td></tr></table></figure><p>注意地址与安装地址相匹配。最后一行是淘宝镜像源，根据需求添加，也可在调用<code>npm</code>时<code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install node</code>。保存后<code>source ~/.bash_profile</code>即可使用<code>nvm</code>和<code>node</code>命令。</p><p>然后使用NVM安装node.js，只需<code>nvm install node</code>，这样<code>npm</code>也可以使用了。</p><p>进行一下设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> user 0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> unsafe-perm <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></pre></td></tr></table></figure><p>不设置前两个的话会报<code>Permission denied</code>，进度条卡在最开始不动，最后一个是镜像源。至此可以使用<code>npm</code>命令下载node包。</p><h2 id="安装与初始化">安装与初始化</h2><p><code>npm install -g hexo-cli</code>，可使用<code>hexo -v</code>查看安装结果。</p><p>从github上下载网页的代码<code>hexo init &lt;folder&gt;</code>后在<code>&lt;folder&gt;/</code>安装所需的依赖<code>npm install</code>，之后<code>hexo -s</code>就可以看到网页了。考虑使用<code>~/blog</code>作为文件夹。</p><h1 id="如何撰写文章">如何撰写文章</h1><p>在Hexo目录下<code>hexo new [类型] &lt;&quot;博客名&quot;&gt;</code>，类型缺省时为新建一篇博客<code>post</code>（另两种是新建页面<code>page</code>和新建草稿<code>draft</code>）。这其实就是将模板文件<code>blog/scaffolds/</code>对应类型的内容复制过来并重命名为<code>博客名.md</code>。默认<code>post</code>新建博客类型的模板为以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><p>其中前两项生成时会自动填写，<code>tags</code>一项的填写格式为<code>tags: [标签1,标签2,...]</code>或个人更喜欢的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">……</span></span></pre></td></tr></table></figure><p>写好文章编辑保存后<code>hexo g</code>即可。运行<code>hexo s</code>可查看。</p><p>但是除这三项信息外通常还希望为文章增加更多标识，因此除默认配置外，有必要添加如下内容：</p><ul><li><code>categories:</code>，分级目录属性。与<code>tags</code>属性不同，其可以划分父子级关系，不过语法是相同的；</li><li><code>&lt;!--more--&gt;</code>，此标签之后的部分将被隐藏，点进去才能看，对NexT很有用。</li><li><code>thumbnail:</code><del>（如果主题支持文章封面），后跟图片链接即可。经测试，使用<code>450*212</code>的图片作为主题“Hueman”的封面可以获得比较好的画质，体积也只有20至30KB。</del> <strong>【之前用的Hueman，现在NexT不支持】</strong> 不过可以在<code>&lt;!--more--&gt;</code>前放，格式更随意，横向两百多像素效果就不错，接着用212吧，嗯，水的华氏温标沸点……算是个整数？</li><li><code>updated: 1578640139000</code>更新日期。</li></ul><p>最终效果如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">updated:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">![]()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;center&gt;&lt;/center&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--more--&gt;</span></span></pre></td></tr></table></figure><p>关于这个updated，并没有找到如何能在<code>hexo g</code>时自动修改……一个相对方便的办法是在VSCode安装插件“Insert Date String”，装好后使用快捷键即可插入符合格式要求的串，不过默认的快捷键与“Markdown All in One”插件整理表格的快捷键冲突，可通过<code>Ctrl+K</code>（此时左下角会提示你输入下一个命令）然后<code>Ctrl+S</code>调出快捷键修改菜单，我将其修改为<code>Ctrl+Shift+Alt+T</code>。</p><p>Hexo的博文默认是以创建时间排序，然而也希望新修改的文章能被放在前面。在站点配置文件中将“index_generator”中“order_by”修改为<code>-updated</code>即可。</p><p><em><strong>【！注意！】</strong></em> 任何行内式中不要出现两个同方向大括号连用的情况！否则会报<code>Nunjucks Error</code>，要空格分开！</p><h1 id="站点的配置与站点相关插件的安装">站点的配置与站点相关插件的安装</h1><p>在<code>blog/</code>有一<code>_config.yml</code>文件，其保存有站点相关的设置。当此配置文件与主题的配置文件冲突时，此配置文件将覆盖主题的配置文件。</p><h2 id="基本配置">基本配置</h2><p>开头是Site模块：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标题，会显示在浏览器标签栏上</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">描述</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">keywords:</span> <span class="string">网站关键字，给搜索引擎看的，感觉没什么用的亚子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">作者，对于NexT主题会显示在页脚</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">语言（简中：zh-CN；不同主题不同，例如NexT中似乎叫zh-Hans）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">timezone:</span> <span class="string">网站时区，默认使用电脑的无需改动</span></span></pre></td></tr></table></figure><p>我的博客使用的Site模块如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Mech_Mind's</span> <span class="string">blog</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">Proletoj</span> <span class="string">el</span> <span class="string">ĉiuj</span> <span class="string">landoj,</span> <span class="string">unuiĝu!</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">敲键盘</span> <span class="string">按快门</span> <span class="string">巡星空</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">keywords:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">Mechanical_Mind</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">timezone:</span></span></pre></td></tr></table></figure><p>剩下的似乎不是太用改，例如URL模块似乎是当网站放在子目录下时用的等等。</p><h2 id="博文压缩">博文压缩</h2><p>hexo的文章是<code>.md</code>经过swig转换成的html，生成的html中的空格和注释会影响JS的性能，<del>可在<code>blog/</code>安装hexo自带的neat插件<code>npm install hexo-neat --save</code>进行压缩。安装插件后在站点配置文件中添加：</del><strong>【更新】neat突然会报错了，怀疑是因为最新版本的NexT使用了不支持的JavaScript语法导致。现将压缩工具更换为gulp。</strong></p><p>可在<code>blog/</code>安装gulp插件<code>npm install gulp -g</code>和<code>npm install gulp gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify-es gulp-imagemin del gulp-minify-inline-json --save</code>，并在<code>~/blog</code>新增<code>gulpfile.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify-es'</span>).default;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">'hexo'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minifyInlineJSON = <span class="built_in">require</span>(<span class="string">'gulp-minify-inline-json'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> del([<span class="string">'public/**/*'</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'generate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">cb</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'generate'</span>, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            watch: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> cb()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        hexo.exit(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> cb(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'deploy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'deploy'</span>, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            watch: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> hexo.exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> hexo.exit(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        .pipe(minifycss(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            compatibility: <span class="string">'ie8'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        &#125;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        .pipe(htmlclean())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        .pipe(htmlmin(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            removeComments: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            minifyJS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">            minifyCSS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            minifyURLs: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        &#125;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-img'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/img/**/*'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        .pipe(imagemin([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">            imagemin.gifsicle(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">                interlaced: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            imagemin.jpegtran(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">                progressive: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">            imagemin.optipng(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">                optimizationLevel: <span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">            imagemin.svgo(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">                plugins: [&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">                    removeViewBox: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">                &#125;, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">                    cleanupIDs: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">                &#125;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">            &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        ]))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public/img'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">        .pipe(uglify())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minifyInlineJSON'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        .pipe(minifyInlineJSON())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'compress'</span>, gulp.series(<span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>, <span class="string">'minify-img'</span>, <span class="string">'minify-js'</span>, <span class="string">'minifyInlineJSON'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'default'</span>, gulp.series(<span class="string">'clean'</span>, <span class="string">'generate'</span>, <span class="string">'compress'</span>, <span class="string">'deploy'</span>));</span></pre></td></tr></table></figure><p>这个方法在网上可以找到许多资料，以上应该是截至20年前最新的，来自<span class="citation" data-cites="萌樱">[@萌樱]</span>(https://moesakura.world/archives/hexo-gulp/)，我使用时对应的各包版本是：</p><ul><li>gulp@4.0.2</li><li>gulp-imagemin@6.2.0</li><li>del@5.1.0</li><li>gulp-htmlmin@5.0.1</li><li>gulp-clean-css@4.2.0</li><li>gulp-htmlclean@2.7.22</li><li>gulp-minify-inline-json@1.3.4</li><li>gulp-uglify-es@2.0.0</li></ul><p>安装期间报了一个错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">✖ Error: Command failed: &#x2F;bin&#x2F;sh -c .&#x2F;configure --disable-shared --prefix&#x3D;&quot;&#x2F;home&#x2F;oiljhihai&#x2F;blog&#x2F;node_modules&#x2F;jpegtran-bin&#x2F;vendor&quot; --bindir&#x3D;&quot;&#x2F;home&#x2F;oiljhihai&#x2F;blog&#x2F;node_modules&#x2F;jpegtran-bin&#x2F;vendor&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">configure: error: no nasm (Netwide Assembler) found</span></pre></td></tr></table></figure><p>但没发现有什么影响，暂且忽略。安装好后就可以使用<code>gulp</code>命令替代<code>hexo d</code>命令了，上传的将是压缩后的内容，访问时可以明显感觉到速度的提升。</p><h2 id="博文加密">博文加密</h2><p>对于一些具有一定私密性的博客，可通过安装插件<code>npm install hexo-blog-encrypt --save</code>后在博客配置文件写入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><p>后在要加密的文章添加<code>password: xxxxx</code>加密。与直接通过js代码加密不同，这种加密方式更难破解，不会出现看下网页源码就知道密码的情况。</p><p>不过还是没啥安全性就是了，毕竟是静态页面。</p><h2 id="链接持久化">链接持久化</h2><p>站点配置文件中有句话叫<code>permalink: :year/:month/:day/:title/</code>，意思是一篇文章的地址是<code>public/posts/年/月/日/文章名</code>，这一方面产生了很多目录，一方面一旦文章名字改变，其链接也将被改变，显然是不行的。因此需要进行链接持久化。有个插件可以做到这一点，它是将文章的建立时间的哈希值作为文件名直接放在<code>public/posts/</code>，显然一篇文章的建立时间是不会变的。</p><p><code>npm install hexo-abbrlink --save</code>以安装此插件，并将站点配置文件中有关“permalink”的两行修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># permalink: :year/:month/:day/:title/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># permalink_defaults:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">abbrlink:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span></pre></td></tr></table></figure><h2 id="看板娘">看板娘</h2><p>可以使用 Live 2D 为博客增添一个 2D 角色。</p><p>首先检查<code>package.json</code>里是否已安装<code>&quot;hexo-helper-live2d&quot;</code>，有的话可以先<code>npm uninstall hexo-helper-live2d</code>，官方称“THIS PACKAGE IS DEPRECATED BECAUSE IT WON'T ADD DEPENDENCIES ON YOUR PRODUCTION ENVIRONMENT”。</p><p>安装<code>npm install --save hexo-helper-live2d</code>后<code>node_moduels/</code>会生成配置文件夹<code>live2d-widget</code>。</p><p><code>https://github.com/xiazeyu/live2d-widget-models.git</code>提供了可用的模型，前缀为<code>live2d-widget-model-haru</code>的模型需要<code>npm install live2d-widget-model-haru</code>支持。</p><p>以一只黑猫的模型为例，<code>npm install live2d-widget-model-hijiki</code>后配置博客站点配置文件<code>_config.yml</code>，添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">model:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span>  <span class="comment">#模板目录，在node_modules里</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">display:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#位置只能调上下和靠左靠右 具体多靠左多靠右不能调</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">width:</span> <span class="number">200</span> <span class="comment">#大小</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">height:</span> <span class="number">290</span> <span class="comment">#上下位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">mobile:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span></pre></td></tr></table></figure><p>即可。这个位置大小是NexT的那个两栏的模式+黑猫我精心调之后觉得最合适的。</p><h1 id="主题的配置与主题相关插件的安装">主题的配置与主题相关插件的安装</h1><h2 id="主题安装">主题安装</h2><p>如果想要换主题，首先找到一个主题，下载可得一个压缩包解压到<code>themes</code>文件夹下即可。注意很多主题同时会有WordPress和Hexo两个版本，不要下错。</p><p>曾经长期使用Landscape（2018年）和Hueman（2019年）两个主题。Landscape作为默认主题，简约大气，自己改一下图片啊配色啊啥的相当不错，但支持的功能略少；Hueman算是杂志风格，支持的功能也很多，但总感觉侧边栏和选项卡功能重复，不够简约，而且一些符号显示会出错，默认的代码块也很丑。目前正在使用最大众化的NexT主题（不过经常看到和别人的博客主题一样也挺不爽的……）。</p><p>该主题仓库位于<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">这里</a>，参照说明安装即可。</p><p>使用主题文件夹下多出的文件夹的名字替换掉博客根目录下的<code>_config.yml</code>中<code>theme</code>项的内容后<code>hexo g</code>即可，注意<code>theme:</code>后应当有一个空格。</p><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">这里</a>是一份较早前版本的参考文档，具有一定参考性，但已有部分设置与最新版本有偏差。</p><h2 id="基本配置-1">基本配置</h2><p>在NexT较老的版本中，仅能通过修改<code>next/_config.yml</code>文件进行设置，7.2.0版本之后已可以通过外挂用户配置文件进行设置，这是更加符合马克思主义关于人类历史发展规律的认识、三个代表重要思想和科学发展观的配置方式。仅需在<code>blog/source/</code>新建文件夹<code>_data</code>，并在其中新建<code>next.yml</code>即可。当<code>next/_config.yml</code>中<code>override:</code>项值为<code>false</code>时，在<code>next.yml</code>中进行配置即可覆盖<code>next/_config.yml</code>中的项。</p><p>需要设置的项主要有：</p><p>修改风格项<code>Schemes</code>，在文件中添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes #########################################################################################</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Mist</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Pisces</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Gemini</span></span></pre></td></tr></table></figure><p>为侧栏增加标签页和分类页，在文件中添加（即将中的相关内容复制过来，把标签和分类两行取注）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu ############################################################################################</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># External url should start with http:// or https://</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#about: /about/ || user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span></pre></td></tr></table></figure><p>显示当前浏览进度<code>scrollpercent</code>置为true。</p><p>启用本地搜索只需<code>npm install hexo-generator-searchdb --save</code>并设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><p>添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure><p>设置头像只需简单修改<code>Sidebar Avatar</code>字段，这里头像指的是有侧栏的主题中侧栏里显示的，不是指网站logo。</p><p>设置网站logo只需修改<code>favicon:</code>字段。</p><p>字体配置先找到<code>font</code>并启用，这样就可以自定义字体怎么用而不是通过默认的谷歌字库外链加载默认字体。全局设置使用思源黑体，谷歌和奥多比联合开发，品质保证！<code>code</code>要以等宽字体显示所以需要设置为等宽字体，“Fira Code”虽然样子只能说还行，但提供了极好的连字模式，如果只是想表示<span class="math inline">\(\rightarrow\)</span>之类可以直接代码块<code>-&gt;</code>，非常方便。缺点是会给读者造成误解，管它呢，这破博客本身就是写了自嗨的。可选择字库外链，中科大的地址是<code>//fonts.lug.ustc.edu.cn</code>，速度勉强，偶尔会崩。</p><h2 id="在主题内渲染自定义页面">在主题内渲染自定义页面</h2><p>想要新建一个页面，需要在主题配置文件<code>menu</code>下新增相应的行，这将在博客菜单栏中增加一个指向该页面的按钮。以增加博客的关于页面为例，这个比较简单，将<code>menu</code>下已经有的那一行取注即可，Hexo在工作时会自动生成相关页面。</p><p>对于其它页面，还需做以下工作：</p><p>所有主题内的待渲染页面均以markdown形式放置在<code>source/</code>，如<code>source/_post/</code>存放了所有文章的markdown文件。想要新建一个页面，需要生成一个对应的文件夹，例如通过<code>hexo new page &quot;about&quot;</code>生成关于页面所在的文件夹，这同时会生成一个<code>index.md</code>文件。在其内写入正文即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">正文</span></span></pre></td></tr></table></figure><p>就实现了一个关于页面。</p><p>如果希望这个页面使用自己编写的html而不是渲染markdown，则在<code>index.md</code>中写入一行<code>layout: false</code>，这样Hexo就不会把这个markdown当作markdown渲染：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><p>并新建一<code>index.html</code>，在其中编写网页。此时该网页将被直接插入到hexo生成的页面中，因此具有与主题相同的布局等。</p><p>如果不想要这种效果而是完全自己写网页，则将网页写在此<code>.md</code>中并以<code>`和`</code>包起。</p><h2 id="使用latex语法">使用LaTex语法</h2><p>在主题配置文件中开启“mathjax”一项为<code>true</code>即可使用LaTex语法，某些主题可能还需要将“math”开启，可选择是每个页面都开启还是需要手动开启。</p><p>注意，与正常使用Markdown不同，Hexo不支持LaTex，mathjax并非对<code>.md</code>渲染，而是渲染Hexo生成的Html。因此要确保Hexo不会误将LaTex标记渲染为Html标签。一种方法是在公式块中使用Markdown语法符号时使用转义，更一劳永逸的方法是更换Hexo的渲染引擎。</p><p>默认的渲染引擎“hexo-renderer-marked”可通过<code>npm uninstall hexo-renderer-marked --save</code>卸载，<code>npm install hexo-renderer-pandoc --save</code>，即可更换成另一个表现较好的引擎。与许多人推荐的<code>npm install hexo-renderer-kramed --save</code>相比，该引擎表现更好，无需额外修改一些配置文件。</p><p>【更新】发现无法渲染形如<span class="math inline">\(\xRightarrow[aaa]{bbb}\)</span>的格式。暂时用<span class="math inline">\(\Rightarrow_{aaa}^{bbb} \Rightarrow\)</span>这样子代替。</p><h2 id="增加评论区">增加评论区</h2><p>这个主题还提供了评论功能，有许多可选的服务提供商，不过没什么卵用。国内的要么倒闭了要么需要实名制，国外的又要扶墙……</p><p>【更新】发现了一个比较好用的服务商，棒子的“<a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>”。只需正常步骤注册即可获得一段代码 <del>，用此代码替换掉主题中的<code>layout/comment/livere.ejs</code>中的内容，再在主题配置文件中禁用<code>comment</code>项下的所有评论工具，在<code>comment</code>项外，比如上面一行添加<code>livere_uid: xxxxxxxx</code>，其中<code>xxxxxxx</code>为获取的代码中提供的UID。再将主题中的<code>layout/common/article.ejs</code>中最后一行<code>&lt;%- partial('comment/index') %&gt;</code>改为<code>&lt;%- partial('comment/livere') %&gt;</code>即可。</del> 【更新】划去部分针对Hueman。NexT只需在主题配置文件下找到<code>livere_uid:</code>填上代码中的UID即可。</p><h2 id="使用不蒜子统计访问量">使用“不蒜子”统计访问量</h2><p>添加网站访问数统计只需在<code>xx-analysis</code>项添加从分析网站比如百度分析、谷歌分析等等网站获得的哈希值即可。注册帐号后根据提示操作即可获得一段JS代码，哈希值在其中。但这类网站只能站主登录进去查看自己网站的访问情况，感觉没什么必要。若想在网站中显示访问数，可使用<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a><del>，注意<code>footer</code>文件的位置可能与官方描述有差别。不蒜子自身只提供标签与数字，具体内容由用户编辑。使用官方给出的简易程序对<code>footer</code>做如下修改将统计显示在页脚：</del>【更新】划去部分针对Hueman，Next集成不蒜子，只需调整<code>busuanzi_count</code>项即可。</p><p>然而网站访问次数时显示时不显示，而且不显示的时候是只显示一个分割访问人数和人次的竖杠，人数和人次的图标和数目都不显示，所以这不是不蒜子服务器的原因而是插件的原因，但是为啥有时插件加载得出来有时又加载不出来就很奇怪。另外每篇文章的显示永远显示不出来，连竖杠都没有，就很奇怪。</p><p>不蒜子不需要安装插件，官方说它只有两行代码，但是我愣是没找到这两行代码放在哪里了……</p><h2 id="启用rss">启用RSS</h2><p>开启RSS订阅，首先需要安装RSS插件<code>npm install hexo-generator-feed --save</code>，并在站点配置文件中添加RSS支持：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅支持</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">atom</span>                <span class="comment">#RSS的类型(atom/rss2)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span>            <span class="comment">#文件路径,默认atom.xml/rss2.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>                 <span class="comment">#展示文章的数量,0或false展示全部</span></span></pre></td></tr></table></figure><p>最后将主题配置文件中的<code>rss</code>项改为<code>rss: /atom.xml</code>可开启RSS订阅，可在<code>public/</code>见<code>atom.xml</code>。</p><h2 id="版权声明">版权声明</h2><p>对于最新的NexT版本，在主题配置文件中启用<code>creative_commons</code>即可，默认的协议就很合适。</p><p>这里的链接很奇怪，显示的链接是对的，但点它跳转的时候实际跳转到的地址多了个域名前缀，即重复两遍域名前缀。没找到对应源代码在哪里，不是什么大问题懒得研究了。</p><h2 id="字数统计">字数统计</h2><p>安装统计插件<code>npm install hexo-symbols-count-time --save</code>后修改<code>symbols_count_time:</code>项即可。</p><h1 id="将博客公开展示">将博客公开展示</h1><h2 id="部署至github">部署至GitHub</h2><p>安装hexo的插件：<code>npm install hexo-deployer-git --save</code>。</p><p>在github中建立一个以自己名字命名的仓库，建好后将<code>_config.yml</code>中的`deploy项替换为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">repository:</span> <span class="string">建好仓库后给出的地址中git格式那个复制一下粘过来</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span></pre></td></tr></table></figure><p>首先配置git用户名<code>git config --global user.name &quot;&lt;用户名&gt;&quot;</code>和邮箱<code>git config --global user.email &quot;&lt;邮箱&gt;&quot;</code>，这会生成一个<code>~/gitconfig</code>文件，想改的话直接改这个文件就行。然后获取SHH密钥<code>ssh-keygen -t rsa -C &quot;&lt;前面的邮箱&gt;&quot;</code>，一路回车即可，之后会生成一个<code>~/.ssh</code>文件夹，其中有一个私钥<code>id_rsa</code>和一个公钥<code>id_rsa.pub</code>，将公钥添加至github。从github网页右上角的下拉菜单里的settings中添加。</p><p>如果<code>ssh -T git@github.com</code>后（第一次连接时中间需要yes一下）出现<code>You've successfully authenticated, but GitHub does not provide shell access.</code>说明OK了，使用<code>hexo d</code>即可部署网页。</p><h2 id="域名解析">域名解析</h2><p>终端<code>ping -4 用户名.github.io</code>可以获得GitHub Pages的服务器地址。</p><p>在提供域名解析的网站的控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值为刚才ping得的地址。再设置一条主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>用户名.github.io</code>。这两条分别意味着将购买的域名指向一个IPv4地址和另一个域名。</p><p>在<code>blog/source/</code>建立<code>CNAME</code>文件，写入购买的域名。进入GitHub中的博客仓库。在仓库的Setting-&gt;Custom domain添加域名后保存即可。</p><h2 id="google收录">Google收录</h2><p>Github似乎不让百度爬，想让百度收录恐怕要更换Page服务提供商，懒得弄，所以搜索引擎收录的话就只谷歌好了。</p><p>让搜索引擎收录即提交站点地图“sitemap”，安装插件<code>npm install hexo-generator-sitemap --save</code>并在站点配置文件中写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Plugins:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    - hexo-generator-sitemap</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sitemap:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    path: sitemap.xml</span></pre></td></tr></table></figure><p><code>hexo -g</code>时即可生成，注意站点配置文件中有个url项要改成自己的，sitemap生成的域名将以此项的内容为前缀。</p><p>在谷歌站长工具中验证网站所有性（根据提示使用网域验证即可，验证使用的域名应当与sitemap中的相同，然后提交sitemap即可。</p><p>可以在<code>~/blog/source</code>下新建一<code>robots.txt</code>，指定哪些文件可以被爬取，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># hexo robots.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">User-agent: *</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;archives&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;tags&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;categories&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;about&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;js&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;css&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;lib&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Sitemap: http:&#x2F;&#x2F;mechanicalmind.cn&#x2F;sitemap.xml</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
博客基本配置全攻略。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="戏法" scheme="http://mechanicalmind.cn/categories/%E6%88%8F%E6%B3%95/"/>
    
    
      <category term="Hexo" scheme="http://mechanicalmind.cn/tags/Hexo/"/>
    
  </entry>
  
</feed>
