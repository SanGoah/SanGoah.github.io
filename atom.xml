<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mech_Mind&#39;s blog</title>
  
  <subtitle>Proletoj el ĉiuj landoj, unuiĝu!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mechanicalmind.cn/"/>
  <updated>2020-03-16T09:24:55.000Z</updated>
  <id>http://mechanicalmind.cn/</id>
  
  <author>
    <name>Mechanical_Mind</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title> 蓝桥杯2020模拟赛</title>
    <link href="http://mechanicalmind.cn/posts/33d846cd.html"/>
    <id>http://mechanicalmind.cn/posts/33d846cd.html</id>
    <published>2020-03-16T09:24:55.000Z</published>
    <updated>2020-03-16T09:24:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>2020年蓝桥杯因为疫情延期，搞了个线上模拟赛。讲真，完全没有也不想准备这比赛了，要是干脆取消这一届退钱就好了……</center><a id="more"></a><h1 id="单位换算">单位换算</h1><p>侮辱智商，拒绝作答。</p><h1 id="约数统计">约数统计</h1><p>暴力。</p><h1 id="在1至2019中有多少个数的数位中包含数字9">在1至2019中，有多少个数的数位中包含数字9？</h1><p>因为是各自在家比赛，其实是可以百度的。想找找stl里有没有啥逃课的方法，果然找到了个<code>find()</code>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2019</span>;++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">string</span> cur=to_string(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(cur.find(<span class="string">'9'</span>)!= cur.npos)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            ++cnt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>注意如果找不到返回的是<code>string.npos</code>而不是0或-1之类。</p><h1 id="树的结点数">树的结点数</h1><p>总觉得这题做过好多好多次了……</p><h1 id="寻找数位递增的数">寻找数位递增的数</h1><p>写的转string暴力一位一位比。不过事后一想可能会超时？最多的样例会有百万次判断，按每次判断进行4次比较算一秒钟应该也OK……</p><p>看到有大佬用DP：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, a[<span class="number">11</span>], dp[<span class="number">11</span>][<span class="number">10</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> pre, <span class="keyword">bool</span> limit)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (pos == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (!limit &amp;&amp; dp[pos][pre] != <span class="number">-1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> dp[pos][pre];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> up = limit ? a[pos] : <span class="number">9</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pre; i &lt;= up; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        ans += dfs(pos - <span class="number">1</span>, i, limit &amp;&amp; i == a[pos]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (!limit)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        dp[pos][pre] = ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="keyword">sizeof</span>(dp));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//注意数组和原数相反了，现在是找递减。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (n)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        a[k++] = n % <span class="number">10</span>,n /= <span class="number">10</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(k - <span class="number">1</span>, <span class="number">0</span>, <span class="literal">true</span>) - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="寻找hello这样的单词">寻找hello这样的单词</h1><p>字符串判断的题。</p><h1 id="寻找递增三元组的中心">寻找递增三元组的中心</h1><p>上来先写了判断是否存在递增三元组的代码，每找到一个就记录这个三元组的中心，看最后有多少个中心：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,num[N],min1,min2,idx_min2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    min1=min2=INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (num[i]&lt;=min1) min1 = num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num[i] &lt; min2) min2 = num[i],idx_min2=i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num[i] &gt; min2) s.insert(idx_min2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.size();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>写完发现不对，这个算法是判断是否存在三元组的，不是找到所有三元组，对于有许多递增三元组的数列它找不全，例如数列<code>1 2 5 3 5</code>，它只会给出<code>1 2 5</code>、<code>1 2 3</code>和<code>1 2 5</code>，<code>1 3 5</code>不会给出，所以对这个样例来说会少掉“3”这一中心。</p><p>最后用的笨方法，对每个数判断之前、之后的最小、最大值，不过使用两个数组保存某位置之前的最小值、之后的最大值，只需一遍遍历，其实很快。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, num[N], max_after_cur_idx[N], min_befor_cur_idx[N], ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    min_befor_cur_idx[<span class="number">0</span>] = num[<span class="number">0</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    max_after_cur_idx[n - <span class="number">1</span>] = num[n - <span class="number">1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        min_befor_cur_idx[i] = min(min_befor_cur_idx[i - <span class="number">1</span>], num[i]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        max_after_cur_idx[n - <span class="number">1</span> - i] = max(max_after_cur_idx[n - i], num[n - <span class="number">1</span> - i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (min_befor_cur_idx[i - <span class="number">1</span>] &lt; num[i] &amp;&amp; max_after_cur_idx[i + <span class="number">1</span>] &gt; num[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            ++ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="满足条件的数列">满足条件的数列</h1><p>DFS。</p><h1 id="草坪扩张">草坪扩张</h1><p>BFS，跟淹海岛的题一样。</p><h1 id="组织晚会">组织晚会</h1><p>小明发现，观众对于晚上的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。</p><p>小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。</p><h2 id="输入格式">输入格式：</h2><p>输入的第一行包含两个整数 n, m ，表示节目的数量和要选择的数量。</p><p>第二行包含 n 个整数，依次为每个节目的好看值。</p><h2 id="输出格式">输出格式：</h2><p>输出一行包含 m 个整数，为选出的节目的好看值。</p><h2 id="样例输入">样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">3 1 2 5 4</span></pre></td></tr></table></figure><p>样例输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">3 5 4</span></pre></td></tr></table></figure><h2 id="样例说明">样例说明</h2><p>选择了第1, 4, 5个节目。</p><h2 id="评测用例规模与约定">评测用例规模与约定</h2><p>对于 30% 的评测用例，1 &lt;= n &lt;= 20；</p><p>对于 60% 的评测用例，1 &lt;= n &lt;= 100；</p><p>对于所有评测用例，1 &lt;= n &lt;= 100000，0 &lt;= 节目的好看值 &lt;= 100000。</p><h2 id="解">解</h2><p>这题想了好久……后来网上找到解法发现极为简单，好吧，这么简单的代码居然是最后一道题，不知道是不是预料到大家会往复杂了想。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, cur;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> idx, val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;node&gt; ans;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp_val</span><span class="params">(node a, node b)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> a.val &gt; b.val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp_idx</span><span class="params">(node a, node b)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> a.idx &lt; b.idx;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &amp;&amp; <span class="built_in">cin</span> &gt;&gt; cur; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        ans.push_back(&#123;i, cur&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//从大到小排列节目</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    sort(ans.begin(), ans.end(), cmp_val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//最大的m个再按编号从小到大排列</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    sort(ans.begin(), ans.begin() + m, cmp_idx);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[<span class="number">0</span>].val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; ans[i].val;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
2020年蓝桥杯因为疫情延期，搞了个线上模拟赛。讲真，完全没有也不想准备这比赛了，要是干脆取消这一届退钱就好了……
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="蓝桥杯" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="蓝桥杯" scheme="http://mechanicalmind.cn/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>沉痛悼念李文亮医生</title>
    <link href="http://mechanicalmind.cn/posts/a37770e.html"/>
    <id>http://mechanicalmind.cn/posts/a37770e.html</id>
    <published>2020-02-07T11:37:24.000Z</published>
    <updated>2020-02-07T11:37:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/lwl.jpg" /></p><h3 div align="center" style="color:#901900">能，明白。</h3><p align="right">——李文亮</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/lwl.jpg&quot; /&gt;&lt;/p&gt;
&lt;h3 div align=&quot;center&quot; style=&quot;color:#901900&quot;&gt;
能，明白。
&lt;/h3&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1003 Emergency</title>
    <link href="http://mechanicalmind.cn/posts/224301ee.html"/>
    <id>http://mechanicalmind.cn/posts/224301ee.html</id>
    <published>2020-01-17T14:10:26.000Z</published>
    <updated>2020-01-18T12:39:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p><p>Input Specification:</p><p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: <span class="math inline">\(N (≤500)\)</span> - the number of cities (and the cities are numbered from 0 to N−1), M - the number of roads, <span class="math inline">\(C_1\)</span> and <span class="math inline">\(C_2\)</span> - the cities that you are currently in and that you must save, respectively. The next line contains N integers, where the i-th integer is the number of rescue teams in the i-th city. Then M lines follow, each describes a road with three integers <span class="math inline">\(c_1\)</span>, <span class="math inline">\(c_2\)</span> and L, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from <span class="math inline">\(C_1\)</span> to <span class="math inline">\(C_2\)</span>.</p><p>Output Specification: For each test case, print in one line two numbers: the number of different shortest paths between <span class="math inline">\(C_1\)</span> and <span class="math inline">\(C_2\)</span> , and the maximum amount of rescue teams you can possibly gather. All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5 6 0 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">1 2 1 5 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">0 1 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">0 2 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">0 3 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">1 2 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">2 4 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">3 4 1</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2 4</span></pre></td></tr></table></figure><p>看题目第一反应呀Dijkstra稍微改改，简单，一想诶Dijkstra咋写的来着忘掉了，这尼玛就很尴尬了。</p><p>首先存储顶点间边的关系，以样例为例：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td></td></tr><tr class="even"><td><strong>1</strong></td><td></td><td>0</td><td>1</td><td></td><td></td></tr><tr class="odd"><td><strong>2</strong></td><td></td><td></td><td>0</td><td></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td></td><td></td><td></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td></td><td></td><td></td><td></td><td>0</td></tr></tbody></table><p>因为是无向图，所以反过来也成立：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td></td></tr><tr class="even"><td><strong>1</strong></td><td>1</td><td>0</td><td>1</td><td></td><td></td></tr><tr class="odd"><td><strong>2</strong></td><td>2</td><td>1</td><td>0</td><td></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td>1</td><td></td><td></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td></td><td></td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>其它到不了，距离为无穷：</p><table><thead><tr class="header"><th></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr class="odd"><td><strong>0</strong></td><td>0</td><td>1</td><td>2</td><td>1</td><td><span class="math inline">\(\infin\)</span></td></tr><tr class="even"><td><strong>1</strong></td><td>1</td><td>0</td><td>1</td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td></tr><tr class="odd"><td><strong>2</strong></td><td>2</td><td>1</td><td>0</td><td><span class="math inline">\(\infin\)</span></td><td>1</td></tr><tr class="even"><td><strong>3</strong></td><td>1</td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td><td>0</td><td>1</td></tr><tr class="odd"><td><strong>4</strong></td><td><span class="math inline">\(\infin\)</span></td><td><span class="math inline">\(\infin\)</span></td><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>再用一个数组存储始点到其余点的路程：<span class="math inline">\(0,1,2,1,\infin\)</span>。</p><p>接下来不停贪心，每次取距起点最近的点，并判断能否由这个点到其它点使距离变短。例如现在1和3距起点0最近，所以取1，判断到除起点0和当前点1之外其它点的距离有没有变短：</p><ul><li><code>1-&gt;2</code>为1加<code>0-&gt;1</code>为2没变；</li><li><code>1-&gt;3</code>为无穷加<code>0-&gt;1</code>为无穷变大了；</li><li><code>1-&gt;4</code>为无穷加<code>0-&gt;1</code>为无穷变大了。</li></ul><p>再取下一个点3，判断到除起点0和判断过的点1和当前点3之外其它点的距离有没有变短：</p><ul><li><code>3-&gt;2</code>为无穷加<code>0-&gt;3</code>为无穷变大了；</li><li><code>3-&gt;4</code>为1加<code>0-&gt;3</code>为2变小了。</li></ul><p>新的数组为<span class="math inline">\(0,1,2,1,2\)</span>。</p><p>因为这题的目标点是2，而现在2已经是没判断过的点中距离最小的了，所以可以结束。若想知道起点到所有点的最短距离只需对2和4进行类似的判断。</p><p>然后这题还需要记录有几个最小以及分别的权数，难度不大。</p><p>首先写出基本的Dijstra：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 512</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, c1, c2, tmpc1, tmpc2, min_dis, cur_c, tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> team_num[MAX], roads[MAX][MAX], dis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c1 &gt;&gt; c2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(roads, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(roads));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; team_num[i], roads[i][i] = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc1 &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc2; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; roads[tmpc1][tmpc2], roads[tmpc2][tmpc1] = roads[tmpc1][tmpc2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化dis</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">dis[i] = roads[c1][i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//起点到起点距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">vis[c1] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//循环直至到c2的最短路被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!vis[c2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到未被确定最短路的城市中路径最短的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">min_dis = INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; dis[i] &lt; min_dis)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">min_dis = dis[i], cur_c = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//标明起点到该城市最短距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">vis[cur_c] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断由此城市到其它城市会不会更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//若当前所选城市能到达某城市i且未被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (roads[cur_c][i] &lt; INF &amp;&amp; !vis[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (tmp = dis[cur_c] + roads[cur_c][i], dis[i] &gt; tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改从起点到i的最短距离</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">dis[i] = tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; dis[c2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>然后加上两个数组<code>cnt</code>和<code>team_sum</code>，记录道路组合数目和队伍数。最开始不是把cnt作为数组而是作为一个整型，当发现到达目标城市有相同长度的路径时自增，有更短路径时置为1。牛客网AC但PAT测试点只过了两三个的亚子。研究了好久发现这种方法下如果到某中间城市有多种最短路径，该中间城市到目标城市有一条路径，且由此中间城市到目标城市所需总计最短距离与其它方式的最短距离相等时cnt会自增，但实际上应当增加由起点到该中间城市的最短路径的数目，所以cnt应当是个数组，记录到所有城市的最短路径数目，当发现经由当前城市到达某城市的最短路径与其它方式到达某城市有相同长度的路径时不是自增，而是增加到达当前城市的最短路径数。这个问题困扰了我大概三四个小时。</p><p>所以最后应该是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 512</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, c1, c2, tmpc1, tmpc2, min_dis, cur_c, tmp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cnt[MAX], team_num[MAX], roads[MAX][MAX], dis[MAX], team_sum[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAX];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c1 &gt;&gt; c2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(roads, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(roads));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; team_num[i], roads[i][i] = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc1 &amp;&amp; <span class="built_in">cin</span> &gt;&gt; tmpc2; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; roads[tmpc1][tmpc2], roads[tmpc2][tmpc1] = roads[tmpc1][tmpc2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化dis、team_sum和cnt</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为肯定要收集初始点的队伍，所以可以先都加上初始点队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果起点可直达某点，则通路数记为1，否则记为0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">dis[i] = roads[c1][i], team_sum[i] = team_num[c1], cnt[i] = team_sum[i] == INF ? <span class="number">0</span> : <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//起点到起点距离已确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">vis[c1] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//循环直至到c2的最短路被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!vis[c2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//找到未被确定最短路的城市中路径最短的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">min_dis = INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; dis[i] &lt; min_dis)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">min_dis = dis[i], cur_c = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//标明起点到该城市最短距离已确定，并加上该城市具有的队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">vis[cur_c] = <span class="literal">true</span>, team_sum[cur_c] += team_num[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断由此城市到其它城市会不会更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//若当前所选城市能到达某城市i且未被确定</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (roads[cur_c][i] &lt; INF &amp;&amp; !vis[i])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i更近</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (tmp = dis[cur_c] + roads[cur_c][i], dis[i] &gt; tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改从起点到i的最短距离和路径数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">dis[i] = tmp, cnt[i] = cnt[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改以最小距离到达i可获得的队伍数为以最小距离到当前城市可获得的队伍数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">team_sum[i] = team_sum[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到某城市i距离相同</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dis[i] == tmp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果是当前城市到目的城市距离与原先相同则通路数加当前城市最短路径数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">cnt[i] += cnt[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果从当前城市到目的城市可获得的队伍数更多则修改之</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">team_sum[i] = team_sum[i] &gt; team_sum[cur_c] ? team_sum[i] : team_sum[cur_c];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; cnt[c2] &lt;&lt; <span class="string">' '</span> &lt;&lt; team_sum[c2];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1002 A+B for Polynomials</title>
    <link href="http://mechanicalmind.cn/posts/3b6e04ed.html"/>
    <id>http://mechanicalmind.cn/posts/3b6e04ed.html</id>
    <published>2020-01-17T13:08:50.000Z</published>
    <updated>2020-01-17T13:08:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>多项式求和。</center><a id="more"></a><p>This time, you are supposed to find A+B where A and B are two <strong>polynomials（多项式）</strong>.</p><p>Input Specification:</p><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p><p><span class="math display">\[K\space N_1\space a_{N_1}\space N_2\space a_{N_2}\space ...\space N_K\space a_{N_K}\]</span></p><p>where K is the number of nonzero terms in the polynomial, <span class="math inline">\(N_i\)</span> and <span class="math inline">\(a_{N_​i}(i=1,2,⋯,K)\)</span> are the <strong>exponents（指数）</strong> and <strong>coefficients（系数）</strong>, respectively. It is given that <span class="math inline">\(1≤K≤10，0≤N_K&lt;⋯&lt;N_2&lt;N_1≤1000\)</span>.</p><p>Output Specification:</p><p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2 1 2.4 0 3.2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">2 2 1.5 1 0.5</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">3 2 1.5 1 2.9 0 3.2</span></pre></td></tr></table></figure><p>主要的难点是有个坑，系数加完为0的情况。加句判断就好了。用map很方便，然而这个是<span class="math inline">\(0≤N_K&lt;⋯&lt;N_2&lt;N_1≤1000\)</span>，也就是按key的大小倒序排列，写完查了下才知道有<code>reverse_iterator</code>这个东西。</p><p>另外输出格式控制，<code>setprecision(n)</code>指定输出的浮点数的最长有效数字的个数，一开始当成小数点后位数用了，贡献了几次WA。正确的做法是加一句<code>fixed</code>才是指定小数点后的位数。作用范围到下一个<code>setprecision(n)</code>，因为只对浮点数生效所以不需要因为中间要输出的整型指数修改，设置一次即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXK 12</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> k, tmpe;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt; m;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;::iterator i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (k--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; tmpe &gt;&gt; tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">m.insert(make_pair(tmpe, tmpc));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (k--)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; tmpe &gt;&gt; tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">i = m.find(tmpe);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m.end() == i)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">m.insert(make_pair(tmpe, tmpc));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i-&gt;second + tmpc != <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">i-&gt;second += tmpc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">m.erase(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">1</span>) &lt;&lt; m.size();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="comment">i = m.end();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">for (--i; i != m.begin(); --i)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">cout &lt;&lt; ' ' &lt;&lt; i-&gt;first &lt;&lt; ' ' &lt;&lt; i-&gt;second;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">cout &lt;&lt; ' ' &lt;&lt; i-&gt;first &lt;&lt; ' ' &lt;&lt; i-&gt;second;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;::reverse_iterator ri = m.rbegin(); ri != m.rend(); ++ri)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ri-&gt;second)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; ri-&gt;first &lt;&lt; <span class="string">' '</span> &lt;&lt; ri-&gt;second;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>使用注释掉的部分最后一个用例会报段错误。所以遇到倒序还是用<code>reverse_iterator</code>吧。</p><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
多项式求和。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>PAT (Advanced Level) Practice 1001 A+B Format</title>
    <link href="http://mechanicalmind.cn/posts/d9519229.html"/>
    <id>http://mechanicalmind.cn/posts/d9519229.html</id>
    <published>2020-01-16T14:42:07.000Z</published>
    <updated>2020-01-16T14:42:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>求a+b的值并进行千分位分割。</center><a id="more"></a><p>Calculate a+b and output the sum in standard format -- that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p><p>Input Specification:</p><p>Each input file contains one test case. Each case contains a pair of integers a and b where <span class="math inline">\(−10^6≤a,b≤10^6\)</span>. The numbers are separated by a space.</p><p>Output Specification:</p><p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p><p>Sample Input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-1000000 9</span></pre></td></tr></table></figure><p>Sample Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-999,991</span></pre></td></tr></table></figure><p>相加简单，题目中说数据范围是正负百万的量级，而int的范围远大于此，所以使用int即可，也无需担心溢出；主要要考虑的是格式化。其实格式化也不难，这题是只有整数的输入，不用考虑小数点，所以想法是先转为string，再从后往前每三位加一个逗号（同时注意判断带负号的情况）。不过一想，相比C，C++其实更加接近Python，这么基础的功能应该在标准输入输出流或stl中实现了，遂谷歌了一下，发现在locale库中确实提供了国际化的输出方案。例如，在中文环境下的默认输出格式即是题中要求的格式。可以通过如下方式设置中文（Chinese Simplied）输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">locale <span class="title">chs</span><span class="params">(<span class="string">"chs"</span>)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>.imbue(chs);</span></pre></td></tr></table></figure><p>然而这么设置之后在自己机器上跑了一下却报错：<code>locale::facet::_S_create_c_locale name not valid</code>。似乎是因为我的电脑并未配置中文环境。这哪行哦，鬼知道OJ的服务器配置的啥环境。继续百度，发现除了像刚才一样根据名字拷贝一个设定好的locale对象外，还可以构造自定义格式的locale对象，例如，查阅locale的源代码，发现有一句：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Facet</span>&gt; <span class="title">locale</span>(<span class="title">const</span> <span class="title">locale</span>&amp; <span class="title">other</span>, <span class="title">Facet</span>* _<span class="title">f</span>);</span></span></pre></td></tr></table></figure><p>即，这个构造函数将复制构造一个locale对象other，并使用由_f指定的facet——facet似乎是locale库中的一个概念，类似偏好或策略的意思。故，可以派生定义一个Facet，然后通过这个locale对象使用它。因此可以：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">my_numpunct</span> :</span> numpunct&lt;<span class="keyword">char</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">do_grouping</span><span class="params">()</span> <span class="keyword">const</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"\3"</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function">locale <span class="title">loc</span><span class="params">(<span class="built_in">cout</span>.getloc(), <span class="keyword">new</span> my_numpunct)</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span>.imbue(loc);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; a + b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>其中<code>getloc()</code>获取当前程序所处的环境，然后修改原本的<code>numpunt</code>类中的<code>do_grouping()</code>为三个数一组，其默认的分隔符就是逗号。</p><p>AC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
求a+b的值并进行千分位分割。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="基础算法" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
      <category term="PAT" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/"/>
    
      <category term="甲级" scheme="http://mechanicalmind.cn/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/PAT/%E7%94%B2%E7%BA%A7/"/>
    
    
      <category term="PAT甲级" scheme="http://mechanicalmind.cn/tags/PAT%E7%94%B2%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GithubPages部署静态博客</title>
    <link href="http://mechanicalmind.cn/posts/7840277d.html"/>
    <id>http://mechanicalmind.cn/posts/7840277d.html</id>
    <published>2020-01-10T07:08:59.000Z</published>
    <updated>2020-01-11T14:13:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>博客基本配置全攻略。</center><a id="more"></a><h1 id="环境">环境</h1><ul><li>Manjaro Linux 18.1.5</li><li>Hexo 4.0.0</li><li>NexT.Pisces 7.6.0</li><li>git 2.24.1</li><li>npm 6.13.6</li><li>node 13.2.0</li></ul><h1 id="配置hexo">配置Hexo</h1><h2 id="基础依赖">基础依赖</h2><p>hexo依赖于git和node.js。</p><p>manjaro自带git，可<code>git</code>查看详情。</p><p>hexo官方建议使用node.js的管理工具nvm安装node.js（nvm是管理node.js的版本的工具，npm是node.js管理它的包的工具）。尝试了官方<code>https://github.com/nvm-sh/nvm</code>给出的<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v.xx.xx.xx/install.sh | bash</code>（xx为当前版本号）命令，访问会被拒绝。经测试可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; <span class="built_in">cd</span> ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</span></pre></td></tr></table></figure><p>命令安装，可以看出这里是把它装到了<sub>/.nvm下。完成后在<code>~/.bash_profile</code></sub>~【更新：<code>~/.bashrc</code>下（否则重启终端后需要<code>source ~/.bash_profile</code>，不然会提示没有<code>npm</code>这个命令。官方教程说<code>~/.bashrc</code>, <code>~/.zshrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>都可以】中添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span></pre></td></tr></table></figure><p>注意地址与安装地址相匹配。最后一行是淘宝镜像源，根据需求添加，也可在调用<code>npm</code>时<code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install node</code>。保存后<code>source ~/.bash_profile</code>即可使用<code>nvm</code>和<code>node</code>命令。</p><p>然后使用NVM安装node.js，只需<code>nvm install node</code>，这样<code>npm</code>也可以使用了。</p><p>进行一下设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> user 0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> unsafe-perm <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span></pre></td></tr></table></figure><p>不设置前两个的话会报<code>Permission denied</code>，进度条卡在最开始不动，最后一个是镜像源。至此可以使用<code>npm</code>命令下载node包。</p><h2 id="安装与初始化">安装与初始化</h2><p><code>npm install -g hexo-cli</code>，可使用<code>hexo -v</code>查看安装结果。</p><p>从github上下载网页的代码<code>hexo init &lt;folder&gt;</code>后在<code>&lt;folder&gt;/</code>安装所需的依赖<code>npm install</code>，之后<code>hexo -s</code>就可以看到网页了。考虑使用<code>~/blog</code>作为文件夹。</p><h1 id="如何撰写文章">如何撰写文章</h1><p>在Hexo目录下<code>hexo new [类型] &lt;&quot;博客名&quot;&gt;</code>，类型缺省时为新建一篇博客<code>post</code>（另两种是新建页面<code>page</code>和新建草稿<code>draft</code>）。这其实就是将模板文件<code>blog/scaffolds/</code>对应类型的内容复制过来并重命名为<code>博客名.md</code>。默认<code>post</code>新建博客类型的模板为以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><p>其中前两项生成时会自动填写，<code>tags</code>一项的填写格式为<code>tags: [标签1,标签2,...]</code>或个人更喜欢的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">……</span></span></pre></td></tr></table></figure><p>写好文章编辑保存后<code>hexo g</code>即可。运行<code>hexo s</code>可查看。</p><p>但是除这三项信息外通常还希望为文章增加更多标识，因此除默认配置外，有必要添加如下内容：</p><ul><li><code>categories:</code>，分级目录属性。与<code>tags</code>属性不同，其可以划分父子级关系，不过语法是相同的；</li><li><code>&lt;!--more--&gt;</code>，此标签之后的部分将被隐藏，点进去才能看，对NexT很有用。</li><li><code>thumbnail:</code><del>（如果主题支持文章封面），后跟图片链接即可。经测试，使用<code>450*212</code>的图片作为主题“Hueman”的封面可以获得比较好的画质，体积也只有20至30KB。</del> <strong>【之前用的Hueman，现在NexT不支持】</strong> 不过可以在<code>&lt;!--more--&gt;</code>前放，格式更随意，横向两百多像素效果就不错，接着用212吧，嗯，水的华氏温标沸点……算是个整数？</li><li><code>updated: 1578640139000</code>更新日期。</li></ul><p>最终效果如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="bullet">-</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">updated:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">![]()</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;center&gt;&lt;/center&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--more--&gt;</span></span></pre></td></tr></table></figure><p>关于这个updated，并没有找到如何能在<code>hexo g</code>时自动修改……一个相对方便的办法是在VSCode安装插件“Insert Date String”，装好后使用快捷键即可插入符合格式要求的串，不过默认的快捷键与“Markdown All in One”插件整理表格的快捷键冲突，可通过<code>Ctrl+K</code>（此时左下角会提示你输入下一个命令）然后<code>Ctrl+S</code>调出快捷键修改菜单，我将其修改为<code>Ctrl+Shift+Alt+T</code>。</p><p>Hexo的博文默认是以创建时间排序，然而也希望新修改的文章能被放在前面。在站点配置文件中将“index_generator”中“order_by”修改为<code>-updated</code>即可。</p><p><em><strong>【！注意！】</strong></em> 任何行内式中不要出现两个同方向大括号连用的情况！否则会报<code>Nunjucks Error</code>，要空格分开！</p><h1 id="站点的配置与站点相关插件的安装">站点的配置与站点相关插件的安装</h1><p>在<code>blog/</code>有一<code>_config.yml</code>文件，其保存有站点相关的设置。当此配置文件与主题的配置文件冲突时，此配置文件将覆盖主题的配置文件。</p><h2 id="基本配置">基本配置</h2><p>开头是Site模块：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标题，会显示在浏览器标签栏上</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">描述</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">keywords:</span> <span class="string">网站关键字，给搜索引擎看的，感觉没什么用的亚子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">作者，对于NexT主题会显示在页脚</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">语言（简中：zh-CN；不同主题不同，例如NexT中似乎叫zh-Hans）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">timezone:</span> <span class="string">网站时区，默认使用电脑的无需改动</span></span></pre></td></tr></table></figure><p>我的博客使用的Site模块如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Mech_Mind's</span> <span class="string">blog</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">Proletoj</span> <span class="string">el</span> <span class="string">ĉiuj</span> <span class="string">landoj,</span> <span class="string">unuiĝu!</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">敲键盘</span> <span class="string">按快门</span> <span class="string">巡星空</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">keywords:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span> <span class="string">Mechanical_Mind</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">timezone:</span></span></pre></td></tr></table></figure><p>剩下的似乎不是太用改，例如URL模块似乎是当网站放在子目录下时用的等等。</p><h2 id="博文压缩">博文压缩</h2><p>hexo的文章是<code>.md</code>经过swig转换成的html，生成的html中的空格和注释会影响JS的性能，<del>可在<code>blog/</code>安装hexo自带的neat插件<code>npm install hexo-neat --save</code>进行压缩。安装插件后在站点配置文件中添加：</del><strong>【更新】neat突然会报错了，怀疑是因为最新版本的NexT使用了不支持的JavaScript语法导致。现将压缩工具更换为gulp。</strong></p><p>可在<code>blog/</code>安装gulp插件<code>npm install gulp -g</code>和<code>npm install gulp gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify-es gulp-imagemin del gulp-minify-inline-json --save</code>，并在<code>~/blog</code>新增<code>gulpfile.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify-es'</span>).default;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">'hexo'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minifyInlineJSON = <span class="built_in">require</span>(<span class="string">'gulp-minify-inline-json'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> del([<span class="string">'public/**/*'</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'generate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">cb</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'generate'</span>, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            watch: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> cb()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        hexo.exit(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> cb(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'deploy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'deploy'</span>, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            watch: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> hexo.exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> hexo.exit(err);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        .pipe(minifycss(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            compatibility: <span class="string">'ie8'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        &#125;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        .pipe(htmlclean())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        .pipe(htmlmin(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            removeComments: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            minifyJS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">            minifyCSS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            minifyURLs: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        &#125;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-img'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/img/**/*'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        .pipe(imagemin([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">            imagemin.gifsicle(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">                interlaced: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            imagemin.jpegtran(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">                progressive: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">            imagemin.optipng(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">                optimizationLevel: <span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">            &#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">            imagemin.svgo(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">                plugins: [&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">                    removeViewBox: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">                &#125;, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">                    cleanupIDs: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">                &#125;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">            &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        ]))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public/img'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">        .pipe(uglify())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minifyInlineJSON'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        .pipe(minifyInlineJSON())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'compress'</span>, gulp.series(<span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>, <span class="string">'minify-img'</span>, <span class="string">'minify-js'</span>, <span class="string">'minifyInlineJSON'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'default'</span>, gulp.series(<span class="string">'clean'</span>, <span class="string">'generate'</span>, <span class="string">'compress'</span>, <span class="string">'deploy'</span>));</span></pre></td></tr></table></figure><p>这个方法在网上可以找到许多资料，以上应该是截至20年前最新的，来自<span class="citation" data-cites="萌樱">[@萌樱]</span>(https://moesakura.world/archives/hexo-gulp/)，我使用时对应的各包版本是：</p><ul><li>gulp@4.0.2</li><li>gulp-imagemin@6.2.0</li><li>del@5.1.0</li><li>gulp-htmlmin@5.0.1</li><li>gulp-clean-css@4.2.0</li><li>gulp-htmlclean@2.7.22</li><li>gulp-minify-inline-json@1.3.4</li><li>gulp-uglify-es@2.0.0</li></ul><p>安装期间报了一个错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">✖ Error: Command failed: &#x2F;bin&#x2F;sh -c .&#x2F;configure --disable-shared --prefix&#x3D;&quot;&#x2F;home&#x2F;oiljhihai&#x2F;blog&#x2F;node_modules&#x2F;jpegtran-bin&#x2F;vendor&quot; --bindir&#x3D;&quot;&#x2F;home&#x2F;oiljhihai&#x2F;blog&#x2F;node_modules&#x2F;jpegtran-bin&#x2F;vendor&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">configure: error: no nasm (Netwide Assembler) found</span></pre></td></tr></table></figure><p>但没发现有什么影响，暂且忽略。安装好后就可以使用<code>gulp</code>命令替代<code>hexo d</code>命令了，上传的将是压缩后的内容，访问时可以明显感觉到速度的提升。</p><h2 id="博文加密">博文加密</h2><p>对于一些具有一定私密性的博客，可通过安装插件<code>npm install hexo-blog-encrypt --save</code>后在博客配置文件写入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">encrypt:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><p>后在要加密的文章添加<code>password: xxxxx</code>加密。与直接通过js代码加密不同，这种加密方式更难破解，不会出现看下网页源码就知道密码的情况。</p><p>不过还是没啥安全性就是了，毕竟是静态页面。</p><h2 id="链接持久化">链接持久化</h2><p>站点配置文件中有句话叫<code>permalink: :year/:month/:day/:title/</code>，意思是一篇文章的地址是<code>public/posts/年/月/日/文章名</code>，这一方面产生了很多目录，一方面一旦文章名字改变，其链接也将被改变，显然是不行的。因此需要进行链接持久化。有个插件可以做到这一点，它是将文章的建立时间的哈希值作为文件名直接放在<code>public/posts/</code>，显然一篇文章的建立时间是不会变的。</p><p><code>npm install hexo-abbrlink --save</code>以安装此插件，并将站点配置文件中有关“permalink”的两行修改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># permalink: :year/:month/:day/:title/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># permalink_defaults:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">abbrlink:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span></pre></td></tr></table></figure><h2 id="看板娘">看板娘</h2><p>可以使用 Live 2D 为博客增添一个 2D 角色。</p><p>首先检查<code>package.json</code>里是否已安装<code>&quot;hexo-helper-live2d&quot;</code>，有的话可以先<code>npm uninstall hexo-helper-live2d</code>，官方称“THIS PACKAGE IS DEPRECATED BECAUSE IT WON'T ADD DEPENDENCIES ON YOUR PRODUCTION ENVIRONMENT”。</p><p>安装<code>npm install --save hexo-helper-live2d</code>后<code>node_moduels/</code>会生成配置文件夹<code>live2d-widget</code>。</p><p><code>https://github.com/xiazeyu/live2d-widget-models.git</code>提供了可用的模型，前缀为<code>live2d-widget-model-haru</code>的模型需要<code>npm install live2d-widget-model-haru</code>支持。</p><p>以一只黑猫的模型为例，<code>npm install live2d-widget-model-hijiki</code>后配置博客站点配置文件<code>_config.yml</code>，添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">model:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span>  <span class="comment">#模板目录，在node_modules里</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">display:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#位置只能调上下和靠左靠右 具体多靠左多靠右不能调</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">width:</span> <span class="number">200</span> <span class="comment">#大小</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">height:</span> <span class="number">290</span> <span class="comment">#上下位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">mobile:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span></pre></td></tr></table></figure><p>即可。这个位置大小是NexT的那个两栏的模式+黑猫我精心调之后觉得最合适的。</p><h1 id="主题的配置与主题相关插件的安装">主题的配置与主题相关插件的安装</h1><h2 id="主题安装">主题安装</h2><p>如果想要换主题，首先找到一个主题，下载可得一个压缩包解压到<code>themes</code>文件夹下即可。注意很多主题同时会有WordPress和Hexo两个版本，不要下错。</p><p>曾经长期使用Landscape（2018年）和Hueman（2019年）两个主题。Landscape作为默认主题，简约大气，自己改一下图片啊配色啊啥的相当不错，但支持的功能略少；Hueman算是杂志风格，支持的功能也很多，但总感觉侧边栏和选项卡功能重复，不够简约，而且一些符号显示会出错，默认的代码块也很丑。目前正在使用最大众化的NexT主题（不过经常看到和别人的博客主题一样也挺不爽的……）。</p><p>该主题仓库位于<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">这里</a>，参照说明安装即可。</p><p>使用主题文件夹下多出的文件夹的名字替换掉博客根目录下的<code>_config.yml</code>中<code>theme</code>项的内容后<code>hexo g</code>即可，注意<code>theme:</code>后应当有一个空格。</p><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">这里</a>是一份较早前版本的参考文档，具有一定参考性，但已有部分设置与最新版本有偏差。</p><h2 id="基本配置-1">基本配置</h2><p>在NexT较老的版本中，仅能通过修改<code>next/_config.yml</code>文件进行设置，7.2.0版本之后已可以通过外挂用户配置文件进行设置，这是更加符合马克思主义关于人类历史发展规律的认识、三个代表重要思想和科学发展观的配置方式。仅需在<code>blog/source/</code>新建文件夹<code>_data</code>，并在其中新建<code>next.yml</code>即可。当<code>next/_config.yml</code>中<code>override:</code>项值为<code>false</code>时，在<code>next.yml</code>中进行配置即可覆盖<code>next/_config.yml</code>中的项。</p><p>需要设置的项主要有：</p><p>修改风格项<code>Schemes</code>，在文件中添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes #########################################################################################</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Mist</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Pisces</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Gemini</span></span></pre></td></tr></table></figure><p>为侧栏增加标签页和分类页，在文件中添加（即将中的相关内容复制过来，把标签和分类两行取注）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu ############################################################################################</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># External url should start with http:// or https://</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#about: /about/ || user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span></pre></td></tr></table></figure><p>显示当前浏览进度<code>scrollpercent</code>置为true。</p><p>启用本地搜索只需<code>npm install hexo-generator-searchdb --save</code>并设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><p>添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure><p>设置头像只需简单修改<code>Sidebar Avatar</code>字段，这里头像指的是有侧栏的主题中侧栏里显示的，不是指网站logo。</p><p>设置网站logo只需修改<code>favicon:</code>字段。</p><p>字体配置先找到<code>font</code>并启用，这样就可以自定义字体怎么用而不是通过默认的谷歌字库外链加载默认字体。全局设置使用思源黑体，谷歌和奥多比联合开发，品质保证！<code>code</code>要以等宽字体显示所以需要设置为等宽字体，“Fira Code”虽然样子只能说还行，但提供了极好的连字模式，如果只是想表示<span class="math inline">\(\rightarrow\)</span>之类可以直接代码块<code>-&gt;</code>，非常方便。缺点是会给读者造成误解，管它呢，这破博客本身就是写了自嗨的。可选择字库外链，中科大的地址是<code>//fonts.lug.ustc.edu.cn</code>，速度勉强，偶尔会崩。</p><h2 id="在主题内渲染自定义页面">在主题内渲染自定义页面</h2><p>想要新建一个页面，需要在主题配置文件<code>menu</code>下新增相应的行，这将在博客菜单栏中增加一个指向该页面的按钮。以增加博客的关于页面为例，这个比较简单，将<code>menu</code>下已经有的那一行取注即可，Hexo在工作时会自动生成相关页面。</p><p>对于其它页面，还需做以下工作：</p><p>所有主题内的待渲染页面均以markdown形式放置在<code>source/</code>，如<code>source/_post/</code>存放了所有文章的markdown文件。想要新建一个页面，需要生成一个对应的文件夹，例如通过<code>hexo new page &quot;about&quot;</code>生成关于页面所在的文件夹，这同时会生成一个<code>index.md</code>文件。在其内写入正文即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">正文</span></span></pre></td></tr></table></figure><p>就实现了一个关于页面。</p><p>如果希望这个页面使用自己编写的html而不是渲染markdown，则在<code>index.md</code>中写入一行<code>layout: false</code>，这样Hexo就不会把这个markdown当作markdown渲染：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">自动生成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><p>并新建一<code>index.html</code>，在其中编写网页。此时该网页将被直接插入到hexo生成的页面中，因此具有与主题相同的布局等。</p><p>如果不想要这种效果而是完全自己写网页，则将网页写在此<code>.md</code>中并以<code>`和`</code>包起。</p><h2 id="使用latex语法">使用LaTex语法</h2><p>在主题配置文件中开启“mathjax”一项为<code>true</code>即可使用LaTex语法，某些主题可能还需要将“math”开启，可选择是每个页面都开启还是需要手动开启。</p><p>注意，与正常使用Markdown不同，Hexo不支持LaTex，mathjax并非对<code>.md</code>渲染，而是渲染Hexo生成的Html。因此要确保Hexo不会误将LaTex标记渲染为Html标签。一种方法是在公式块中使用Markdown语法符号时使用转义，更一劳永逸的方法是更换Hexo的渲染引擎。</p><p>默认的渲染引擎“hexo-renderer-marked”可通过<code>npm uninstall hexo-renderer-marked --save</code>卸载，<code>npm install hexo-renderer-pandoc --save</code>，即可更换成另一个表现较好的引擎。与许多人推荐的<code>npm install hexo-renderer-kramed --save</code>相比，该引擎表现更好，无需额外修改一些配置文件。</p><p>【更新】发现无法渲染形如<span class="math inline">\(\xRightarrow[aaa]{bbb}\)</span>的格式。暂时用<span class="math inline">\(\Rightarrow_{aaa}^{bbb} \Rightarrow\)</span>这样子代替。</p><h2 id="增加评论区">增加评论区</h2><p>这个主题还提供了评论功能，有许多可选的服务提供商，不过没什么卵用。国内的要么倒闭了要么需要实名制，国外的又要扶墙……</p><p>【更新】发现了一个比较好用的服务商，棒子的“<a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>”。只需正常步骤注册即可获得一段代码 <del>，用此代码替换掉主题中的<code>layout/comment/livere.ejs</code>中的内容，再在主题配置文件中禁用<code>comment</code>项下的所有评论工具，在<code>comment</code>项外，比如上面一行添加<code>livere_uid: xxxxxxxx</code>，其中<code>xxxxxxx</code>为获取的代码中提供的UID。再将主题中的<code>layout/common/article.ejs</code>中最后一行<code>&lt;%- partial('comment/index') %&gt;</code>改为<code>&lt;%- partial('comment/livere') %&gt;</code>即可。</del> 【更新】划去部分针对Hueman。NexT只需在主题配置文件下找到<code>livere_uid:</code>填上代码中的UID即可。</p><h2 id="使用不蒜子统计访问量">使用“不蒜子”统计访问量</h2><p>添加网站访问数统计只需在<code>xx-analysis</code>项添加从分析网站比如百度分析、谷歌分析等等网站获得的哈希值即可。注册帐号后根据提示操作即可获得一段JS代码，哈希值在其中。但这类网站只能站主登录进去查看自己网站的访问情况，感觉没什么必要。若想在网站中显示访问数，可使用<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a><del>，注意<code>footer</code>文件的位置可能与官方描述有差别。不蒜子自身只提供标签与数字，具体内容由用户编辑。使用官方给出的简易程序对<code>footer</code>做如下修改将统计显示在页脚：</del>【更新】划去部分针对Hueman，Next集成不蒜子，只需调整<code>busuanzi_count</code>项即可。</p><p>然而网站访问次数时显示时不显示，而且不显示的时候是只显示一个分割访问人数和人次的竖杠，人数和人次的图标和数目都不显示，所以这不是不蒜子服务器的原因而是插件的原因，但是为啥有时插件加载得出来有时又加载不出来就很奇怪。另外每篇文章的显示永远显示不出来，连竖杠都没有，就很奇怪。</p><p>不蒜子不需要安装插件，官方说它只有两行代码，但是我愣是没找到这两行代码放在哪里了……</p><h2 id="启用rss">启用RSS</h2><p>开启RSS订阅，首先需要安装RSS插件<code>npm install hexo-generator-feed --save</code>，并在站点配置文件中添加RSS支持：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅支持</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">atom</span>                <span class="comment">#RSS的类型(atom/rss2)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span>            <span class="comment">#文件路径,默认atom.xml/rss2.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>                 <span class="comment">#展示文章的数量,0或false展示全部</span></span></pre></td></tr></table></figure><p>最后将主题配置文件中的<code>rss</code>项改为<code>rss: /atom.xml</code>可开启RSS订阅，可在<code>public/</code>见<code>atom.xml</code>。</p><h2 id="版权声明">版权声明</h2><p>对于最新的NexT版本，在主题配置文件中启用<code>creative_commons</code>即可，默认的协议就很合适。</p><p>这里的链接很奇怪，显示的链接是对的，但点它跳转的时候实际跳转到的地址多了个域名前缀，即重复两遍域名前缀。没找到对应源代码在哪里，不是什么大问题懒得研究了。</p><h2 id="字数统计">字数统计</h2><p>安装统计插件<code>npm install hexo-symbols-count-time --save</code>后修改<code>symbols_count_time:</code>项即可。</p><h1 id="将博客公开展示">将博客公开展示</h1><h2 id="部署至github">部署至GitHub</h2><p>安装hexo的插件：<code>npm install hexo-deployer-git --save</code>。</p><p>在github中建立一个以自己名字命名的仓库，建好后将<code>_config.yml</code>中的`deploy项替换为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">repository:</span> <span class="string">建好仓库后给出的地址中git格式那个复制一下粘过来</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span></pre></td></tr></table></figure><p>首先配置git用户名<code>git config --global user.name &quot;&lt;用户名&gt;&quot;</code>和邮箱<code>git config --global user.email &quot;&lt;邮箱&gt;&quot;</code>，这会生成一个<code>~/gitconfig</code>文件，想改的话直接改这个文件就行。然后获取SHH密钥<code>ssh-keygen -t rsa -C &quot;&lt;前面的邮箱&gt;&quot;</code>，一路回车即可，之后会生成一个<code>~/.ssh</code>文件夹，其中有一个私钥<code>id_rsa</code>和一个公钥<code>id_rsa.pub</code>，将公钥添加至github。从github网页右上角的下拉菜单里的settings中添加。</p><p>如果<code>ssh -T git@github.com</code>后（第一次连接时中间需要yes一下）出现<code>You've successfully authenticated, but GitHub does not provide shell access.</code>说明OK了，使用<code>hexo d</code>即可部署网页。</p><h2 id="域名解析">域名解析</h2><p>终端<code>ping -4 用户名.github.io</code>可以获得GitHub Pages的服务器地址。</p><p>在提供域名解析的网站的控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值为刚才ping得的地址。再设置一条主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>用户名.github.io</code>。这两条分别意味着将购买的域名指向一个IPv4地址和另一个域名。</p><p>在<code>blog/source/</code>建立<code>CNAME</code>文件，写入购买的域名。进入GitHub中的博客仓库。在仓库的Setting-&gt;Custom domain添加域名后保存即可。</p><h2 id="google收录">Google收录</h2><p>Github似乎不让百度爬，想让百度收录恐怕要更换Page服务提供商，懒得弄，所以搜索引擎收录的话就只谷歌好了。</p><p>让搜索引擎收录即提交站点地图“sitemap”，安装插件<code>npm install hexo-generator-sitemap --save</code>并在站点配置文件中写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Plugins:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    - hexo-generator-sitemap</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sitemap:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    path: sitemap.xml</span></pre></td></tr></table></figure><p><code>hexo -g</code>时即可生成，注意站点配置文件中有个url项要改成自己的，sitemap生成的域名将以此项的内容为前缀。</p><p>在谷歌站长工具中验证网站所有性（根据提示使用网域验证即可，验证使用的域名应当与sitemap中的相同，然后提交sitemap即可。</p><p>可以在<code>~/blog/source</code>下新建一<code>robots.txt</code>，指定哪些文件可以被爬取，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># hexo robots.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">User-agent: *</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;archives&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;tags&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;categories&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Allow: &#x2F;about&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;js&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;css&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Disallow: &#x2F;lib&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Sitemap: http:&#x2F;&#x2F;mechanicalmind.cn&#x2F;sitemap.xml</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
博客基本配置全攻略。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="戏法" scheme="http://mechanicalmind.cn/categories/%E6%88%8F%E6%B3%95/"/>
    
    
      <category term="Hexo" scheme="http://mechanicalmind.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>ImageMagick</title>
    <link href="http://mechanicalmind.cn/posts/c8f0beaf.html"/>
    <id>http://mechanicalmind.cn/posts/c8f0beaf.html</id>
    <published>2020-01-05T16:00:00.000Z</published>
    <updated>2020-01-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>查看、编辑位图文件及进行图像格式转换的开源工具集。</center><a id="more"></a><h1 id="安装">安装</h1><p>Manjaro自带。</p><h1 id="使用">使用</h1><p>【用到啥更新啥】</p><ul><li>将文件夹内的图片合并为pdf：<code>convert *.jpg xxx.pdf</code>，相反操作不能直接执行，需要安装其它包；</li><li>类似地，<code>convert xxx.jpg xxx.png</code>可以进行格式转换；</li><li>类似地，<code>convert *.jpg xxx.gif</code>可以合并gif；</li><li>将文件夹内的图片保持比例缩放至指定大小，尽可能填充满，空余部分以白色填充：<code>magick mogrify -resize 200x200 -gravity center -extent 200x200 *.jpg</code>；</li><li>将文件夹内的图片不保持比例缩放至指定大小：<code>magick mogrify -resize 358x441! *.jpg</code>；</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
查看、编辑位图文件及进行图像格式转换的开源工具集。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="快门工" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/"/>
    
      <category term="图片后期" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E5%9B%BE%E7%89%87%E5%90%8E%E6%9C%9F/"/>
    
    
      <category term="ImageMagick" scheme="http://mechanicalmind.cn/tags/ImageMagick/"/>
    
  </entry>
  
  <entry>
    <title>连接数据库增删改查的练习</title>
    <link href="http://mechanicalmind.cn/posts/60671db2.html"/>
    <id>http://mechanicalmind.cn/posts/60671db2.html</id>
    <published>2020-01-05T16:00:00.000Z</published>
    <updated>2020-01-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>JSP+Servlet+MySQL实现图书管理系统。</center><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">String path = request.getContextPath();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;My JSP 'add.jsp' starting page&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&lt;!--</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  &lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  &lt;center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">  &lt;h1&gt;添加书籍&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  &lt;form action=<span class="string">"Servlet?action=add"</span> method=<span class="string">"post"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;编号：&lt;input name=<span class="string">"id"</span> /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;名字：&lt;input name=<span class="string">"name"</span> /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;备注：&lt;input name=<span class="string">"info"</span> /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;input id="sub" type="submit" value="添加"&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  &lt;/form&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;&lt;a href="index.jsp"&gt;[返回主界面]&lt;/a&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">  &lt;/center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">  &lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">index</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">String path = request.getContextPath();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;My JSP 'index.jsp' starting page&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&lt;!--</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">  &lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">  &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">  &lt;center&gt;&lt;div id=<span class="string">"wel"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">  &lt;h1&gt;欢迎&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;&lt;a href="search.jsp"&gt;查看书籍&lt;/a&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;&lt;a href="add.jsp"&gt;添加书籍&lt;/a&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">  &lt;/div&gt;&lt;/center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">  &lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">search</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"com.mechmind.model.*"</span> %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">"courseDao"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.mechmind.dao.DAO"</span> /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">String path = request.getContextPath();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;My JSP 'search.jsp' starting page&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">&lt;!--</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">  &lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">  &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">   &lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">  request.setCharacterEncoding(<span class="string">"utf-8"</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">  response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">  %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">  &lt;center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">  &lt;h1&gt;查看书籍&lt;/h1&gt;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">  &lt;table border=<span class="string">"1px"</span> cellspacing=<span class="string">"0px"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">  &lt;tr&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">  &lt;td&gt;书号&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">  &lt;td&gt;名称&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">  &lt;td&gt;简介&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">  &lt;td&gt;更新&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">  &lt;td&gt;删除&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">  &lt;/tr&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">  &lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> cutpage = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">final</span> <span class="keyword">int</span> cntPrePage = <span class="number">7</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (request.getParameter(<span class="string">"cutpage"</span>) != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">  cutpage = Integer.parseInt(request.getParameter(<span class="string">"cutpage"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">  String[] color = &#123;<span class="string">"yellow"</span>, <span class="string">"green"</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">  ArrayList&lt;Book&gt; list = (ArrayList&lt;Book&gt;)courseDao.getAllBook();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> count = list.size();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> prepage = cutpage - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> nxtpage = cutpage + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (prepage &lt;= <span class="number">0</span>) prepage = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (cutpage * cntPrePage &gt;= count) nxtpage = cutpage;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (list != <span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = (cutpage-<span class="number">1</span>)*cntPrePage; i &lt; cutpage*cntPrePage &amp;&amp; i &lt; count; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">  Book book = list.get(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">  %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">&lt;tr bgcolor=<span class="string">"&lt;%=color[i%2] %&gt;"</span> &gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;%=book.getId()%&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;%=book.getName() %&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;%=book.getInfo() %&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;a href="update.jsp?id=&lt;%=book.getId() %&gt;"&gt;更新&lt;/a&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;a href="Servlet?action=delete&amp;id=&lt;%=book.getId() %&gt;"&gt;删除&lt;/a&gt;&lt;/td&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line">&lt;/tr&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">  &lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">  %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">  &lt;/table&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line">  &lt;a href="search.jsp?cutpage=&lt;%=prepage%&gt;"&gt;[上一页]&lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">  &amp;nbsp;(&lt;%=cutpage %&gt;/&lt;%=(count-<span class="number">1</span>)/cntPrePage+<span class="number">1</span> %&gt;)&amp;nbsp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">  &lt;a href="search.jsp?cutpage=&lt;%=nxtpage%&gt;"&gt;[下一页]&lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">  &lt;a href="index.jsp"&gt;[返回主页]&lt;/a&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line">  &lt;/center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">156</span></pre></td><td class="code"><pre><span class="line">  &lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">157</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">158</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">159</span></pre></td><td class="code"><pre><span class="line">update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">160</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">161</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*,com.mechmind.model.Book"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">162</span></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">"DAO"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.mechmind.dao.DAO"</span> /&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">163</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">164</span></pre></td><td class="code"><pre><span class="line">String path = request.getContextPath();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">165</span></pre></td><td class="code"><pre><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">166</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">167</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">168</span></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">169</span></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">170</span></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">171</span></pre></td><td class="code"><pre><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">172</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">173</span></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;My JSP 'update.jsp' starting page&lt;/title&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">174</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">175</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">176</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">177</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">178</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">179</span></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">180</span></pre></td><td class="code"><pre><span class="line">&lt;!--</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">181</span></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">182</span></pre></td><td class="code"><pre><span class="line">--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">183</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">184</span></pre></td><td class="code"><pre><span class="line">  &lt;/head&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">185</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">186</span></pre></td><td class="code"><pre><span class="line">  &lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">187</span></pre></td><td class="code"><pre><span class="line">    &lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">188</span></pre></td><td class="code"><pre><span class="line">  request.setCharacterEncoding(<span class="string">"utf-8"</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">189</span></pre></td><td class="code"><pre><span class="line">  response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">190</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> id = Integer.parseInt(request.getParameter(<span class="string">"id"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">191</span></pre></td><td class="code"><pre><span class="line">  Book book = DAO.getById(id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">192</span></pre></td><td class="code"><pre><span class="line">   %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">193</span></pre></td><td class="code"><pre><span class="line">  &lt;center&gt;&lt;form action=<span class="string">"Servlet?action=update&amp;id=&lt;%=id %&gt;"</span> method=<span class="string">"post"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">194</span></pre></td><td class="code"><pre><span class="line">  &lt;h1&gt;&lt;label&gt;修改编号 &lt;%=id %&gt;的书籍&lt;/label&gt;&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">195</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">196</span></pre></td><td class="code"><pre><span class="line">  &lt;label&gt;书名：&lt;/label&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">197</span></pre></td><td class="code"><pre><span class="line">  &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span> value=<span class="string">"&lt;%=book.getName() %&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">198</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">199</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">200</span></pre></td><td class="code"><pre><span class="line">  &lt;label&gt;简介：&lt;/label&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">201</span></pre></td><td class="code"><pre><span class="line">  &lt;input type=<span class="string">"text"</span> name=<span class="string">"info"</span> value=<span class="string">"&lt;%=book.getInfo() %&gt;"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">202</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">203</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">204</span></pre></td><td class="code"><pre><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"更新"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">205</span></pre></td><td class="code"><pre><span class="line">  &lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">206</span></pre></td><td class="code"><pre><span class="line">  &lt;/form&gt;&lt;/center&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">207</span></pre></td><td class="code"><pre><span class="line">     </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">208</span></pre></td><td class="code"><pre><span class="line">  &lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">209</span></pre></td><td class="code"><pre><span class="line">&lt;/html&gt;</span></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">servlet</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mechmind.controller;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.mechmind.dao.DAO;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.mechmind.model.Book;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">7078893322239794049L</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * Constructor of the object.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Servlet</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * Destruction of the servlet. &lt;br&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>.destroy(); <span class="comment">// Just puts "destroy" string in log</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Put your code here</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * The doGet method of the servlet. &lt;br&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to get.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">doPost(request,response);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * The doPost method of the servlet. &lt;br&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to post.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">String action = request.getParameter(<span class="string">"action"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">DAO dao = <span class="keyword">new</span> DAO();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">"delete"</span>.equals(action)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">dao.delete(Integer.parseInt(request.getParameter(<span class="string">"id"</span>)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">  response.sendRedirect(<span class="string">"search.jsp"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"update"</span>.equals(action)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">Book book = <span class="keyword">new</span> Book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">book.setId(Integer.parseInt(request.getParameter(<span class="string">"id"</span>)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">book.setName(request.getParameter(<span class="string">"name"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">book.setInfo(request.getParameter(<span class="string">"info"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">dao.update(book);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">  response.sendRedirect(<span class="string">"search.jsp"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"add"</span>.equals(action)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">Book book = <span class="keyword">new</span> Book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">  book.setInfo(request.getParameter(<span class="string">"info"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">  book.setName(request.getParameter(<span class="string">"name"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">  book.setId(Integer.parseInt(request.getParameter(<span class="string">"id"</span>)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">dao.add(book);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">"search.jsp"</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Put your code here</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">dao</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mechmind.dao;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.mechmind.model.Book;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.mechmind.util.DButil;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DAO</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Book&gt; <span class="title">getAllBook</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Book&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">ResultSet rs = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">conn = DButil.getConnection();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"select * from books"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">rs = pstmt.executeQuery();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (rs != <span class="keyword">null</span> &amp;&amp; rs.next()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">Book book = <span class="keyword">new</span> Book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">book.setId(rs.getInt(<span class="number">1</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">book.setInfo(rs.getString(<span class="number">3</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">book.setName(rs.getString(<span class="number">2</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">list.add(book);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pstmt != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line">rs.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> list;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Book book)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">156</span></pre></td><td class="code"><pre><span class="line">conn = DButil.getConnection();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">157</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"insert into books(id, name, info) values(?, ?, ?)"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">158</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">159</span></pre></td><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">160</span></pre></td><td class="code"><pre><span class="line">pstmt.setInt(<span class="number">1</span>, book.getId());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">161</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">2</span>, book.getName());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">162</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">3</span>, book.getInfo());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">163</span></pre></td><td class="code"><pre><span class="line">pstmt.executeUpdate();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">164</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">165</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">166</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">167</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pstmt != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">168</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">169</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">170</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">171</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">172</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">173</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">174</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">175</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">176</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">177</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">178</span></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">179</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">180</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">181</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">182</span></pre></td><td class="code"><pre><span class="line">conn = DButil.getConnection();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">183</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"delete from books where id=?"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">184</span></pre></td><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">185</span></pre></td><td class="code"><pre><span class="line">pstmt.setInt(<span class="number">1</span>, id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">186</span></pre></td><td class="code"><pre><span class="line">pstmt.executeUpdate();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">187</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">188</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">189</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">190</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pstmt != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">191</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">192</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">193</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">194</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">195</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">196</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">197</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">198</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">199</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">200</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Book book)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">201</span></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">202</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">203</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">204</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">205</span></pre></td><td class="code"><pre><span class="line">conn = DButil.getConnection();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">206</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"update books set name=?,info=? where id=?"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">207</span></pre></td><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">208</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">1</span>, book.getName());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">209</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">2</span>, book.getInfo());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">210</span></pre></td><td class="code"><pre><span class="line">pstmt.setInt(<span class="number">3</span>, book.getId());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">211</span></pre></td><td class="code"><pre><span class="line">pstmt.executeUpdate();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">212</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">213</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">214</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">215</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pstmt != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">216</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">217</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">218</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">219</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">220</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">221</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">222</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">223</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">224</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">225</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Book <span class="title">getById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">226</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">227</span></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">228</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">229</span></pre></td><td class="code"><pre><span class="line">ResultSet rs = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">230</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">231</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">232</span></pre></td><td class="code"><pre><span class="line">conn = DButil.getConnection();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">233</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"select * from books where id = ?"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">234</span></pre></td><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">235</span></pre></td><td class="code"><pre><span class="line">pstmt.setInt(<span class="number">1</span>, id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">236</span></pre></td><td class="code"><pre><span class="line">rs = pstmt.executeQuery();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">237</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span> &amp;&amp; rs.next()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">238</span></pre></td><td class="code"><pre><span class="line">Book book = <span class="keyword">new</span> Book();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">239</span></pre></td><td class="code"><pre><span class="line">book.setId(rs.getInt(<span class="number">1</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">240</span></pre></td><td class="code"><pre><span class="line">book.setName(rs.getString(<span class="number">2</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">241</span></pre></td><td class="code"><pre><span class="line">book.setInfo(rs.getString(<span class="number">3</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">242</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> book;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">243</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">244</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">245</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">246</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">247</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pstmt != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">248</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">249</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">250</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">251</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">252</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">253</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">254</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">255</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">256</span></pre></td><td class="code"><pre><span class="line">rs.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">257</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">258</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">259</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">260</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">261</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">262</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">263</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">264</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">265</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">266</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">267</span></pre></td><td class="code"><pre><span class="line">model</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">268</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">269</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mechmind.model;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">270</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">271</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">272</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">273</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">274</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String info;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">275</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">276</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">277</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">278</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">279</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">280</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">281</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">282</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">283</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">284</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">285</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">286</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">287</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">288</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">289</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> info;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">290</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">291</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(String info)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">292</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.info = info;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">293</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">294</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">295</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">296</span></pre></td><td class="code"><pre><span class="line">util</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">297</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">298</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mechmind.util;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">299</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">300</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">301</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">302</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">303</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">304</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DButil</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">305</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> String JDBC_DRIVER = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">306</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> String DB_URL = <span class="string">"jdbc:mysql://localhost:3306/bookdb?useSSL=false&amp;serverTimezone=UTC"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">307</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"root"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">308</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> String PASS = <span class="string">"root"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">309</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">310</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection conn;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">311</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">312</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">313</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">314</span></pre></td><td class="code"><pre><span class="line">Class.forName(JDBC_DRIVER);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">315</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (Exception ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">316</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">317</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">318</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">319</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">320</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">321</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (conn == <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">322</span></pre></td><td class="code"><pre><span class="line">conn = DriverManager.getConnection(DB_URL, USER, PASS);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">323</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> conn;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">324</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">325</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> conn;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">326</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">327</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.mechmind.controller.Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span>  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span>  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
JSP+Servlet+MySQL实现图书管理系统。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://mechanicalmind.cn/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="JSP" scheme="http://mechanicalmind.cn/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/"/>
    
    
      <category term="JSP" scheme="http://mechanicalmind.cn/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>组成原理・肆・I/O系统</title>
    <link href="http://mechanicalmind.cn/posts/ca604afd.html"/>
    <id>http://mechanicalmind.cn/posts/ca604afd.html</id>
    <published>2020-01-02T09:12:58.000Z</published>
    <updated>2020-01-02T09:12:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>组成原理・叁・控制器系统</title>
    <link href="http://mechanicalmind.cn/posts/fbf3fb9c.html"/>
    <id>http://mechanicalmind.cn/posts/fbf3fb9c.html</id>
    <published>2020-01-02T09:12:32.000Z</published>
    <updated>2020-01-02T09:12:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="机器指令的基本格式">机器指令的基本格式</h1><p>最简单的指令包括操作码和地址码两个字段。其长度可以固定，称为定长指令字结构，其结构简单、译码时间短但平均比较长且不宜扩展；也可以因指令功能不同而异，称为可变长指令字结构，其结构灵活、冗余少且易于扩展，但取指令时可能需要多次访存，使不同指令的执行时间不一致。不管怎么样，方便起见，指令长度应为机器字长（通常也是字节）的整数倍。长度等于机器字长的指令称为单字长指令，等于两个字长的叫双字长，还有更多的也有半长的。</p><h2 id="地址码">地址码</h2><p>对于有两个操作数的指令，通常需要指出两个操作数的地址、运算结果的地址和下条指令的地址。四地址指令就是给出以上所有，但通常不给出下条指令的地址，而是由PC计数器给出，即三地址指令。中小型和微型机中还会省略结果的存放地址，因为源操作数经常运算过后就不需要了，即二地址指令，其中两个操作数均为存储器地址的叫存储器-存储器型（S-S）、均为寄存器地址的叫寄存器-寄存器型（R-R）、一个存储器一个寄存器的叫寄存器-存储器型（R-S）。</p><p>另外还有一地址指令如自加自减和零地址指令如NOP。</p><p>地址码可以给出操作数本身，叫立即寻址；也可以给出操作数的地址，叫直接寻址；也可以给出操作数的地址的地址，叫间接寻址，这使得短地址码也可以访问大的存储空间；也可以有一个变址寄存器存一个地址，与指令中的数相加得到有效地址；还有很多其它的，为区分地址码采用的寻址方式，地址码中还需要专门分出来几位指明寻址方式。</p><p>例如某机器字长24位，有15个24位通用寄存器，采用R-S型单字长指令格式，共60条指令，使用了5种寻址方式。则60条指令需要占用6个位作为操作码，剩下18位可以放地址码；由于是R-S型，所以第一个操作数肯定是15个寄存器之一，4个位即可表示，剩下14位可以放第二个操作数的地址；有五种寻址方式，需要用3个位来指明，所以还剩11个位放具体的地址。所以直接寻址范围为2<sup>11=2K；间接寻址的话就可以先跳到2K范围内的某个存储器空间，这个存储器空间的24个位都是可以放地址的，范围位2</sup>24=16M。如果是给出立即数的话，也是有11位可用，采用补码整数方式共计2K个数即-1024~1023。</p><h2 id="操作码">操作码</h2><p>根据操作码部分的长度是否相同分定长和变长编码。假如某机器字长16位，采用单字长指令，四位为操作码，剩下为地址码，则只能表示16种指令，而有些单零地址、一地址和二地址指令的地址码区域被浪费。因此通常采用变长编码。</p><p>首先前四位0000-1110可用于表示15种三地址指令，CPU遇到1111开头就知道哦这是二或一或零地址指令；同理11110000<sub>11111110可用于表示15种二地址指令，CPU遇到11111111就知道哦这是一或零地址指令；同理111111110000</sub>111111111110可表示15种一地址指令，CPU遇到111111111111就知道哦这是零地址指令；最后可有16种零地址指令。</p><p>实际上未必四种指令都是十五六条，例如现在只需要11条三地址指令，但需要72条二地址指令、64条零地址指令，怎么编码？首先11条三地址指令可占用前四位0000~1010的情况，而遇到其它的五种情况CPU知道哦这是二或一或零地址指令；这五种情况乘上接下来四位可表示的16种情况一共可以表示80条二地址指令，用去72种情况，还有8种情况；同理八成十六得可表示128条一地址指令，但这里要为64条零地址指令留出64/16=4种情况，还可以再编124条一地址指令。</p><h1 id="控制器">控制器</h1><p>控制器一般至少有如下寄存器：</p><ul><li>指令寄存器IR；</li><li>程序计数器PC；</li><li>累加寄存器AC；</li><li>程序状态寄存器PSR；</li><li>地址寄存器MAR，存放要访问的主存的地址；</li><li>数据缓冲寄存器MDR或MBR。</li></ul><p>指令的执行分取指令（从存储器中取出要执行的指令）、分析指令（转为控制信号、有操作数的取出来等）和执行指令几个步骤。</p><p>控制器分组合逻辑型和存储逻辑型及两者结合型，组合逻辑型即数电中学的那种电路，超复杂，速度快，用在巨型机上；存储逻辑型控制器称为微程序控制器，采用微程序控制方式，即将一条机器指令分成几条微指令执行，若干条微指令组成一段微程序，对应一条机器指令，在设计CPU时，根据指令系统的需要，事先编制好各段微程序，且将它们存入一个专用存储器，执行指令时，从控制存储器中找到相应的微程序段，逐次取出微指令，送入微指令寄存器，译码后产生所需微命令，控制各步操作完成，显然，速度更慢，但易于更改和扩充。</p><p>即一条指令的执行是执行一系列微指令的过程。</p><p>例如对加法指令<code>ADD (R1),R0</code>，可能经历了如下微命令：</p><ol type="1"><li><code>(PC)-&gt;MAR</code>，将要读的主存的地址保存到地址寄存器；</li><li><code>READ</code>，读主存；</li><li><code>PC-&gt;Y</code></li><li>`(M-&gt;MDR)-&gt;IR</li><li>`(Y)+1-&gt;Z</li><li>`(Z)-&gt;PC</li><li>`R1-&gt;MAR</li><li>`READ</li><li>`(M-&gt;MDR)-&gt;Y</li><li>`(Y)+(R0)-&gt;Z</li><li>`(Z)-&gt;R0</li></ol><p>很多微指令因为执行时间、电路本身的并行性质等可能最后先后顺序就不对乱掉了，因此需要控制其执行时间，主要有以下控制方式：</p><ul><li>同步控制：使用时序信号控制，但会出现短的指令跑完了下个信号还没到的情况，浪费时间；</li><li>异步控制：一条指令执行完后给一个应答信号才启动下一个指令，电路设计复杂；</li><li>联合控制：部件内部使用同步方式（内部各指令用时差不多），部件间异步。</li></ul><p>其中时序信号实际上分为多级：</p><ul><li>机器周期：将指令执行的各个阶段分为取指周期、取数周期、执行周期、中断周期等一堆机器周期，每到一个周期将该周期对应的触发器置1，其它置0，对应触发器为1的周期内的微指令才可以执行；</li><li>节拍：一个机器周期分若干节拍，一个节拍控制一个基本操作；</li><li>脉冲：一个节拍内有若干脉冲，用于基本操作内部的寄存器复位等操作。</li></ul><h1 id="微指令的设计与编译">微指令的设计与编译</h1><ul><li>直接控制法：微指令操作控制字段的每个位表示一个微命令，为1说明执行，不需要译码，但是是最长的；</li><li>最短编码法：微指令操作控制字段的每种情况表示一个微命令，最短，但需要译码，且一个控制字段只能发出一条微命令，浪费了电路的并行性质；</li><li>字段直接编码法：以上两种方法的组合，分若干字段，每个字段内采用最短编码法，字段间采用直接控制的思路；</li><li>还有字段简介编码法等很多。</li></ul><p>例如给出8个微指令，均由一些微命令构成，这些微命令是并行执行的，为它们设计控制字段格式：</p><table><thead><tr class="header"><th>微指令</th><th>相关的微命令们</th></tr></thead><tbody><tr class="odd"><td>I1</td><td>abcde</td></tr><tr class="even"><td>I2</td><td>adfg</td></tr><tr class="odd"><td>I3</td><td>bh</td></tr><tr class="even"><td>I4</td><td>c</td></tr><tr class="odd"><td>I5</td><td>cegi</td></tr><tr class="even"><td>I6</td><td>ahj</td></tr><tr class="odd"><td>I7</td><td>cdh</td></tr><tr class="even"><td>I8</td><td>abi</td></tr></tbody></table><p>现在分析微命令间的关系。设计指令格式时应当使会并行的微命令放在不同字段而不会并行的放在不同字段，每个字段要有一个状态表示该字段无命令。分析各微命令的并行情况：</p><table><thead><tr class="header"><th></th><th>a</th><th>b</th><th>c</th><th>d</th><th>e</th><th>f</th><th>g</th><th>h</th><th>i</th><th>j</th></tr></thead><tbody><tr class="odd"><td>I1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td></td><td></td><td></td><td></td><td></td></tr><tr class="even"><td>I2</td><td>1</td><td></td><td></td><td>1</td><td></td><td>1</td><td>1</td><td></td><td></td><td></td></tr><tr class="odd"><td>I3</td><td></td><td>1</td><td></td><td></td><td></td><td></td><td></td><td>1</td><td></td><td></td></tr><tr class="even"><td>I4</td><td></td><td></td><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr class="odd"><td>I5</td><td></td><td></td><td>1</td><td></td><td>1</td><td></td><td>1</td><td></td><td>1</td><td></td></tr><tr class="even"><td>I6</td><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td>1</td><td></td><td>1</td></tr><tr class="odd"><td>I7</td><td></td><td></td><td>1</td><td>1</td><td></td><td></td><td></td><td>1</td><td></td><td></td></tr><tr class="even"><td>I8</td><td>1</td><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td>1</td><td></td></tr></tbody></table><ul><li>a，I1里和bcde并行、I2还和fg、I6和hj、I8和i，故和所有微命令都能并行，应当独占一段，这个段有一位，0表示无微命令，1表示a；</li><li>b，可以和fgj放在一起；</li><li>c，可以和fj放在一起；</li><li>d，可以和ij放在一起；</li><li>e，可以和fhij放在一起；</li><li>f，可以和bcehij放在一起；</li><li>g，可以和bhj放在一起；</li><li>h，可以和efgi放在一起；</li><li>i，可以和dfhj放在一起；</li><li>j，可以和bcdefgi放在一起。</li></ul><p>对2个或3个一组的可以放一起的，一共需要表示3个或四个状态，需要两个位，压缩了0个或1个位；对4<sub>7个一组可以放一起的，一共需要表示5</sub>8个状态，需要3个位，压缩1~4个位。不过找不到这么多放一起的啊，所以努力找3个放一起的。</p><p>观察除a之外的，发现g可以和bhj放一起、i可以和dfhj放一起、j可以和bcdefgi放一起，所以gij可以互相放一起，便把它们放一起；另外efh也有类似关系。</p><p>所以可考虑将微指令分为6段，前四段均为一位，分别对应a、b、c和d，后面两端各有两位，分别对应gij和efh。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>组成原理・贰・存储器系统</title>
    <link href="http://mechanicalmind.cn/posts/22f73e60.html"/>
    <id>http://mechanicalmind.cn/posts/22f73e60.html</id>
    <published>2020-01-02T09:12:23.000Z</published>
    <updated>2020-01-02T09:12:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="简介">简介</h1><p>按与CPU的连接方式分主存、辅存和高速缓冲存储器，按存取方式分RAM、ROM、SAM、DAM和CAM等。容量、速度、价格是人们购买时主要关心的参数。</p><p>半导体存储单位电路有如下两种：</p><ul><li>静态RAM（Static RAM，SRAM），其中每个存储单位由一个由多个MOS管构成的触发器构成。性能稳定。断电数据会丢失。</li><li>动态RAM（Dynamic RAM，DRAM），其中每个存储单位由一个MOS管和一个电容构成，提高了存储密度，但电容会很快漏电，需要经常刷新。断电数据会丢失。</li></ul><p>其中，动态RAM主要有集中式刷新（一段时间内禁止访问，所有单元统一刷新）、分散式刷新（每个存取周期后刷新一行单元，在CPU看来就是存取周期变为两倍，但不会出现集中式刷新的“死区”）和最常用的异步式刷新（每多个存取周期后刷新一行单元，不会像分散式那样过于频繁地刷新）。</p><h1 id="主存">主存</h1><p>大量存储单位组成存储阵列，并与外围电路（地址译码与驱动电路、读写放大电路及时序控制电路等）集成在一块硅片上，构成一个存储器组件。一般存储单位的组织形式有字片式（单译码）和位片式（双译码）。</p><p>只使用一个地址译码器的称为单译码方式：</p><p>每行构成一个存储单元，对单译码，有多少个存储单元就需要多少个译码驱动电路。</p><p>使用两个地址译码器的称为双译码方式：</p><p>存储单元同时在行和列上排列，因此只需<code>2*sqrt(存储单元数)</code>个译码驱动电路。</p><p>内存条由多个存储器组件组成。比方说，CPU有A11-A0共12根地址引线，D7-D0共8根数据总线，想要用Intel2114芯片（<code>1K*4bit</code>）组成4KB的内存，就需要4*8/4=8片芯片。</p><p>4K即2^12，所以12根地址线刚刚好。</p><p>注意这里芯片每单元4bit，而CPU有8根地址总线，所以存储器应当是每单元8bit，因此需要对芯片进行位扩展，每两个芯片构成一个适合CPU的单元，8片芯片分为四组，即每组1KB。方法是并联2个芯片的地址线、选片信号线和读写控制线，将各芯片数据线分别接到CPU数据总线对应位。</p><p>将所有组读写控制线并联，接到CPU对应引脚；所有组同一位置的地址线并联，接在CPU地址线，例如这里每组1K即2^10个单元，即每组有10根地址线，每组对应位置的地址线并联接在A0<sub>A9。将每组并联过的选片信号线分别接在选片译码器上，一共4组即2^2，所以选片译码器需要两个引脚，接在A10</sub>A11上。将所有组的8个位的同位置数据输入输出引线并联，接在D0~D7。</p><p><img src="" /></p><p>实际使用时，用选片地址线选芯片（组），用其余地址引线选单元（字），使用地址总线传输数据。</p><h1 id="辅存">辅存</h1><p>常见的是机械硬盘，由多片磁盘构成，每片的两个面都可以记录信息（上下两个面不用因为没有磁臂），每面分一些同心圆称为<strong>磁道</strong>，每个磁道分几个<strong>扇区</strong>。<code>有效面数*每面磁道数*每道扇区数*每扇区字节数</code>即为<strong>磁盘容量</strong>，找信息时给出<code>磁道号+盘面号+扇区号</code>即可将磁臂移动到对应位置（将磁道号放在前面是为了在例如一个盘面的某磁道写满了的情况时不是移动磁臂去写该盘面下一个磁道而是写下一个盘面的同一磁道，即减少磁臂移动）。扇区是基本访问单位。<strong>磁道密度</strong>即盘面内外径之差除以磁道数，<strong>位密度</strong>即一道的位数除以周长，最外磁道位密度最小最内最大，<strong>数据传输速率</strong>为每道容量乘转速，<strong>平均访问时间</strong>为平均寻道时间加平均旋转时间（转半圈所需毫秒数）加传送一个扇区所需时间。</p><h1 id="高速缓冲存储器">高速缓冲存储器</h1><p>作用如其名。容量小，速度快，编址方式、单元长度等与主存相同，通常是SRAM。常用组织结构有三种：</p><ul><li>直接映像方式：每个主存块固定地只能加载进一个Cache块，电路简单，命中率低。</li><li>全联映像方式：任意主存块可加载进任意Cache块，命中率高但电路较前者复杂。</li><li>组相联映像方式：将Cache分组，每个主存块只能固定地加载进一个组，但可加载进该组的任意Cache块。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>组成原理・壹・运算器系统</title>
    <link href="http://mechanicalmind.cn/posts/8d7323c2.html"/>
    <id>http://mechanicalmind.cn/posts/8d7323c2.html</id>
    <published>2020-01-02T09:12:15.000Z</published>
    <updated>2020-01-02T09:12:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="数据的表示">数据的表示</h1><h2 id="无符号数">无符号数</h2><p>就是没有符号（包括正负号和小数点）的数，容易表示。</p><h2 id="带符号定点数">带符号定点数</h2><p>现实中的带符号数叫真值，电脑里其二进制形式叫机器数。</p><h3 id="原码">原码</h3><p>对于纯小数，约定一串二进制码，第一位为正负号，之后为有效数字，小数点在正负号后、有效数字前，即表示范围为正负零点几几。</p><p>例如，对<code>+0.1010110</code>，原码为<code>01010110</code>；对<code>-0.1010110</code>，原码为<code>11010110</code>。</p><p>只能表示这种数字的计算机叫小数定点机。</p><p>对于整数，约定一串二进制码，第一位为正负号，之后为有效数字，小数点在有效数字最后，即表示范围为正负整数。</p><p>例如，对<code>+1010110</code>，原码为<code>01010110</code>；对<code>-1010110</code>，原码为<code>11010110</code>。</p><p>对8位寄存器来说就是<code>00000000</code>和<code>10000000</code>表示<code>0</code>加上正数<code>2^7-1=127</code>加上负数<code>2^7-1=127</code>的范围。只能表示这种数字的计算机叫整数定点机。</p><p>其中第一位0表示正1表示负。零有两种方式来表示。纯小数不能表示<code>-1</code>，整数不能表示<code>-2^位数</code>。</p><h3 id="补码">补码</h3><p>原码很简单，但我们希望做减法时能使用加法方式以简化电路。</p><p>假如每次运算结果都取模，可以做到这一点。即，在每次运算都取模的时候，减一个数和加模与此数之差是等价的。称这两个数互为<strong>补数</strong>。</p><p>计算机中的每次运算的结果都会自然地被取模，因为溢出时溢出的部分会被丢弃，这等价为一次取模操作。</p><p>例如，在四位寄存器中，<code>1011-1011</code>和<code>1011+0101</code>结果均为<code>0000</code>，即<code>-1011</code>和<code>+0101</code>在模<code>2^4</code>时等价。</p><p>对于正纯小数，补码与原码相同；对于负纯小数，补码为二加真值即真值的有效数字部分取反加一再添上符号位。</p><p>例如，对<code>+0.1010110</code>，补码为<code>01010110</code>；对<code>-0.1010110</code>，补码为<code>10101010</code>。</p><p>对于正整数，补码与原码相同；对于负整数，补码为模加真值即真值取反加一再添上符号位。</p><p>例如，对<code>+1010110</code>，补码为<code>01010110</code>；对<code>-1010110</code>，补码为<code>10101010</code>。</p><p>无论纯小数或纯整数，零只有<code>00000000</code>一种形式，而多出来的<code>10000000</code>在纯小数中表示<code>-1</code>，整数中表示<code>-2^位数</code>。</p><h3 id="反码">反码</h3><p>类似补码，但模比补码的模小一。即：</p><p>对于正纯小数，反码与原码相同；对于负纯小数，反码为二加真值即真值的有效数字部分取反再添上符号位。</p><p>对于正整数，反码与原码相同；对于反整数，补码为模加真值即真值取反再添上符号位。</p><p>无论是纯小数还是整数，零有两种表示方式，<code>00000000</code>和<code>11111111</code>。其表示范围与原码相同。</p><h3 id="移码">移码</h3><p>挖坑。</p><h2 id="浮点数">浮点数</h2><p>浮点数包括正负号（数符）、阶符、阶码和尾数四部分，表示的数字就是<code>数符*尾数*进制^(阶符*阶码)</code>，容易理解。具体一串一定长度的二进制串中哪些位是什么有各种标准，其中尾数的尾数决定精度、阶码的位数决定范围，容易理解。</p><p>例如一台计算机，使用一位数符+5位阶码+6位尾数表示补码浮点数，则+0.110101*2^(+0011)表示为<code>0 00011 110101</code>；<code>-0.111010*2^(+0010)</code>表示为1 00010 000110。</p><p>同一个数有不同的表示方法。例如100.1可表示为0.0010010*2<sup>5或00001001<em>2^-1。为使表示唯一化，规定所有尾数表示按纯小数表示，且使用原码表示时尾数最高位为1或使用补码表示时尾数最高位与符号位相反，这样的话在不丢失信息的前提下都是把有效信息（原码中是1、补码正数是1、补码负数是0）尽可能往高位挪，起到了保持唯一性、保留尽可能多有效数字的作用。所以100.1应当表示为0.1001000</em>2</sup>3。</p><h1 id="数据的校验">数据的校验</h1><h2 id="奇偶校验码">奇偶校验码</h2><p>为数据加一个校验位，存储数据中1的数目的奇偶性，如果有奇数个1则该位为0，否则为1，这样的话<strong>算上这个校验位，这串数据里有奇数个1</strong>，叫奇校验；反过来叫偶校验。</p><p>如果有奇数个位出错，就可以发现。由于通常就算有错也只会有一个位出错，所以很有效。但不能确定位置。</p><h2 id="海明校验码">海明校验码</h2><p>增加奇偶校验位的个数可以提高纠错能力。设有k个位用于奇偶校验，则共表述2<sup>k种状态，除全对状态外，有2</sup>k-1种状态可指示出错位置，故对于一串长度为n的数据，只要2^k-1&gt;n+k就可以在只有一个位出错时找出出错位置，取反即可自动纠正。</p><p>例如，对于一串长7位的数据，<code>2^3-1=7&lt;7+3</code>，<code>2^4-1=15&gt;7+4</code>，故可使用4位奇偶校验码确定出错位置，共计11位。规定位于2的幂次的位置上的位为奇偶校验位，即1、2、4和8，规定每二个及以上校验位共同校验位于为其位数和指示的位的数据。例如，先看由两个校验位校验的数据位：校验位1和校验位2共同校验数据位3，校验位1和校验位4共同校验数据位5，校验位1和校验位8共同校验数据位9，校验位2和校验位4共同校验数据位6，校验位2和校验位8共同校验数据位10，校验位4和校验8就超出下标范围了；再看由三个校验位校验的数据位，校验位1、2、4共同校验数据位7，校验位1、2、8共同校验数据位11，再往后就超了。现在所有数据位都唯一地被某些校验位所校验了。</p><p>以ASCII码中<code>'M'1001101</code>为例：</p><table><thead><tr class="header"><th style="text-align: center;">校1</th><th style="text-align: center;">校2</th><th style="text-align: center;">数3</th><th style="text-align: center;">校4</th><th style="text-align: center;">数5</th><th style="text-align: center;">数6</th><th style="text-align: center;">数7</th><th style="text-align: center;">校8</th><th style="text-align: center;">数9</th><th style="text-align: center;">数10</th><th style="text-align: center;">数11</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td><td style="text-align: center;">1</td><td style="text-align: center;"></td><td style="text-align: center;">0</td><td style="text-align: center;">0</td><td style="text-align: center;">1</td><td style="text-align: center;"></td><td style="text-align: center;">1</td><td style="text-align: center;">0</td><td style="text-align: center;">1</td></tr></tbody></table><p>其中被校验位1所校验的有数据位3、5、9、7和11，分别为1、0、1、1和1，若采用奇校验，校验位1应当为1。被校验位2所校验的有3、6、10、7和11，分别为1、0、0、1和1，若采用奇校验，校验位2应当为0。依此类推可得最终结果为<code>10100011101</code>。</p><p>现在只能应对只有一个错误的情况，扩展的海明校验码，即在海明校验码基础上再加一位单纯的奇偶校验，可检测有两个错误的情况（但此时不知道具体位置）。</p><h2 id="循环冗余校验码crc">循环冗余校验码（CRC）</h2><p>在要发送的二进制串后面附加一个二进制串，使所生成的新串能与某个特定数使用“模2除法”整除。根据除操作后有无余数判断是否出错。</p><p>模2加法即二进制数相加后对二取模：1+1=0，0+1=1，0+0=0，无进位，无借位；类似地，模2减法运算为：1-1=0，0-1=1，1-0=1，0-0=0，无进位，无借位（相当于逻辑异或运算）。</p><p>模二乘除法就是基于此的除法，如1101000除以1011：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">        1111</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     _______</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">1011&#x2F;1101000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     1011</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    -------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      1100</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      1011</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     -------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">       1110</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">       1011</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">      -------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        1010</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        1011</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">       ------</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        0001</span></pre></td></tr></table></figure><p>因为模二减法的特点，即使被减数小于减数也能减。结果是1111余1。</p><p>给定一串数据，例如1101，类似海明校验法地可知需要增加三个位能确定出错位置。现在约定一个特定数作为除数，因为要得到位置需要三个位表示1种正确情况加七种出错情况，所以约定数应为4位，例如为1011，这样余数是三位的。将原数据左移三位并除以约定数得到一个余数，此处结果见上，余数是1，因此如果1101000加上1就刚好可以整除，所以新的编码就是1101001。</p><h1 id="数据的逻辑运算">数据的逻辑运算</h1><h2 id="逻辑移位">逻辑移位</h2><p>逻辑移位即把数据当成无符号数的移位。</p><p>逻辑左移即左移、右侧补零；逻辑右移即右移、左侧补零。</p><h1 id="数据的算术运算">数据的算术运算</h1><h2 id="算术移位">算术移位</h2><p>算术移位即把数据当成带符号数如原码或补码的移位。</p><p>算术左移即左移、右侧补零；算术右移即右移、左侧补充与符号位相同的符号。</p><p>符号位改变说明已将有效位移出。例如对补码来说0011即3左移没问题，变成0110即6，但0110即6左移变成1100即0100即4为出错。</p><h2 id="定点补码加减">定点补码加减</h2><p>两数之和之补码等于两数补码之和，因此运算时正常进行二进制加法运算（包括符号位）即可；两数之差之补码等于被减数之补码与减数相反数之补码之和，因此运算时将减数求补后进行加法运算即可。</p><p>例如定点小数<code>01001</code>即0.1001和<code>00101</code>即0.0101之和，直接相加即可得到<code>01110</code>即0.1110；求差的话00101求补为<code>11011</code>，求和结果为100100，即00100，即0.0100，结果均正确。</p><p>但是补码表示范围有限。例如，定点小数<code>01010</code>即0.1010和<code>01001</code>即0.1001求和，正确结果为1.0011，但实际为<code>10011</code>即-0.1101，这就是因为结果超过了最大正定点小数表示范围0.1111。同理对<code>10011</code>即-0.1101和<code>10101</code>即-0.1011求和，正确结果为-10.1000，但实际为<code>101000</code>即01000即0.1000，也是因为结果超出了最小负定点小数表示范围-1.0000。前者叫正溢出，后者叫负溢出。</p><p>只有两正数或两负数相加时可能产生溢出，故可根据两操作数符号与结果符号对比判断溢出情况。</p><p>另外，溢出时是尾数向符号位进位、符号位向更高位进位（如果有），如果进位情况不同则说明溢出，例如0.1010+0.1001中符号位进位0、尾数最高位进位1，又如-0.11001-0.1011符号位进位1、尾数最高位进位0。</p><p>另一种判断方法是采用变形补码进行运算，这是一种有两个符号位的补码。例如0.1010的变形补码为001010、-0.1011的变形补码为110101等。运算时方法与补码相同，但根据上一段中的原理，如果产生溢出，则两个符号位不同。并且，两符号位不同时，如果高位的符号位为1，则说明结果为负溢出；如果高位的符号位为0，则说明结果为正溢出。</p><h2 id="浮点加减运算">浮点加减运算</h2><p>浮点数小数点不一定在哪里，要先对齐，称为对阶。求阶码之差可判断小数点位置，相等即为对齐了，否则就是没对齐。将阶码小的浮点数的尾数向右移位（阶码小说明小数点更左，例如<code>1*10^-1</code>即000.1和<code>1*10^(-3)</code>即0.001）直到阶码相等（右移一位阶码加一，例如<span class="math inline">\(11\times 10^{-2}\)</span>是00.11，右移一位得到000.1，即<span class="math inline">\(1\times 10^{-1}\)</span>）为止，之所以不把阶码大的浮点数的尾数向左移是因为这样做丢掉的是整数部分最高位，相比丢掉小数部分最低位肯定误差爆炸。</p><p>例如浮点数中的例子<code>0 00011 110101</code>和<code>1 00010 000110</code>，00011-00010=00011+11110=100001=00001，故两者小数点相差一位，将阶码小的即00010右移一位即可，得到<code>0 00011 110101</code>和<code>1 00011 100011</code>（注意补符号位）。</p><p>接下来对数符和尾数部分进行正常求和或差，例如求和时<code>0 110101 + 1 100011=10 011000=0 011000</code>，再把阶码塞进去即0 00011 011000；求差时<code>0 110101 - 1 100011 = 0 110101 + 0 011101 = 1 010010</code>，结果为1 00011 010010。</p><p>注意前面的第一个计算结果不是规格化数，第二个计算两正数相加结果符号位为1，发生溢出。这两种情况叫规格化被破坏，前者叫向右破坏，因为可看作是规格化数右移，此时应左移尾数、减阶码，即上例中将0 00011 011000变为0 00010 110000；后者叫向左破坏，因为是溢出向左进位，此时应右移尾数、加阶码即上例中将1 00011 010010变为0 00100 101001，注意，此处位移结果按变形补码的来。</p><p>对阶和规格化过程中都可能出现导致最右数据丢弃的右移（不会出现导致数据丢弃的左移，因为对阶不左移、规格化左移到刚好数据不丢弃），可以类似十进制中保留有效数字的方法降低误差，例如类似四舍五入的零舍一入法（补码负数先减一再舍）、末位恒置一法（冯・诺依曼法）等，也可以设置一些保护位存储被移出的值，与尾数一同参与运算，根据运算结果决定舍入情况等。</p><p>另外，浮点数的阶码也可能溢出。</p><h1 id="算术逻辑运算部件alu">算术逻辑运算部件（ALU）</h1><p>是运算器的核心，由加法器增加输入控制功能扩展而来。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>组成原理・〇・总论</title>
    <link href="http://mechanicalmind.cn/posts/7d897d14.html"/>
    <id>http://mechanicalmind.cn/posts/7d897d14.html</id>
    <published>2020-01-02T09:09:32.000Z</published>
    <updated>2020-01-02T09:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="冯诺依曼计算机系统">冯・诺依曼计算机系统</h1><p>现今计算机普遍采用由冯・诺依曼提出的结构体系，其要点如下：</p><ul><li>计算机由运算器、存储器、控制器和I/O设备五大部件组成，其中运算器和控制器是最重要的，现在人类技术比较NB了把它俩集成为CPU了；</li><li>使用二进制表示数据和指令；</li><li>采用存储程序方式，即将程序和数据预先准备好载入主存，运行时自动从程序中一条条取出指令执行，这是现今计算机能高速自动运行的基础。</li></ul><p>既然指令和数据都在主存里，计算机是如何区分它们的呢？主要有两个方面：</p><ul><li>时间上，程序运行时，首先进入取指周期，由指定的寄存器如PC给出一个地址，将该地址内的二进制代码当作指令执行。指令分两部分，一部分为操作码，指明要执行的操作，一部分为地址码，指明要操作的数据的地址。经过分析周期后进入执行周期，执行周期内取操作数时将地址内的二进制代码当作数据操作；</li><li>空间上，由PC提供存储单元地址的取出的是指令，由指令地址码部分提供存储单元地址的取出的是操作数。</li></ul><p>如果取出的是指令，送控制器；指令执行周期从内存中取的数据，送运算器（往内存写入的数据也是来自于运算器）。</p><h1 id="总线">总线</h1><p>计算机部件间通过总线传递信息。总线为多个部件共享，多个部件可同时接收总线上的信息，但必须分时地发送信息，否则会冲突。主要分为：</p><ul><li>内部总线：连接CPU内部各寄存器和算术逻辑部件；</li><li>系统总线：连接计算机系统各部件，一般生活中说总线指的就是这玩意，例如常说的PCI和PCIe；系统总线的连接方式有单总线和双总线，单总线就是所有部件都连在系统总线上，如ARM，双总线就是额外用一个存储总线连接CPU和存储器，例如x86；</li><li>外部总线：连接该计算机系统和其它计算机系统或其它非计算机系统的系统的总线。</li></ul><p>还可按照信息传输方向分为单向总线和双向总线。</p><p>总线结构可以减少线路数简化结构，并可减少信息发送部件的负载（因为不用选择线路了？）及方便拓展系统。</p><h1 id="计算机层次结构">计算机层次结构</h1><p>为了为不同层次的用户提供不同级别对计算机系统的抽象，将计算机划分为多个层次。有许多种划分方法，仅介绍如下一种：</p><ul><li>虚机器/软件<ul><li>第六级，应用语言层：由为某个领域专门开发的SDK支持，直接面向该领域开发者；</li><li>第五级，高级语言层：由高级语言编译程序支持，面向高级语言应用程序编写者；</li><li>第四级，汇编语言层：由汇编程序支持，面向汇编语言程序编写者；</li><li>第三级，操作系统层：由OS定义和实现一些软件指令，实现对机器指令的扩充，从这一层开始就和程序员没啥关系了；</li></ul></li><li>实机器/硬件<ul><li>第二级，传统机器语言层：由微程序解释机器指令；</li><li>第一级，微程序机器层：由机器硬件执行微指令；</li><li>第零级，机器语言时序。</li></ul></li></ul><p>例如一个某领域开发者写软件，第五级及以下的计算机系统对他是抽象掉的，他不用了解这些东西，只要会用自己领域的SDK就行了，写完程序（应用语言层代码）后SDK会给他翻译成高级程序语言（高级语言层代码），高级程序语言被编译器翻译成汇编（汇编语言层代码），汇编程序将汇编代码翻译为指令（操作系统层代码），操作系统将操作系统提供的的广义的那部分指令解释为传统的机器语言（传统机器语言层代码），再由微程序解释为微指令（微程序机器层代码），就可以由硬件执行了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>操作系统・壹・处理机管理</title>
    <link href="http://mechanicalmind.cn/posts/4c0c7f47.html"/>
    <id>http://mechanicalmind.cn/posts/4c0c7f47.html</id>
    <published>2019-12-24T07:35:40.000Z</published>
    <updated>2019-12-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>包括进程、死锁和作业调度相关内容。</center><a id="more"></a><h1 id="顺序与并发执行的描述">顺序与并发执行的描述</h1><p>说一个程序是顺序执行的，意味着其每个程序段是依次执行的，且每个程序段内的所有指令也是依次执行的。这种程序运行时<strong>独占全机资源</strong>，<strong>执行结果不受外界影响</strong>。</p><p>使用前驱图描述程序执行的先后顺序。前驱图是一个有向图，节点为一个程序或语句（或进程），如果一个节点必须在另一个节点执行后才能执行，就从后者引一条边至前者。称后者是前者的<strong>前驱</strong>。前驱图应当是无环的。</p><p>如果两节点间没有前驱关系（直接或间接），它们就可以并发地执行。</p><p>并发执行的程序为了满足同时段内执行的内容没有前驱关系，进程间可能要相互等一等之类，会有执行的“<strong>间断性</strong>”；由于是多个程序并发地在跑，因此全机资源不是被独占的，一个程序跑的时候可能修改了另一个程序的数据之类，<strong>失去了封闭性</strong>，也意味着可能两次输入相同的运行的输出不一样，出现<strong>不可再现的、与时间有关的错误</strong>。</p><h1 id="进程的基本概念">进程的基本概念</h1><p>传统意义上，进程是程序在一个数据集上的运行过程，是系统进行资源分配和调度的一个独立单位。其实体由程序段、相关的数据段和进程控制块（PCB）构成。</p><p>与程序不同，程序只是一堆死的代码，是静态的；而进程是“运行过程”，讲的是个<strong>动态的</strong>概念（就是因为动态所以才会出不可再现的错误，一般意义上不会认为程序会出不可再现的错误对吧）。这是它最本质的特征。</p><p>多个进程互相<strong>独立</strong>地运行、分配资源、接受调度，共同存在于内存中，且可以<strong>并发</strong>执行。但执行是<strong>异步</strong>的。</p><p>如果一个进程万事俱备只欠处理机资源，就叫它是<strong>就绪（Ready）</strong>的；给了处理机资源跑起来了，就叫它在<strong>执行（Running）</strong>，规定的时间片结束后回到就绪态等待下一次进程调度；前面说了并发执行有间断性，一个进程等的时候就叫<strong>阻塞（Blocked）</strong>，一般是执行态时进入阻塞态，此时处理机去执行其它进程，这个进程等好后进入就绪态。</p><p>除以上三种基本状态外，进程在创建时叫创建状态，此时申请并填写PCB、分配资源，完成后进入就绪状态；终止时叫终止状态，善后处理，清零PCB之类；还有种挂起状态。</p><h1 id="os对进程的描述">OS对进程的描述</h1><p>OS使用进程控制块记录一个进程。包含如下信息：</p><ul><li>进程标识符，包括编号（OS根据这个使用进程，其它都是给用户看的）、名字、对应父进程子进程的标识和用户标识（谁拥有此进程）等；</li><li>处理机状态，保存各寄存器的内容，中断后好恢复；</li><li>进程调度信息，进程当前状态、优先级和其它信息，例如现在阻塞了为啥阻塞的、进程等了多久、总共跑了多久之类；</li><li>进程控制信息，程序和数据的地址、有关进程同步和通信的信息、该进程需要哪些资源已经分配了哪些资源、指向PCB中下一个进程的指针。</li></ul><p>一般OS用链接方式或索引方式组织PCB。链接方式即弄三个队列，分别对应就绪的、阻塞的和空白的PCB，还有一个指针指向正在执行的进程；索引就是用表来实现。</p><h1 id="进程控制">进程控制</h1><p>进程控制包括创建进程、终止进程和进程状态转换 是进程管理最基本的功能，由OS内核完成。</p><h2 id="创建进程create">创建进程（Create）</h2><p>一个进程创建另一个进程，有如下情况：</p><ul><li>用户登录，用户登录OS时OS内核为该用户创建一个进程，插入就绪队列；</li><li>作业调度，多道批处理里面该调度个新程序开始跑时OS内核就给它创建一个进程；</li><li>提供服务，用户程序要求某种请求时OS内核为这个服务创建一个进程，这样这个服务和用户程序也是可以并发的，比方说Word，并不是说打印的时候就不能操作了；</li><li>应用请求，应用程序可以请求创建进程。</li></ul><p>Unix中把创建进程的进程称为父进程，被创建的进程称为子进程，子进程继承父进程的资源，销毁父进程时子进程一并销毁。Windows中不存在此概念，每个进程有一个句柄决定它可以控制哪些其它进程。</p><p>创建进程时，OS调用进程创建原语创建进程。首先申请空白PCB，然后为新进程分配内存等，然后初始化PCB，最后插入就绪队列。</p><h2 id="终止进程">终止进程（）</h2><p>一个进程被终止，有如下情况：</p><ul><li>正常结束，程序里专门有条指令调用系统中端告诉OS我好了；</li><li>异常，程序试图越界访问资源、调用非法指令、运行或等待超时、算术运算错误等情况；</li><li>外界干预，例如发生系统死锁，就只好由OS或操作者看看能不能救，或父进程被销毁于是子进程被株连，或父进程清理门户。</li></ul><p>终止进程时，OS调用进程终止原语终止进程。首先找到它，确定状态，要是还在执行就先停掉并置调度标志为真待会下一个就绪的进程好跑；看看有没有子进程，有的话一并终止；归还资源，移出队列。</p><h2 id="进程的阻塞与唤醒blockwakeup">进程的阻塞与唤醒（block/wakeup）</h2><p>一个进程被阻塞，有如下情况：</p><ul><li>请求系统服务，但系统暂时无法提供；</li><li>启动某种操作，某种必须做完才能继续的操作，例如等待I/O；</li><li>等数据之类；</li><li>无事可做。</li></ul><p>阻塞进程时，进程主动调用阻塞原语把自己阻塞。首先停止执行，接下来修改PCB状态为阻塞，并将PCB插入阻塞队列，保存现场，重分配处理机。</p><p>唤醒进程时，将之移出阻塞队列，修改PCB状态为就绪，插入就绪队列。</p><h2 id="进程的挂起与激活suspendactive">进程的挂起与激活（suspend/active）</h2><p>挂起进程时，调用挂起原语。首先检查其状态。若处于活动就绪或执行状态，则将其转为静止就绪；若处于活动阻塞,则将其转为静止阻塞。将PCB放到特定内存区域，如果之前该进程在执行，就重新调度。</p><p>激活进程时，将进程从外存调入内存，检查其状态，若是静止就绪，则改为活动就绪；若是静止阻塞，则改为活动阻塞。若采用的是抢占式调度策略，则还应检查被激活就绪进程的优先级，若其优先级比先行执行进程高，则应将处理机分配给被激活进程。</p><h1 id="进程同步">进程同步</h1><p>为避免异步，需要进程同步。</p><p>多个进程间可能存在制约关系导致异步。对于多个进程的共享资源，如打印机，各进程应当互斥地访问，一般必须向系统提出申请，由OS分配，叫间接制约；对于不许经过系统直接就能访问的资源的制约关系，如两个进程都需用到某个缓冲区，叫直接制约。</p><p>在一段时间内只能由一个进程访问的资源（硬或软）叫临界资源。访问临界资源的循环进程描述如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">while(true)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    非临界区，其它代码；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    进入区，检查资源是否正被访问；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    临界区，访问临界资源；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    退出区，将正被访问标志恢复至未被访问；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    非临界区，其它代码。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>一个同步机制，应当保证临界资源未被访问时可以被访问，正被访问时无法被访问；要求访问临界资源的进程在有限时间内可以访问得到，进程等待访问临界区时处理机给其它进程用（否则叫“忙等”）。</p><h2 id="常用进程同步机制">常用进程同步机制</h2><h3 id="硬件同步机制">硬件同步机制</h3><p>利用特殊的硬件指令解决临界区问题。</p><ul><li>关中断</li><li>利用Test-and-Set指令</li><li>利用 Swap指令</li></ul><p>缺陷：</p><ul><li>忙等</li><li>难于解决进程同步问题</li></ul><h3 id="信号量机制">信号量机制</h3><p>Dijkstra提出了整型信号量机制，后来慢慢发展，先是记录型信号量，然后AND型信号量，再然后信号量集，卓有成效且应用广泛。</p><p>最初信号量是一个整型<code>S</code>，表示资源数目。被用一个就减一，释放一个就加一。当有程序想访问资源时就死循环地看还剩几个资源，直到资源数大于零时跳出循环使用资源。这里如果得不到资源无法让出处理机给其它进程用，会导致忙等。</p><p>记录（即结构体）型信号量由一个代表临界资源数目的整型变量<code>value</code>和该资源上阻塞的队列（链表）指针<code>L</code>构成。<code>value</code>和整型信号量中的<code>S</code>意义相同。当发现资源数小于等于零时，不是一直死循环地看资源数直到大于零，而是调用阻塞原语自我阻塞，并把自己插入至<code>L</code>，<code>value</code>自减。也就是说，<code>value</code>为负数时，其相反数为被阻塞的进程数。释放资源时如果发现<code>value</code>小于零，就唤醒一个阻塞队列中的进程。</p><p>把资源的请求和释放写成函数，大致如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Semaphore</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> value;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    PCB* <span class="built_in">list</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;S;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(S)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    S.value = S.value – <span class="number">1</span> ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>  ( S.value &lt; <span class="number">0</span> ) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        block (S.<span class="built_in">list</span>) ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/* 让权等待 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">signal</span> <span class="params">(S)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    S.value = S.value + <span class="number">1</span> ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>  ( S.value &lt;= <span class="number">0</span> )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        wakeup (S.<span class="built_in">list</span>) ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*唤醒第一个等待的进程 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>若有<code>n</code>个进程<code>m</code>个资源，信号量的可能范围就是<code>m~(m-n)</code>。</p><p>利用信号量机制实现进程互斥地访问临界资源，只需将<code>S.value</code>初值设为1，将<code>wait(S)</code>作为进入区、<code>signal(S)</code>作为退出区。</p><p>除了利用信号量机制控制资源的访问、实现进程互斥外，还可以用来实现前驱关系。</p><h3 id="管程机制">管程机制</h3><p>略。</p><h2 id="经典进程同步问题">经典进程同步问题</h2><h3 id="生产者-消费者问题">生产者-消费者问题</h3><p>生产者生产东西，放到缓冲区，消费者从缓冲区拿东西。生产者放东西到缓冲区前会先看一眼，如果满了，就不放；消费者拿东西前也会看一眼，如果没了，就不拿。</p><p>看起来没什么问题。写成程序就有问题了。</p><p>用一个<code>cnt</code>记录缓冲区的东西数量，生产者或消费者先读<code>cnt</code>的值，再改变它。改变<code>cnt</code>值的过程通常是如下的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV 存储器,寄存器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">INC 寄存器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOV 寄存器,存储器</span></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">MOV 存储器,寄存器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">DEC 寄存器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">MOV 寄存器,存储器</span></pre></td></tr></table></figure><p>如果第二个MOV前插入了其它指令比如另一个进程的第一个MOV指令，就会出错。</p><p>比如初值为1时，如果并发地执行这两坨指令，有可能得到0或1或2三种结果。</p><p>回到生产者-消费者问题，由简单到复杂有多种情况：</p><ul><li>一个生产者、一个消费者、缓冲区可以放一个东西的问题；</li><li>一个生产者、一个消费者、缓冲区可以放若干东西的问题；</li><li>若干生产者、若干消费者、缓冲区可以放若干东西的问题。</li></ul><p>对于最简单的情况，为同步双方设置各自的信号量，初值为其初始状态可用的资源数；增加进入区和退出区，同步双方任一进程在进入临界区之前，应先对自己的信号量执行<code>wait(&lt;己方信号量&gt;)</code>操作，以测试是否有自己可用的资源，若有资源可用，则进入临界区，否则阻塞；同步双方任一进程离开临界区后，应对对方的信号量执行<code>signal(&lt;对方信号量&gt;)</code>操作，以通知对方已有资源可用：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">item buffer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">semaphore empty,full;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为1，可以向缓冲池放一个产品</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">empty.value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">full.value=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Producer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        produce an item in nextp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//测试能不能放东西</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        wait(empty);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//nextp放入buffer</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        buffer=nextp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的消费者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        signal(full);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Consumer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//测试能不能拿东西</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        wait(full);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//buffer内的东西拿到nextc</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        nextc=buffer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的生产者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        signal(empty);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        consume the item in nextc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><p>若缓冲区可放k个东西，只需将生产者的初值记为k即可。另外为生产者和消费者分别提供一个下标指定其访问的缓冲区位置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">item buffer[n];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">semaphore empty,full;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为k，可以向缓冲池放k个产品</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">empty.value=k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">full.value=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前下标都是0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> in=<span class="number">0</span>,out=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Producer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        produce an item in nextp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//测试能不能放东西</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        wait(empty);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//nextp放入buffer[in]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        buffer[in]=nextp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//计算下一个位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        in=(in+<span class="number">1</span>)%k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的消费者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        signal(full);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Consumer</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//测试能不能拿东西</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        wait(full); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//buffer[out]内的东西拿到nextc</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        nextc=buffer[out];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//计算下一个位置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        out=(out+<span class="number">1</span>)%k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//通知被阻塞的生产者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        signal(empty);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        consume the item in nextc;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><p>对于最复杂的情况，连下标的<code>in</code>和<code>out</code>都会出现冲突了，因为不止一个生产者、不止一个消费者，所以访问<code>in</code>和<code>out</code>也需要。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">item buffer[n] ;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//in和out的信号量、生产者和消费者的信号量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">semaphore mutex,empty,full;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前下标都是0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> in = <span class="number">0</span>，out = <span class="number">0</span> ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个下标最初信号量为1，可以被一个生产者或消费者访问</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">mutex.value = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者最初信号量为k，可以向缓冲池放k个产品</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">empty.value=k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//消费者最初信号量为0，没有东西可拿</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">full.value = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">produceri</span><span class="params">()</span><span class="comment">//(i=1,2,…,k)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        item nextp ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (TRUE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#123;   ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            produce an item in nextp；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            wait(empty)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            wait(mutex)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            buffer[in] = nextp ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            in = (in + <span class="number">1</span>)% n ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            signal(mutex)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            signal(full)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    process consumerj()<span class="comment">//(j=1,2,…,m)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#123;  item nextc ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (TRUE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            wait(full)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            wait(mutex)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            nextc = buffer[out] ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            out = (out + <span class="number">1</span>)% n ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            signal(mutex)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            signal(empty)；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            consume the item in nextc ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><h3 id="哲学家就餐问题">哲学家就餐问题</h3><p>有5个哲学家共用一张圆桌，分别坐在周围的5张椅子上，在圆桌上有5个碗和5只筷子（每人面前一只碗，左右手边各一双筷子），他们的生活方式是交替地进行思考和进餐。平时，每个哲学家进行思考，饥饿时便试图拿起其左右最靠近他的筷子，只有在他拿到两只筷子时才能进餐。进餐完毕，放下筷子继续思考。</p><p>5个筷子用五个信号量表示即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>]；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">0</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">1</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">2</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">3</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">4</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process  <span class="title">Pi</span><span class="params">()</span><span class="comment">//(i = 0，1，2，3，4)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//拿起左边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            wait(chopstick[i])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//拿起右边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            wait(chopstick[(i + <span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            eating；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//放下左边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            signal(chopstick[i])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//放下右边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            signal(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            thinking；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><p>问题在于如果所有人都拿着左边筷子，就陷入了死锁。</p><p>解决办法法很多：</p><ul><li>至多允许4个哲学家同时取左边的筷子，这样能至少保证一个哲学家能就餐，并在用毕后释放他用过的两只筷子，从而使更多的哲学家能够进餐；</li><li>仅当哲学家左右两只筷子均可用时（AND信号量机制），才允许他拿起筷子进餐；</li><li>规定奇数号哲学家先拿左边筷子，然后再拿右边筷子；而偶数号哲学家先拿右边筷子，然后再拿左边筷子；</li><li>规定每个哲学家先拿序号小的筷子——按序号分配。</li></ul><p>以第一种方法为例，再加一个关于左边筷子能否取用的信号量即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>],S；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">0</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">1</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">2</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">3</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">chopstick[<span class="number">4</span>].value=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">S.value=<span class="number">4</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process  <span class="title">Pi</span><span class="params">()</span><span class="comment">//(i = 0，1，2，3，4)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//能否拿筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            wait(S);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//拿起左边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            wait(chopstick[i])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//拿起右边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            wait(chopstick[(i + <span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            eating；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//放下左边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            signal(chopstick[i])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//放下右边筷子</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            signal(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>])；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//释放能否拿筷子标记</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            signal(S);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            thinking；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><h3 id="读者-写者问题">读者-写者问题</h3><p>一个数据文件或记录，可被多个进程共享，我们把只要求读该文件的进程称为“读者进程”，其他进程称为“写者进程”。显然，只要有一个写者进程正访问文件，就不能有其它进程访问。</p><p>因此可设置一个初值为1的信号量，表示当前允许的写者数，同时用一个普通变量记录读者数。由于可能同时有多个进程尝试访问读者数，还需为这个访问设置一个信号量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">semaphore Wmutex，Rmutex;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Wmutex.value=Rmutex.value=<span class="number">1</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Readeri</span><span class="params">()</span><span class="comment">//(i = 1，2，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//等写者信号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter – <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Writerj</span><span class="params">()</span><span class="comment">//(j=1，2，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        Writing;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><p>问题在于，如果一个读者正在读时来了写者，然后读者还没读完，又来一个读者。现在假设第一个读者读完了，但计数器显示仍有读者，于是写者标记未被释放，新读者反而早于更早来的写者访问文件。一直如此则写者将被饿死。</p><p>考虑再增加一个信号量，如果有写者到达，则晚于此写者的读者将无法访问：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">semaphore Wmutex,Rmutex,w;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Wmutex.value=Rmutex.value=w.value=<span class="number">1</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Readeri</span><span class="params">()</span><span class="comment">//(i = 1，2，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//有写者的话之后的w就不能访问了</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        wait(w);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//等写者信号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        signal(w);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        …</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter – <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Writerj</span><span class="params">()</span><span class="comment">//(j=1，2，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//有写者的话之后的w就不能访问了</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        wait(w);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        Writing;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        signal(w);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><p>这个算法解决了读者读完后除非已经没有读者否则被唤醒的一定是读者的问题。现在在写者写完后被唤醒的不一定是读者或写者，随缘。如果想要被唤醒的一定是写者，可以：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Wmutex用于写进程互斥访问Wcounter</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Wsem用于封锁有写者时封锁后续写进程</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">semaphore Wmutex=Wsem= <span class="number">1</span>；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Rmutex用于读进程互斥访问Rcounter</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Rsem1用于在有写者时封锁后续第一个读者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Rsem2用于在Rsem1起效后封锁后续所有读者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">semaphore Rmutex=Rsem1=Rsem2=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Rcounter = Wconuter = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">cobegin</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function">process <span class="title">Reader_i</span> <span class="params">(i = <span class="number">1</span>，<span class="number">2</span>，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//是否是写者后的读者后的读者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        wait(Rsem2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//是否是写者后的读者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        wait(Rsem1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//是否有人正在访问计数器</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果当前仅有自己一个读者在访问文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//则判断是否有写者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            wait(Wsem);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        signal(Rsem1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        signal(Rsem2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        Reading;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        wait(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        Rcounter = Rcounter - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//如果当前仅有自己一个读者在访问文件并且刚刚关上</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//则判断是否有写者</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Rcounter==<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            signal(Wsem);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        signal(Rmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125; <span class="function">process <span class="title">Writer_j</span> <span class="params">(j=<span class="number">1</span>，<span class="number">2</span>，…)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="function">    </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        Wcounter++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Wcounter==<span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        wait(Rsem1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        wait(Wsem);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        Writing( );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        signal(Wsem);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        wait(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        Wcounter=Wcounter<span class="number">-1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Wcounter==<span class="number">0</span>) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            signal(Rsem1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        signal(Wmutex);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">coend</span></pre></td></tr></table></figure><h1 id="进程通信">进程通信</h1><p>信号量机制效率太低了，且对用户不透明，因此需要设计允许透明地传送大量信息的方式，主要有：</p><ul><li>共享存储器通信，类似生产者消费者问题中的缓冲区，但效率更高；</li><li>管道通信（共享文件）；</li><li>消息传递通信，以上两个只适合单机，这个还适合网络通信：<ul><li>直接通信方式</li><li>间接通信方式——信箱通信</li></ul></li><li>客户机-服务器系统，仅适合网络通信。</li></ul><h1 id="作业与进程的调度">作业与进程的调度</h1><p>就绪队列用中有许多进程，然而穷比只得起四核CPU，该让哪个进程先跑呢？要靠进程调度或作业调度。调度时有以下几种级别：</p><p>（作业是比程序更广泛的概念，但仍可以使用类似PCB的方式描述，称为JCB。类似进程地，作业也有一些基本状态，收容、运行和完成状态。）</p><ul><li>高级调度，或者叫作业调度，决定把哪些作业由外存调至内存，要考虑调几个、分别是谁；</li><li>中级调度，或者叫内存调度，主要负责进程的挂起和激活；</li><li>低级调度，或者叫进程调度，决定哪个进程使用处理机，分抢占式——某个进程跑着跑着可以被其它进程顶下去——和非抢占式。</li></ul><p>我们希望有合适的调度算法，使处理机利用率（有效工作时间和有效工作时间加空闲时间之比）和I/O设备利用率尽可能高且对各进程公平、一些重要进程能立即被强制执行。</p><p>有以下几种常用调度算法：</p><h2 id="先来先服务fcfs">先来先服务（FCFS）</h2><p>顾名思义。适合有很多耗时比较长、没什么I/O的作业或进程的情况。非抢占式。</p><h2 id="短作业优先短进程优先sjfspf">短作业优先/短进程优先（SJF/SPF）</h2><p>顾名思义。可以降低平均周转时间（到达到完成的时间），但长作业可能被饿死。而且用户给的预计运行时间未必准。非抢占式。</p><h2 id="优先级调度psa">优先级调度（PSA）</h2><p>前两种算法的加强版。即前两种算法分别是单纯以到达时间或作业预计时间为优先级。如果做成抢占式的，还可以用在实时系统中。</p><p>可以静态或动态地确定优先级，通过进程类型（是I/O还是别的什么？）、资源耗费（包括时间内存等）和用户的指定等。动态确定时，可以提高一个等了很久的进程的优先级，慢慢降低正在执行的进程的优先级等。</p><h2 id="高响应比优先调度算法hrrn">高响应比优先调度算法（HRRN）</h2><p>一种求动态优先级的方式。等待时间与要求服务时间之和与要求服务时间的比例作为优先级，谁高调用谁。</p><h2 id="基于时间片的轮转调度法rr">基于时间片的轮转调度法（RR）</h2><p>按FCFS排列就绪队列，当处理机空闲时，将处理机分配给队首进程，等一个时间片过去，将正处理的进程排至队尾。</p><h2 id="多级反馈队列调度算法mfq">多级反馈队列调度算法（MFQ）</h2><p>设置多个优先级不同的就绪队列，每个队列时间片长度不同，优先级越高的队列时间片越长。当一个进程到达时，将它加入优先级最高的队列的末尾。处理机执行完时间片后如果当前进程未完成，则放到低一级的队列最后。最低优先级的队列内部使用RR算法调度。当最高优先级的队列为空时才执行低一级优先的队列，依次类推。如果正在执行时有高于当前进程优先级的进程到达（即执行非最高优先级进程时有进程到达），则将当前执行的进程放至原优先级对应队列的队尾，首先执行新来的进程。</p><p>这种算法无需知道预期运行时间，比较NB。</p><h2 id="示例">示例</h2><p>有一个具有两道作业的批处理系统（最多可有两道作业同时装入内存执行）,作业调度采用计算时间短的作业优先调度算法,进程调度采用以优先数为基础的抢占式调度算法,今有如下作业序列（表中所列作业优先数即为进程优先数,数值越小优先级越高）:</p><table><thead><tr class="header"><th>作业名</th><th>到达时间</th><th>估计运行时间</th><th>优先数</th></tr></thead><tbody><tr class="odd"><td>J1</td><td>10:10</td><td>20分钟</td><td>5</td></tr><tr class="even"><td>J2</td><td>10:20</td><td>30分钟</td><td>3</td></tr><tr class="odd"><td>J3</td><td>10:30</td><td>25分钟</td><td>4</td></tr><tr class="even"><td>J4</td><td>10:50</td><td>20分钟</td><td>6</td></tr></tbody></table><p>显然J1在10:10先到，装入内存并运行了10min，10:20J2到达，装入内存，由于优先级更高，抢占J1直到执行完毕即10:50，此时J3和J4都到达了。作业调度遵循短作业优先，即J4又被装入内存，其优先级低于J1，于是J1执行完毕。此时是11:00，J3也被装入内存，其优先级更高，到11:25J3执行完毕，J4最后执行。</p><h1 id="死锁">死锁</h1><blockquote><p>一组进程处于死锁状态是指：如果在一个进程集合中的每一个进程都在等待只能由该集合中的其它一个进程才能引发的事件，则称一组进程或系统发生了死锁。（孙钟秀主编《操作系统教程》）</p></blockquote><p>之前哲学家进餐问题有提过。主要出现原因是多个进程对某类资源有竞争、这些进程每次还不止要一个资源、且没规定好它们访问资源的顺序，就可能出现死锁。典型的情况是进程访问了一个资源，又去访问另一个，但另一个不可用，于是他在那等，又抓着已经拿到的资源不放手，导致产生一个循环，一个进程拿着另一个进程要的资源不放手，他要的资源又被另一个进程拿着不放手……</p><h2 id="预防">预防</h2><p>使临界资源不再临界，或一次性分配好资源而不是一个一个给，或允许进程释放已抢占的资源，或指定好访问顺序即可。</p><p>第一种情况限制太大，一般还是想让临界资源互斥的；第二种情况会拖慢系统；第三种方式不好实现；第四种方式规定太死，实际使用哪能这么巧有个顺序。</p><h2 id="避免">避免</h2><p>既然从原理上预防死锁不太可行，于是考虑在分配资源时动态地预防。</p><p>有些时候是不会进入死锁的，例如有三个进程，分别要10、4、9个资源，已分配5、2、2个，还剩3个。这时可以分2个给第二个进程让它跑完，还剩6个；再分5个给第一个进程，最后再满足最后一个进程。这时是安全的。</p><p>有些时候会进入死锁，例如上例中的三个进程，分别要10、4、10个资源，已分配5、2、3个，还剩2个。这时可以分2个给第二个进程让它跑完，还剩4个；无论如何也找不到可以让剩下两个进程跑起来的方法了。这是不安全的。</p><p>有个银行家算法可对此进行判断，其设计之初是为了防止银行的钱（剩余资源）不够放贷（进程请求资源）的：</p><p>对有n个进程m类资源的情况，设置一个有m个元素的数组Availabe记录每个资源的剩余可用数，用三个n*m的矩阵Max、Allocation和Need表示每个进程对每种资源的需求数、已有数和还需要的数。</p><p>一个进程发出资源请求Request后进行如下检查：</p><ol type="1"><li>Requset中的元素是否不大于Need中对应元素？否则报错；</li><li>Request中的元素是否不大于Available中对应元素？否则让进程等待；</li><li>尝试模拟分配完成的情况，即Avalible中元素减去Request中对应元素，Allocation中元素加上Request中对应元素，Need中元素减去Request中对应元素。</li><li>复制一个Available，名为Work。即分配完后的剩余资源数。建立一个布尔型数组Finish，对应每个进程的完成情况，初值均为false。</li><li>找哪个尚未Finish的进程的Need小于等于Work，有的话意味着剩余资源足够它执行完并释放。假装释放了，把被占用的资源Alloction加到Work上，标记这个进程为完成。重复，直到所有进程都完成，或没有进程可以被完成。</li><li>如果都能完成，说明安全，可以分配；否则不能分配。</li></ol><p>例如现有5个进程P0~P4，三类资源A、B和C分别共有10、5和7个，当前资源分配如下：</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">Max A/B/C</th><th style="text-align: center;">Allocation A/B/C</th><th style="text-align: center;">Need A/B/C</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">P0</td><td style="text-align: center;">7/5/3</td><td style="text-align: center;">0/1/0</td><td style="text-align: center;">7/4/3</td></tr><tr class="even"><td style="text-align: center;">P1</td><td style="text-align: center;">3/2/2</td><td style="text-align: center;">2/0/0</td><td style="text-align: center;">1/2/2</td></tr><tr class="odd"><td style="text-align: center;">P2</td><td style="text-align: center;">9/0/2</td><td style="text-align: center;">3/0/2</td><td style="text-align: center;">6/0/0</td></tr><tr class="even"><td style="text-align: center;">P3</td><td style="text-align: center;">2/2/2</td><td style="text-align: center;">2/1/1</td><td style="text-align: center;">0/1/1</td></tr><tr class="odd"><td style="text-align: center;">P4</td><td style="text-align: center;">4/3/3</td><td style="text-align: center;">0/0/2</td><td style="text-align: center;">4/3/1</td></tr></tbody></table><p>也就是说剩余如下：</p><table><thead><tr class="header"><th style="text-align: center;">Avalibale A/B/C</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">3/3/2</td></tr></tbody></table><p>比方说现在P1请求<code>Request1(1/0/2)</code>，先与Need比较，OK；再与Avalible比较，OK。于是模拟分配。</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">Max A/B/C</th><th style="text-align: center;">Allocation A/B/C</th><th style="text-align: center;">Need A/B/C</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">P0</td><td style="text-align: center;">7/5/3</td><td style="text-align: center;">0/1/0</td><td style="text-align: center;">7/4/3</td></tr><tr class="even"><td style="text-align: center;">P1</td><td style="text-align: center;">3/2/2</td><td style="text-align: center;"><em><strong>3/0/2</strong></em></td><td style="text-align: center;"><em><strong>0/2/0</strong></em></td></tr><tr class="odd"><td style="text-align: center;">P2</td><td style="text-align: center;">9/0/2</td><td style="text-align: center;">3/0/2</td><td style="text-align: center;">6/0/0</td></tr><tr class="even"><td style="text-align: center;">P3</td><td style="text-align: center;">2/2/2</td><td style="text-align: center;">2/1/1</td><td style="text-align: center;">0/1/1</td></tr><tr class="odd"><td style="text-align: center;">P4</td><td style="text-align: center;">4/3/3</td><td style="text-align: center;">0/0/2</td><td style="text-align: center;">4/3/1</td></tr></tbody></table><p>剩余如下：</p><table><thead><tr class="header"><th style="text-align: center;">Avalibale A/B/C</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><em><strong>2/3/0</strong></em></td></tr></tbody></table><p>接下来检查安全性。</p><p>最早的Work就是Avaliable，P0的Need太多，P1的够，于是有：</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">Work A/B/C</th><th style="text-align: center;">Allocation A/B/C</th><th style="text-align: center;">Need A/B/C</th><th style="text-align: center;">Work+Allocation A/B/C</th><th style="text-align: center;">Finish</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">P1</td><td style="text-align: center;">2/3/0</td><td style="text-align: center;">3/0/2</td><td style="text-align: center;">0/2/0</td><td style="text-align: center;">5/3/2</td><td style="text-align: center;">true</td></tr></tbody></table><p>现在我们的资源变成5、3和2了，P0仍然不够，P2也不够，P3够了，于是：</p><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">Work A/B/C</th><th style="text-align: center;">Allocation A/B/C</th><th style="text-align: center;">Need A/B/C</th><th style="text-align: center;">Work+Allocation A/B/C</th><th style="text-align: center;">Finish</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">P1</td><td style="text-align: center;">2/3/0</td><td style="text-align: center;">3/0/2</td><td style="text-align: center;">0/2/0</td><td style="text-align: center;">5/3/2</td><td style="text-align: center;">true</td></tr><tr class="even"><td style="text-align: center;">P3</td><td style="text-align: center;">5/3/2</td><td style="text-align: center;">2/1/1</td><td style="text-align: center;">0/1/1</td><td style="text-align: center;">7/4/3</td><td style="text-align: center;">true</td></tr></tbody></table><p>依此类推发现所有进程都OK，于是可以分配资源。</p><h2 id="检测">检测</h2><p>资源分配图。</p><h2 id="解除">解除</h2><p>回收资源/撤销进程。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
包括进程、死锁和作业调度相关内容。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://mechanicalmind.cn/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="操作系统" scheme="http://mechanicalmind.cn/categories/%E6%B7%B1%E8%93%9D/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://mechanicalmind.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="进程" scheme="http://mechanicalmind.cn/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="死锁" scheme="http://mechanicalmind.cn/tags/%E6%AD%BB%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>apk文件的反编译</title>
    <link href="http://mechanicalmind.cn/posts/dca81ae.html"/>
    <id>http://mechanicalmind.cn/posts/dca81ae.html</id>
    <published>2019-12-22T11:06:10.000Z</published>
    <updated>2019-12-22T11:06:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>dex2jar、jd-GUI和apktool的简单介绍。</center><a id="more"></a><p>环境：</p><ul><li>Manjaro Linux 18.1.0</li><li>dex2jar 2.1</li><li>jd-GUI 1.6.5-min</li><li>apktool 2.4.1</li></ul><p>下载<a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="noopener">dex2jar</a>，注意下载release版本，解压得一个文件夹，里面有许多<code>.sh</code>，对应不同功能。其中的<code>d2j-dex2jar.sh</code>可以由<code>.dex</code>文件反编译出<code>.jar</code>文件，即apk的源程序字节码。</p><p>解压apk，得到文件夹，里面的<code>.dex</code>丢到那堆<code>.sh</code>的同级目录下，<code>sh d2j-dex2jar.sh classes.dex</code>即可得到<code>.jar</code>。</p><p>下载<a href="http://java-decompiler.github.io/" target="_blank" rel="noopener">jd-GUI</a>（这个网站时好时坏经常404，网速也差，我下的1.6.5的min版），<code>java -jar jd-gui-1.6.5-min.jar</code>（要给权限）可以打开一个GUI，把<code>.jar</code>拖进去即可查看<code>.jar</code>对应的源代码。</p><p>源代码之外的配置文件和资源通过<a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="noopener">apktool</a>查看，官网有详细教程。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
dex2jar、jd-GUI和apktool的简单介绍。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="戏法" scheme="http://mechanicalmind.cn/categories/%E6%88%8F%E6%B3%95/"/>
    
    
      <category term="Android" scheme="http://mechanicalmind.cn/tags/Android/"/>
    
      <category term="反编译" scheme="http://mechanicalmind.cn/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>一门水课的小组作业所反映的差距</title>
    <link href="http://mechanicalmind.cn/posts/b0df0b0e.html"/>
    <id>http://mechanicalmind.cn/posts/b0df0b0e.html</id>
    <published>2019-12-22T08:01:13.000Z</published>
    <updated>2019-12-22T08:01:13.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="895f8912709e16aceb7396ca207928b9bf6923447562b7fa1f3b65813d8a8b12"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="其它" scheme="http://mechanicalmind.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
      <category term="柴米" scheme="http://mechanicalmind.cn/categories/%E5%85%B6%E5%AE%83/%E6%9F%B4%E7%B1%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>操作系统・〇・总论</title>
    <link href="http://mechanicalmind.cn/posts/232ed1d5.html"/>
    <id>http://mechanicalmind.cn/posts/232ed1d5.html</id>
    <published>2019-12-20T07:35:40.000Z</published>
    <updated>2019-12-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>操作系统的历史和基本概念。</center><a id="more"></a><p>操作系统（Operating System，OS）是计算机硬件上的第一层软件，是计算机必须配置的最基本、最重要的系统软件。</p><h1 id="设计目标与主要功能">设计目标与主要功能</h1><p>我们希望有种东西能让用户通过I/O系统操作计算机而不是从硬件接口输入机器代码（打孔纸带啥的）从而使计算机更易用（<strong>方便性</strong>），且通过合理调度提高效率（<strong>有效性</strong>），现在软硬件啥的更新换代都贼快，我们还希望它能具有模块化、层次化、微内核结构等设计以易于升级和扩展（<strong>可扩展性</strong>），并能遵循一些通用规范使不同软硬件厂商的产品都能跑（<strong>开放性</strong>）。这个东西就是操作系统。</p><p>方便性（用户角度，OS是用户和计算机硬件系统之间的接口）和有效性（资源管理角度，OS是计算机系统资源（软、硬）的管理者）是设计OS的两个最重要的目标（即综合以上两个角度，实现对计算机资源——<strong>处理器</strong>、<strong>存储器</strong>、<strong>I/O设备</strong>、<strong>数据和程序</strong>——的抽象）。</p><p>对四种计算机资源的抽象，或叫管理，再加上方便用户使用的界面，构成了操作系统的主要功能：</p><ul><li>处理机管理功能，基本就是对进程的管理，主要是创建和撤销（控制）、协调不同进程（同步）、信息交换（通信）和分配处理机（调度）啥的；</li><li>存储器管理功能，分配和保护内存、映射地址、虚拟存储啥的；</li><li>设备管理功能，完成I/O请求即提升I/O的效率和用户体验；</li><li>文件管理功能，存储空间和目录的管理、读写和保护；</li><li>用户接口，命令接口（用户直接控制自己的作业）、程序接口（程序向系统请求服务）。</li></ul><p>除此之外，一个现代的操作系统还应具能保护自己的安全、支持多媒体、访问网络等服务。</p><h1 id="运行机制">运行机制</h1><p>从上面可以看出，操作系统和用户要跑的程序是相对独立的，用户程序该干啥干啥，OS负责进程创建啥啥啥的一堆操作，而恰好这堆操作又是很关键、很危险、消耗资源很多的，所以处理机就搞了个分级制度，例如x86一共有0-3四个级别，0特权级最高，3特权级最低。Windows、Linux/Unix之类仅使用特权级0和特权级3，特权级0叫<strong>管态</strong>，干啥都行，3叫<strong>目态</strong>，只有最低级的权限。</p><p>自然，用户的程序就是运行在管态下的，OS主要运行在目态下，这部分叫OS内核，主要包括：</p><ul><li>时钟管理</li><li>中断机制</li><li>操作原语</li><li>系统控制所需的数据结构及处理</li></ul><p>在目态下可通过系统调用、异常、中端三种方式进入管态。</p><h1 id="发展过程">发展过程</h1><p>最早的计算机没有操作系统，打孔纸带那种；因为太慢，后来可以先从外围机上输入到磁带，主机再从磁带调用；然后有了对磁带里的程序的监督程序，勉强算是操作系统了，但是还是要一个作业完成再调用下一个程序，所以叫“单道”批处理系统。</p><p>问题在于，比方说一个作业中间要打印结果，但打印的时候处理机就闲着了。于是有了“多道”批处理系统，打印的时候再调用下一个程序跑。问题又来了，最开始的程序打印完之后的半截就得等鬼知道啥时候再被调用，用户也控制不了，于是资源调度、设备分配、用户接口等原来越复杂与完善，成了真正的OS。</p><p>后来人们不满足与多人共用一台计算机，还得等，要是不用等（实时）多好，但世界上只有一种病，自己又买不起，于是有了分时系统。比方说现在有100个进程处于就绪状态，如果让处理机每20ms换一个进程执行的话那最多等两秒自己的程序就能跑了，激不激动。这就叫分时，那20ms就叫时间片的长度。</p><p>喝不上牛奶的时候我想喝牛奶，等喝上了牛奶我还想用牛奶泡澡。人的欲望是无止境的，于是后来又有了实时系统。对操作系统各方面要求更高。</p><p>结构设计上经历了如下变革：</p><ol type="1"><li>无结构</li><li>模块式结构</li><li>层次式结构</li><li>微内核结构</li></ol><p>微内核最近很火，被牢厂营销起来了。传统的操作系统，例如Linux，其内核包含有前面说的所有功能，但微内核只包含开关机、进程调度等最最基础的功能，而尽可能把其它功能放到目态。这样显然会变慢，所以以前没啥人做，不过现在科技发达了，所以技术实力强的公司开始作出尝试，例如谷歌基于Zircon的微内核的Fuchsia。</p><p>不太理解这个东西和“模块化的内核”有啥区别，现在OS内核也都模块化了啊。</p><p>还是太菜了。</p><h1 id="基本特性">基本特性</h1><p>OS最重要的特征是<strong>并发</strong>（两个或多个事件在同一时段发生，不需要同一时刻，同一时刻叫并行）。OS为每个程序建立一些由一组机器指令、数据和堆栈等组成的活动实体，这些活动实体叫进程，多个进程之间可以并发执行并交换信息，也可以共同使用系统资源（<strong>共享性</strong>，不一定是同时的，比方说一个打印机打着别的程序的文档呢肯定另一个程序不能用，还有表、栈等数据结构一个道理，这种叫临界资源，其共享方式叫互斥共享；相反就叫同时访问的共享）。也就是说，并发是共享的基础。但共享也影响并发，资源共享都协调不好并个毛线发不死循环就不错了。这俩是最重要的特征。</p><p>由于进程的并发及其之间的资源共享，一个进程难免因为其它进程的干扰等了好久才获取资源完成任务，谁也说不准。这个叫<strong>异步性</strong>。</p><p>OS的另一个重要特征是<strong>虚拟</strong>，想要抽象地表示计算机资源，把物理实体映射为逻辑上的概念就很重要，比如虚拟处理机（一核假装成四核）、虚拟内存（磁盘假装是内存）、虚拟外部设备（共享打印机）和虚拟信道等。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
操作系统的历史和基本概念。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://mechanicalmind.cn/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="操作系统" scheme="http://mechanicalmind.cn/categories/%E6%B7%B1%E8%93%9D/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://mechanicalmind.cn/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg</title>
    <link href="http://mechanicalmind.cn/posts/e991c9ac.html"/>
    <id>http://mechanicalmind.cn/posts/e991c9ac.html</id>
    <published>2019-12-19T08:47:10.000Z</published>
    <updated>2020-01-01T08:47:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>录制、转换以及流化音视频的完整解决方案。</center><a id="more"></a><p>FFmpeg项目由以下几部分组成：</p><ul><li>FFmpeg，视频文件转换命令行工具；</li><li>ffserver，多媒体服务器；</li><li>ffplay，简单的媒体播放器；</li><li>libavcodec，编解码器库；</li><li>libavformat，解析器和产生器库。</li></ul><p>许多播放器、转码器使用FFmpeg作为内核，例如暴风影音、KMPlayer、QQ影音、格式工厂之类。</p><h1 id="安装">安装</h1><p>Manjaro自带。</p><h1 id="使用">使用</h1><p>【用到啥更新啥】</p><ul><li>画面与声音合并：<code>ffmpeg -i 画面 -i 声音 -codec copy 目标视频</code>（参数<code>-i</code>指定这是一个输入项，<code>-codec</code>表示强制使用codec编解码方式。<code>copy</code>表示原始编解码数据必须被拷贝）。</li><li>截取音视频：<code>ffmpeg -i 输入 -ss 00:00:00 -t 10 输出</code>，单位为秒，不影响输入内容；输出可以为gif格式。可添加<code>-b 2048k</code>参数指定比特虑，获得高质量gif。</li><li>视频缩放：<code>ffmpeg -i 输入视频 -strict -2 -vf scale=-1:480 输出视频</code>（按比例缩放高度至480）或<code>ffmpeg -i 输入视频 -strict -2 -s 640x480 输出视频</code>。</li><li>格式转换：<code>ffmpeg -i 输入 -vcodec 指定格式 输出</code>，可以是<code>h264</code>、<code>mpeg4</code>、<code>libxvid</code>、<code>wmv1</code>和<code>wmv2</code>等。</li><li>速率调整：<code>ffmpeg -i 输入音画 -filter_complex &quot;[0:v]setpts=速率*PTS[v];[0:a]atempo=速率[a]&quot; -map &quot;[v]&quot; -map &quot;[a]&quot; 输出音画</code>，单独视频是<code>ffmpeg -i 输入视频 -an -filter:v &quot;setpts=速率*PTS&quot; 输出视频</code>，单独音频是<code>ffmpeg -i 输入音频 -filter:a &quot;atempo=2.0&quot; -vn 输出音频</code>。视频的变速范围为4倍（0.25~4），音频为2倍。</li><li>将帧合成为视频：<code>ffmpeg -loop 1 -i ./%d.jpg -vcodec libx264 -r 帧率 test.mp4</code>。</li><li>调整音量：<code>ffmpeg -i 输入 -af volume=5dB 输出</code>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
录制、转换以及流化音视频的完整解决方案。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="快门工" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/"/>
    
      <category term="视频后期" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E8%A7%86%E9%A2%91%E5%90%8E%E6%9C%9F/"/>
    
    
      <category term="FFmpeg" scheme="http://mechanicalmind.cn/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>基于区域生长的图像分割</title>
    <link href="http://mechanicalmind.cn/posts/3fa2bcd.html"/>
    <id>http://mechanicalmind.cn/posts/3fa2bcd.html</id>
    <published>2019-12-17T13:13:16.000Z</published>
    <updated>2019-12-17T13:13:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>根据种子选取准则选择种子，根据相似准则加入与种子相似的点，根据终止准则停止生长。</p><p>例如对如下图片：</p><p><span class="math display">\[\begin{matrix}3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\4&amp;4&amp;8&amp;9&amp;7&amp;4&amp;3&amp;3\\2&amp;3&amp;4&amp;8&amp;4&amp;4&amp;5&amp;4\\2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\4&amp;3&amp;4&amp;8&amp;9&amp;8&amp;3&amp;3\\2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\\end{matrix}\]</span></p><p>有：</p><ul><li>种子选择准则：最亮的点；</li><li>相似性准则：新加入像素的灰度值与已生长的区域的平均灰度值之差小于2，且为4连通。</li><li>终止准则：没有像素加入。</li></ul><p>种子选取：</p><p><span class="math display">\[\begin{matrix}3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\4&amp;4&amp;8&amp;(9)&amp;7&amp;4&amp;3&amp;3\\2&amp;3&amp;4&amp;8&amp;4&amp;4&amp;5&amp;4\\2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\4&amp;3&amp;4&amp;8&amp;(9)&amp;8&amp;3&amp;3\\2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\\end{matrix}\]</span></p><p>以生长区域区域平均值为9。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于7的像素。</p><p><span class="math display">\[\begin{matrix}3&amp;3&amp;4&amp;7&amp;6&amp;4&amp;5&amp;2\\4&amp;4&amp;(8)&amp;(9)&amp;7&amp;4&amp;3&amp;3\\2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\2&amp;4&amp;3&amp;7&amp;7&amp;4&amp;5&amp;4\\4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\2&amp;4&amp;4&amp;2&amp;7&amp;2&amp;5&amp;2\\4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\\end{matrix}\]</span></p><p>以生长区域区域平均值为<code>(9+8+8)/3=8.33</code>和<code>(9+8+8)/3=8.33</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于6.33的像素。</p><p><span class="math display">\[\begin{matrix}3&amp;3&amp;4&amp;(7)&amp;6&amp;4&amp;5&amp;2\\4&amp;4&amp;(8)&amp;(9)&amp;(7)&amp;4&amp;3&amp;3\\2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\2&amp;4&amp;3&amp;(7)&amp;(7)&amp;4&amp;5&amp;4\\4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\2&amp;4&amp;4&amp;2&amp;(7)&amp;2&amp;5&amp;2\\4&amp;4&amp;3&amp;2&amp;6&amp;2&amp;3&amp;3\\4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\\end{matrix}\]</span></p><p>以生长区域区域平均值为<code>(9+8+8+9+8+8+7+7+7+7+7)/11=7.7272</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于5.7272的像素。</p><p><span class="math display">\[\begin{matrix}3&amp;3&amp;4&amp;(7)&amp;(6)&amp;4&amp;5&amp;2\\4&amp;4&amp;(8)&amp;(9)&amp;(7)&amp;4&amp;3&amp;3\\2&amp;3&amp;4&amp;(8)&amp;4&amp;4&amp;5&amp;4\\2&amp;4&amp;3&amp;(7)&amp;(7)&amp;4&amp;5&amp;4\\4&amp;3&amp;4&amp;(8)&amp;(9)&amp;(8)&amp;3&amp;3\\2&amp;4&amp;4&amp;2&amp;(7)&amp;2&amp;5&amp;2\\4&amp;4&amp;3&amp;2&amp;(6)&amp;2&amp;3&amp;3\\4&amp;3&amp;3&amp;3&amp;4&amp;4&amp;3&amp;4\\\end{matrix}\]</span></p><p>以生长区域区域平均值为<code>(9+8+8+9+8+8+7+7+7+7+7+6+6)/13=7.4615</code>。则根据相似性准则，下一步应添加生长区域的点的四邻域内的、灰度值大于5.4615的像素。</p><p>找不到。符合终止准则，生长结束。</p><p>故得到如下结果：</p><p><span class="math display">\[\begin{matrix}&amp; &amp;1&amp;1&amp; \\&amp;1&amp;1&amp;1&amp; \\&amp; &amp;1&amp; &amp; \\&amp; &amp;1&amp;1&amp; \\&amp; &amp;1&amp;1&amp;1\\&amp; &amp; &amp;1&amp; \\&amp; &amp; &amp;1&amp; \\&amp; &amp; &amp; &amp; \\\end{matrix}\]</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="快门工" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/"/>
    
      <category term="图像处理" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="图像处理" scheme="http://mechanicalmind.cn/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="区域生长" scheme="http://mechanicalmind.cn/tags/%E5%8C%BA%E5%9F%9F%E7%94%9F%E9%95%BF/"/>
    
      <category term="图像分割" scheme="http://mechanicalmind.cn/tags/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>二值图像的轮廓提取与边界跟踪</title>
    <link href="http://mechanicalmind.cn/posts/b556717e.html"/>
    <id>http://mechanicalmind.cn/posts/b556717e.html</id>
    <published>2019-12-17T11:20:25.000Z</published>
    <updated>2019-12-17T11:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>对二值图像，若一亮点周围 8 个点均为黑点，则其为非轮廓点，将之置为黑点。对所有亮点执行此操作即可获得轮廓。</p><p>获得轮廓后可由其上一点（一般最左上）跟踪出整个边界，同时记录信息。如对于以下轮廓：</p><p><span class="math display">\[\begin{matrix}c\backslash r  &amp;_0&amp;_1&amp;_2&amp;_3&amp;_4&amp;_5&amp;_6\\_0&amp;1&amp;1&amp; &amp; &amp; &amp; &amp; \\_1&amp;1&amp; &amp;1&amp;1&amp;1&amp;1&amp;1\\_2&amp;1&amp; &amp; &amp; &amp; &amp; &amp;1\\_3&amp;1&amp;1&amp; &amp; &amp; &amp;1&amp; \\_4&amp; &amp; &amp;1&amp;1&amp; &amp;1&amp; \\_5&amp; &amp; &amp; &amp; &amp;1&amp; &amp; \\\end{matrix}\]</span></p><p>类似广搜地，定义一个<code>dir[4][2]={ {0,1},{-1,0},{0,-1},{1,0} };</code>或<code>dir[8][2]={ {0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1},{1,0},{1,1} };</code>。</p><p>由于起始点是最左上的角，所以对于四方向的情况，搜索从方向3开始；对于八方向的情况则从5开始（好傻冒的约定，为啥不把开始搜索的作为0……）。</p><p>因为这个SB约定，搜索下一个逆时针方向时对应的下标是<code>(i+1)%4</code>或<code>(i+1)%8</code>而非<code>i+1</code>。顺时针类似。</p><p>对这个图使用八方向的顺时针搜索方式，第一个点从方向5开始，到方向0找到了下一个点<code>(0,1)</code>。</p><p>接下来为了保持顺时针的跟踪方向，应将当前方向也就是0逆时针旋转一个方向再进行顺时针搜索；若是正在进行逆时针搜索就顺时针旋转一个方向再逆时针搜索，即<code>(i+3)%4</code>或<code>(i+7)%8</code>。特别的，对八方向的情况，如果是斜着过来的（方向为奇数），则旋转两个方向。这样可以保证之前走过的点最后被搜索到。</p><p>因此对该图的第二次搜索由方向1开始，顺时针到方向7找到下一个点<code>(1,2)</code>。</p><p>依次类推，每次的方向分别是：<code>0700006565343422</code>。</p><p>这玩意叫<strong>8连通方向码</strong>，或<strong>8方向链码</strong>。</p><p>每次变到当前方向分别是顺时针旋转了：<code>2170002171271720</code>个方向过来的。</p><p>这玩意叫<strong>8方向差分链码</strong>。</p><p>为了统一不同起点的不同情况，引入<strong>归一化链码</strong>。同一个封闭边界的不同起点的各个链码可以看作是由表示该边界的一串数字循环移位得到的，如果把这一串数看作N位自然数，则不同的起点就形成不同大小的N位自然数，将最小的N位自然数串作为归一化链码。</p><p>示例轮廓的归一化链码为：<code>0000656534342207</code>。</p><p>链码可以计算周长。斜着走即奇数方向的按根二算，否则按一算，加起来即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="快门工" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/"/>
    
      <category term="图像处理" scheme="http://mechanicalmind.cn/categories/%E5%BF%AB%E9%97%A8%E5%B7%A5/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="图像处理" scheme="http://mechanicalmind.cn/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="轮廓提取" scheme="http://mechanicalmind.cn/tags/%E8%BD%AE%E5%BB%93%E6%8F%90%E5%8F%96/"/>
    
      <category term="边界跟踪" scheme="http://mechanicalmind.cn/tags/%E8%BE%B9%E7%95%8C%E8%B7%9F%E8%B8%AA/"/>
    
  </entry>
  
</feed>
