<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mech_Mind‘s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-15T16:00:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Struts2基础知识</title>
    <link href="http://yoursite.com/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Structs2%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Structs2%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2019-12-15T16:00:00.000Z</published>
    <updated>2019-12-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="struts2对请求的基本处理流程及相关配置文件">Struts2对请求的基本处理流程及相关配置文件</h1><p>Web应用项目启动时会先加载<code>Web.xml</code>配置文件，通过里面指定的过滤器拦截请求，因此开发Struts框架Web应用项目，首先在项目配置文件web.xml中增加核心过滤器配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.FilterDispatcher<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr></table></figure><p>符合过滤要求的请求将由<code>struts.xml</code>中配置的Struts2拦截器拦截。</p><p>自定义拦截器的基类一般是Interceptor，一般至少包括<code>init()</code>、<code>destroy()</code>和<code>intercept()</code>三个函数。在拦截函数中通过<code>invocation.invok()</code>调用Action，程序流转至Action。</p><p>例如如下自定义拦截器：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"itcast"</span> <span class="attr">namespace</span>=<span class="string">"/test"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"定义的拦截器名字"</span> <span class="attr">class</span>=<span class="string">"定义的拦截器类文件"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"定义的拦截器堆栈名字"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--以下给出拦截器堆栈包含的拦截器--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span> /&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"定义的拦截器名字"</span> /&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">...</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在Action中指出要包含拦截器--&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"定义的拦截器堆栈名字"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure><p>defult-interceptor-ref指定默认拦截器。</p><p>转至Action后将从<code>struts.xml</code>中找到动作的处理类执行。<code>struts.xml</code>主要的部分如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"包名"</span> <span class="attr">namespace</span>=<span class="string">"名字空间，可不写"</span> <span class="attr">extends</span>=<span class="string">"继承的包，可不写"</span> <span class="attr">abstract</span>=<span class="string">"是否是抽象包，可不写"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span>  <span class="attr">name</span>=<span class="string">"请求的动作名"</span> <span class="attr">class</span>=<span class="string">"处理类的路径，可不写"</span> <span class="attr">method</span>=<span class="string">"方法名，缺省为execute方法"</span> <span class="attr">converter</span>=<span class="string">"指定类型转换器，可不写"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"动作的返回值，缺省为success"</span> <span class="attr">type</span>=<span class="string">"返回结果类型，缺省为dispatcher，可转向一个结果页面；redirectAction转向动作；redirect转向动作或url"</span>&gt;</span>结果页面<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure><p>可以看出，作为动作的处理类的Java类应当无形参并返回一个String，缺省的映射函数为<code>execute()</code>方法，用其它方法返回的话需要在method中设置一下。默认的基类为ActionSupport。</p><p>还可使用include标签导入多个<code>struts-xxx.xml</code>。</p><p>Web项目部署路径包括协议名、服务器名、端口号、项目名称、（可能有的）名字空间和动作名，也就是形如<code>http://localhost/8088/struts2/simple/hello.action</code>，可以看出Action缺省的扩展名为.action。这里没有额外的名字空间，所以服务器将在<code>/simple</code>下搜索<code>hello.action</code>；形如<code>http://server/struts2/path1/path2/path3/hello.action</code>，服务器首先在<code>/path1/path2/path3</code>名字空间搜索。</p><p>在Action有较多方法（即struts.xml配置中使用了通配符配置、定义Action）时，Struts2支持通过函数名调用Action的方法（函数），即动态方法调用。当多个action中都使用到了相同result，在<code>struts.xml</code>中用<code>globle-results</code>可把result定义为全局结果。</p><p>除<code>Web.xml</code>和<code>struts.xml</code>外，还有struts-default.xml、struts-plugin.xml、struts.xml、struts.properties。加载顺序为struts-default.xml &gt; struts-plugin.xml &gt; struts.xml &gt; struts.properties &gt; web.xml。</p><p>Action函数所在类文件，用ActionContext的静态成员函数getContext获取Action运行环境及内容。JSP页面可直接使用的内置对象Request所对应的Java类是HttpServletRequest，Response所对应的Java类是HttpServletResponse。</p><p>示例，这是一个上传文件的表单，提交该表单后由一个JSP表达式获取Action运行环境及内容，调用Action：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!--enctype属性规定在发送到服务器之前应该如何对表单数据进行编码。multipart/form-data即不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;form enctype=<span class="string">"multipart/from-data"</span> action=<span class="string">"$&lt;%=request.getContextPath()&gt;/upload.action"</span> method=<span class="string">"post"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"file"</span> name=<span class="string">"uploadImage"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"submit"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure><p>jsp页面效果如下：</p><hr /><form enctype="multipart/from-data"><input type="file" name="uploadImage"> <input type="submit"></form><hr /><p>Action函数所在的Java类UploadAction:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadAction</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传的文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> File uploadImage;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传文件的类型</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String uploadImageContentType;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传文件的名称</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String uploadImageFileName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">String realpath =ServletActionContext.getServletContext( ).getRealPath(<span class="string">"/images"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(realpath);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( !file.exists( ) )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">file.mkdirs( );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">FileUtils.copyFile(uploadImage, <span class="keyword">new</span> File(file,uploadImageFileName)); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>除此之外，ActionSupport还提供了一个<code>validate()</code>，可以在执行Action前对所有方法得到的值进行校验。当某个控件数据校验失败时，一般调用<code>addFieldError()</code>向系统的fieldErrors添加校验失败信息，在JSP页面可通过<code>s:fielderror</code>显示失败信息。如果有些方法不需要被校验，则可以在不需要使用校验的方法上注解<code>@SkipValidation</code>或使用形如<code>validateXxx()</code>的重写方法，这将只校验<code>xxx</code>方法。</p><h1 id="数据库相关操作">数据库相关操作</h1><ul><li>数据库连接URL字符串一般情况下包括连接方式、服务器地址/名称、端口号和数据库名称四部分。</li><li>数据库连接时，Class.forName( )的作用是动态加载类。</li><li>DriverManager.getConnection(url, username, password)的功能是创建连接。</li><li>数据库连接时，Connection执行prepareStatement把SQL语句串转换为PreparedStatement对象。</li><li>数据库连接时，调用PreparedStatement类的setObject绑定参数。</li><li>数据库连接时，调用PreparedStatement类的executeQuery函数执行查询，调用PreparedStatement类的 executeUpdate函数执行更新。</li><li>ORM(Object Relation Mapping)把<strong>表映射为类</strong>、<strong>记录映射为对象</strong>、<strong>字段映射为类成员</strong>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/"/>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>HTML与CSS基础知识</title>
    <link href="http://yoursite.com/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/HTML%E4%B8%8ECSS/HTML%E4%B8%8ECSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/12/16/%E8%A1%A8%E4%B8%96%E7%95%8C/HTML%E4%B8%8ECSS/HTML%E4%B8%8ECSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2019-12-15T16:00:00.000Z</published>
    <updated>2019-12-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="css基础">CSS基础</h1><p>CSS，Cascading Style Sheets，层叠样式表单。层叠是指多个样式可以同时应用于同一个页面或网页中的同一个标签，执行的效果按照“层叠规则”；当标签的样式定义发生冲突时，靠近标签的定义将生效。利用CSS可实现内容和形式的分离。</p><p>按照加入方式不同，可分为：</p><ul><li><p>行内样式表：<code>&lt;标签名 style=&quot;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&quot;&gt; 内容 &lt;/标签名&gt;</code>。优先度最高，可控制一个标签。</p></li><li><p>内部样式表：将CSS代码集中写在HTML文档的head头部标签中，并且用style标签定义。 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;CSS&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    选择器 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;style&gt;</span></pre></td></tr></table></figure> 优先度次之，可控制整个页面。</p></li><li><p>外部样式表：也是在头文件中写<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;test.css&quot;&gt;&lt;/link&gt;</code>，即，用href属性指定CSS文件位置，type属性设定为<code>&quot;text/css&quot;</code>，rel属性设定为<code>&quot;stylesheet&quot;</code>。优先度最低，但方便。</p></li></ul><p>样式优先级规则可以通过<code>!important</code>关键字进行改变，如<code>div{color:#f00!important;color:#000;}</code>，#f00的优先级被提升，将高于#000，最终显示#f00。</p><p>样式定义的基本格式包括选择器、属性和属性值。定义通用样式时，选择器设为<code>*</code>。而<code>p{ font-family: &quot;宋体&quot;; }</code>定义的样式仅作用于HTML文件的<code>&lt;p&gt;</code>标记、<code>font-family</code>属性。形如<code>p.right {text-align:right }</code>定义了属性选择器，这个样式就仅对right类中的p有效。如果想让它作用于作用于HTML中的某个p，就须就须设置为<code>&lt;p class=&quot;right&quot; ... /&gt;</code>。形如<code>p＃green {color:green}</code>定义了id选择器，仅对<code>&lt;p id=&quot;green&quot;&gt;...&lt;/p&gt;</code>有效。</p><p>常用的字体CSS属性有font-family、font-size、font-style和font-weight。常用的文本CSS属性有text-indent、text-align、text-decoration、text-transform和color、letter-spacing、line-height。常用的背景CSS属性有background-color、background-image、background-repeat、background-position和background-attchment。</p><h1 id="box模型">BOX模型</h1><p>BOX模型制定了元素如何在页面中显示，可以理解为，顶部俯视一些装了东西的盒子，盒子里装的东西即内容（content）；东西与盒子之间的空隙即内边距（padding）；盒子本身的厚度即边框（border）；盒子外与其他盒子之间的间隔即外边距（margin），也就是说，BOX模型有内容、内边距、边框、外边距四要素。</p><p>例如<code>{position:absolute;left:20px;top:20px }</code>设置了一个相对位置。</p><h1 id="示例">示例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">text/css</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    ul&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        list-style-type: none;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        line-height: 200%;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    li&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        padding: 5px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 10 10<span class="selector-tag">px</span>;   <span class="comment">/*这个用来调整导航之间的间距*/</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        display: inline-block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        width: 120px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        height: 40px;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        text-align: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        display: inline;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>学院概况<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>机构设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>教学科研<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>国际交流<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.baidu.com</span>&gt;</span>党建思政<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></pre></td></tr></table></figure><p>效果如下：</p><style type=text/css>    ul{        list-style-type: none;        line-height: 200%;    }    li{        padding: 5px;        margin: 10 10px;   /*这个用来调整导航之间的间距*/        display: inline-block;        width: 120px;        height: 40px;        text-align: center;        display: inline;    }</style><ul style="list-style-type:none;line-height: 200%;"><li><a href=http://www.baidu.com>网站首页</a></li><li><a href=http://www.baidu.com>学院概况</a></li><li><a href=http://www.baidu.com>机构设置</a></li><li><a href=http://www.baidu.com>教学科研</a></li><li><a href=http://www.baidu.com>国际交流</a></li><li><a href=http://www.baidu.com>党建思政</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="HTML与CSS" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/HTML%E4%B8%8ECSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript与jQuery基础知识</title>
    <link href="http://yoursite.com/2019/12/15/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/JavaScript%E4%B8%8EjQuery%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/12/15/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/JavaScript%E4%B8%8EjQuery%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2019-12-14T16:00:00.000Z</published>
    <updated>2019-12-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><p>JS是JavaScript的缩写，是互联网上被广泛应用的脚本语言。</p><h1 id="代码的引入">代码的引入</h1><p>JS代码一般出现在<code>.html</code>和<code>.js</code>文件中，通过单独写成<code>.js</code>，使用外部代码引用的方式实现JS代码可以增强JS模块化开发程度并且提高代码重用率；在HTML网页中编写JS代码时，推荐出现在head区域。</p><h2 id="head和body中插入">head和body中插入</h2><p>通过<code>&lt;script&gt;</code>标签把代码插入到HTML页面，<code>&lt;script type=&quot;text/JavaScript&quot;&gt;</code>和<code>&lt;/script&gt;</code>分别标记了JS代码的开始和结束。也就是说，在HTML页面文件引入JS代码，script标签的type属性要设置为<code>text/JavaScript</code>。</p><h2 id="引用外部代码">引用外部代码</h2><p><code>script src=&quot;xx.js&quot;&gt;&lt;/script&gt;</code>。</p><h1 id="代码的编写">代码的编写</h1><p>使用分号来结束一条语句。</p><p>变量名区分大小写。</p><p>运算符有赋值、算术、比较、逻辑、连接和条件运算符。</p><p>只能在function内部进行访问的变量为局部变量，页面内所有函数都可以访问的变量为全局变量。</p><p>条件语句：<code>if</code>、<code>if...else...</code>、<code>if...else if...else...</code>和<code>switch</code>，switch语句要通过<code>break</code>防止代码自动转向到下一个case。</p><p>循环语句：<code>while</code>，<code>for</code>，<code>do...while</code>和<code>for...in</code>循环；语句<code>continue</code>会跳出当轮循环进行下一轮循环，语句<code>break</code>会结束整个循环。</p><p>常用的字符串操作函数：<code>oncat()</code>、<code>indexOf()</code>、<code>match()</code>、<code>replace()</code>、<code>split()</code>、<code>substr()</code>、<code>substring()</code>等。</p><p>八个能从数学对象直接访问的数学值：自然指数E、LN2、LN10、LOG2E、LOG10E、圆周率PI、根二SQRT2、根二分之一SQRT1_2。</p><p>用警示框输出信息，语句为<code>alert(&quot;xxx&quot;)</code>。</p><p>编写命名函数需要以<code>function</code>关键词开头，<code>return</code>指定JS函数的返回值。通过<strong>事件触发</strong>和<strong>被调用</strong>来执行。例如HTML脚本<code>&lt;input type=&quot;text&quot; size=&quot;30“ id=&quot;email&quot; onchange=&quot;checkEmail()&quot;&gt;</code>中，当输入框内容改变时触发事件“onchange”，此时调用JS函数<code>checkEmail()</code>；对一个更复杂些的例子，<code>&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; onblur=&quot;checkusername();checkusername2();&quot; onfocus=&quot;checkusername2();&quot; value=&quot;输入用户名&quot;&gt;</code>，表单中有一控件username为输入用户名，此脚本对username输入框的输入内容调用JS函数checkusername校验——注意，这里有多个函数出现，所以要写分号。常用于表单上的JS事件有onfocus（获得光标）、onblur（失去光标）、onchange和onsubmit等；常用于鼠标动作的JS事件有onclick、ondbclick、onmousedown、onmouseover和onmouseup等。</p><p>在HTML文件表单中对其所包含的控件调用JS函数成批校验时，书写的脚本为<code>&lt;form action=&quot;request.jsp&quot; name=&quot;form&quot; onsubmit=&quot;return check();&quot; method=&quot;post&quot;&gt;</code>。</p><p>想要生成页面控件对象时，HTML页面INPUT标签的type属性设为<code>text</code>可在页面得到输入框；type属性设为<code>password</code>可在页面得到口令框；type属性设为<code>radio</code>可在页面得到radio button；type属性设为<code>checkbox</code>可在页面得到checkbox；type属性设为<code>submit</code>可在页面得到submit按钮；type属性设为<code>reset</code>可在页面得到reset按钮；ype属性设为<code>textarea</code>可在页面得到多行编辑控件。</p><p>想要获取页面控件对象时，如果控件有id属性，如<code>&lt;input id=&quot;username&quot; type=&quot;text&quot; &gt;</code>可以<code>document.getElementById(&quot;username&quot;)</code>；也可以利用name属性，如<code>&lt;label name=&quot;female&quot;&gt;Female&lt;/label&gt;</code>可以<code>document.getElementsByName(&quot;female&quot;)[0]</code>，注意name不唯一所以要以数组形式。</p><p>通过<code>try...catch</code>和onerror事件来捕捉错误。</p><h1 id="jquery的导入">jQuery的导入</h1><p>jQuery是一个JavaScript库。以在HTML页面文件引用jQuery库<code>jquery-1.3.1.js</code>为例，<code>&lt;script src=&quot;jquery-1.3.1.js&quot;  type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code>。</p><p>使用jQuery时，先通过选择器<code>$()</code>，即<code>jQuery()</code>，选择jQuery对象——jQuery对象是通过jQuery库包装DOM对象后产生的对象，DOM意为<strong>文档对象模型（Document Object Model）</strong>——选择好对象后通过<code>.</code>调用jQuery命令，对对象进行修改。</p><h1 id="jquery命令">jQuery命令</h1><p>执行css命令操纵样式、addClass命令设置新样式、removeClass命令删除样式、hasClass命令判断元素是否具有某样式、toggleClass命令切换样式。</p><p>执行append命令向DOM追加元素、remove命令删除DOM中元素、clone命令在DOM中复制节点、replacewith命令在DOM中替换内容、wrap命令在DOM中包裹元素。</p><p>执行show命令显示隐藏的元素，hide命令隐藏元素。</p><p>jQuery的动画函数有animate、slideup、slidedown、fadein、fadeout，以normal、fast、slow三种速度展示动画。</p><p>另一个常用命令是<code>$(document).ready(function(){...})</code>，（<code>$(document)</code>是一个选择器，选中的是整个html所有元素的集合）在页面所有元素准备完毕之后，载入页面之前执行自定义函数。例如在HTML页面文件加载（打开）时弹出“Hello World”的alert对话框，可<code>$(document).ready(function() {alert(&quot;Hello World!&quot;);})</code>。</p><h1 id="jquery选择器">jQuery选择器</h1><h2 id="基本选择器">基本选择器</h2><ul><li>id选择器:<code>$(&quot;#id&quot;)</code>；</li><li>类选择器:<code>$(&quot;.class&quot;)</code>；</li><li>元素选择器：<code>$(&quot;标签名&quot;)</code>；</li><li>全选选择器：<code>$(&quot;*&quot;)</code>。</li></ul><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--id选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="string">"#a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="keyword">this</span>).css(<span class="string">'color'</span>, <span class="string">'yellow'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--类选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="string">".d"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="keyword">this</span>).css(<span class="string">'color'</span>, <span class="string">'red'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--id选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="string">"#c"</span>).css(<span class="string">'color'</span>, <span class="string">'orange'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--全选选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="string">"*"</span>).css(<span class="string">'color'</span>, <span class="string">'green'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--元素选择器--&gt;</span></span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="javascript">$(<span class="string">"p"</span>).css(<span class="string">'color'</span>, <span class="string">'pink'</span>);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是一个粉刷匠<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span>你是来搞黄色的吗？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span>气突苏！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"c"</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span>如果奇迹有颜色，那一定是？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure><h2 id="层次选择器">层次选择器</h2><p>通过DOM元素之间的层次关系获取特定元素。</p><ul><li><code>$(&quot;ancestor descendant&quot;)</code>：选取所有子元素。</li><li><code>$(&quot;parent&gt;child&quot;)</code>：同上，但仅包含直接子元素。</li><li><code>$(&quot;prev+next&quot;)</code>：选取下一个元素。</li><li><code>$(&quot;prev~siblings&quot;)</code>：同上，但包含之后的所有满足条件元素。</li></ul><h2 id="选择过滤器">选择过滤器</h2><p>jQuery过滤选择器通过指定的过滤器筛选出所需的DOM元素，即在选择器后紧跟<code>:</code>符号，对选取的结果集进行过滤，过滤到的结果通常会有<strong>单个元素</strong>和<strong>集合</strong>两种类型。</p><p>jQuery过滤选择器包括_____、______、______、_____、_____和___。</p><ul><li>基本过滤器<ul><li><code>$('p:first')：</code>选取页面元素内的第一个p元素；</li><li><code>$('p:last')：</code>选取页面元素内的最后一个p元素；</li><li><code>$('p:not(.select)')：</code>选取选择器不是select的p元素；</li><li><code>$('p:even')：</code>选取索引是偶数的P元素（索引从0开始）；</li><li><code>$('p:odd')：</code>选取索引是奇数的p元素（索引从0开始）；</li><li><code>$('p:eq(index)')：</code>选取索引等于index的p元素（索引从0开始，支持负数）；</li><li><code>$('p:gt(index)')：</code>选取索引大于index的p元素（索引从0开始）；</li><li><code>$('p:lt(index)')：</code>选取索引小于index的p元素（索引从0开始）；</li><li><code>$(':header')：</code>选取标题元素h1~h6；</li><li><code>$(':animated')：</code>选取正在执行动画的元素；</li><li><code>$('input:focus')：</code>选取当前被焦点的元素。</li></ul></li><li>内容过滤器<ul><li>选取包含指定文本的元素<code>$(':contains(含有的文本)')</code></li><li>选取含有选择器匹配元素的元素<code>$(&quot;:has('选择器')&quot;)</code></li><li>选取不包含子元素或文本的空元素<code>$(':empty')</code></li><li>选取包含子元素或文本的空元素<code>$(':parent')</code></li></ul></li><li>可见性过滤器<ul><li>选取不可见的元素<code>$(':hidden')</code></li><li>选取可见的元素<code>$(':visible')</code></li></ul></li><li>属性过滤器<ul><li>选取拥有此属性的元素<code>$('选择器[attribute]')</code>；</li><li>选取属性值为value的元素<code>$('选择器[attribute=value]')</code>；</li><li>选取属性值不等于value的元素<code>$('[attribute!=value]')</code>；</li><li>选取属性值以value开始的元素<code>$('选择器[attribute^=value]')</code>；</li><li>选取属性值以value结束的元素<code>$('选择器[attribute$=value]')</code>；</li><li>选取属性值含有value的元素<code>$('选择器[attribute*=value]')</code>；</li><li>选取属性值前缀为value的元素<code>$('选择器[attribute|=value]')</code>；</li><li>选取属性值用空格分隔的值中包含给定值的元素<code>$('选择器[attribute~=value]')</code>；</li><li>组合属性选择器<code>$('选择器[attribute1][attribute2]…[attributeN]')</code>。</li></ul></li><li>子元素过滤器<ul><li>选取每个父元素下的第一个子元素，返回集合元素<code>$('选择器:first-child')</code></li><li>选取每个父元素下的最后一个子元素，返回集合元素<code>$('选择器:last-child')</code></li><li>选取每个父元素下的唯一子元素，返回集合元素<code>$('选择器:only-child')</code>.</li><li>选取每个父元素下的第index个子元素或者奇偶元素，index从1算起<code>$('选择器:nth-child(index)')</code></li></ul></li><li>表单对象属性过滤器<ul><li>:enabled选取页面中所有可用元素</li><li>:disabled选取页面中所有不可用元素</li><li>:checked选取页面中所有被选中的元素（单选框radio、复选框 checkbox）</li><li>:selected选取下拉列表中被选择的元素</li><li>:text选取页面中所有文本框，</li><li>:password选取页面中所有口令框</li><li>:checkbox选取页面中所有检查框</li><li>:image选取页面中所有图像按钮</li><li>:button选取页面中所有按钮</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="JavaScript与jQuery" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JSP基础知识</title>
    <link href="http://yoursite.com/2019/12/14/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/JSP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2019/12/14/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/JSP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2019-12-13T16:00:00.000Z</published>
    <updated>2019-12-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>MyEclipse的安装。</center><a id="more"></a><h1 id="servlet和jsp的关系">Servlet和JSP的关系</h1><p>JSP页面缺省的基类是HttpJspBase。</p><p>jsp在运行时首先被解析成一个java类，该类继承于org.apache.jasper.runtime.HtppJspBase类，这个类又继承了HttpServlet。</p><h1 id="jsp脚本元素">JSP脚本元素</h1><p>脚本元素提供了在jsp中插入java代码的能力。脚本元素有三种类型：</p><ul><li>脚本(scriptlet)是JSP页面中Java代码片段的容器。语法：<code>&lt;% java源代码 %&gt;</code>。</li><li>表达式(expression)将转换为String的Java表达式的值插入到返回给客户端的响应中。语法：<code>&lt;%= 表达式语句 %&gt;</code>。</li><li>声明(declarations)为JSP页面声明全局的方法和变量。语法：<code>&lt;%! 字段或方法声明 %&gt;</code>。</li></ul><h1 id="jsp指令元素">JSP指令元素</h1><h2 id="page指令">page指令</h2><p>用于设置页面属性。用<code>&lt;%@ page %&gt;</code>标记在JSP文件头部声明。</p><p>指定JSP页面使用JAVA语言时，使用指令<code>&lt;%@page language=&quot;java&quot;%&gt;</code>。<code>&lt;%@page language=&quot;java&quot; contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</code>中pageEncoding设置当前页面的页面编码字符集为UTF-8，contentType设置页面类型为text/html。</p><p>使用页面指令Page的<code>&lt;%@page import=&quot;&quot;%&gt;</code>属性在JSP文件引用一个外部Java类。例如JSP页面要用Java的Date类时，在JSP文件前面用<code>&lt;%@page import=&quot;Java.util.Date&quot;%&gt;</code>把Date类包含。</p><p>用JSP进行前端页面开发时，用<code>&lt;%@page errorPage=&quot;错误页面.jsp&quot;%&gt;</code>设置错误页面，从而方便把多个JSP页面的出错、错误处理信息集中到错误页面处理；对于错误页面，指定<code>&lt;%page isErrorPage=&quot;true&quot;%&gt;</code>。</p><h2 id="include指令">include指令</h2><p>include指令在JSP页面被转换成Servlet前将指定的文件包含。比如说，可能有多页面都需要用到一个logo和一些相应的连接啥的，但可以不每次都写一遍相关代码，而是将相关代码单独写一个<code>logo.jsp</code>，只需在想显示它的地方使用include指令包含进来<code>&lt;%@include file = &quot;logo.jsp&quot;%&gt;</code>。include只能包含静态的资源。</p><h2 id="taglib指令">taglib指令</h2><p>用于导入标签库，使用时需设置两个重要的属性分别是<code>uri</code>和<code>prefix</code>，例如导入jsp标准标签库：<code>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</code>。这玩意类似前面的include，但是包含的不是静态jsp，而是一段java代码。导入标签库之后就可以通过<code>&lt;前缀:类名 [参数1 [[参数2 [...]]]]&gt;&lt;/前缀:类名&gt;</code>插入这段代码。</p><h1 id="jsp动作元素">JSP动作元素</h1><p>标签库啥的的调用。</p><p><code>jsp:useBean</code>用于在JSP文件使用指定名称的JavaBean对象。例如在JSP页面会话中调用<code>Test.UserInfo</code>类，对象名为ui，则语句是<code>&lt;jsp:useBean id=&quot;ui&quot; class=&quot;Test.UserInfo&quot; scope=&quot;session&quot; type=&quot;...&quot;/&gt;</code>。</p><p><code>jsp:setProperty</code>设置JavaBean对象成员的值；用<code>jsp:getProperty</code>获取JavaBean对象成员的值。</p><p><code>jsp:forward</code>从当前页面转至其它JSP页面处理（请求转发）。<code>jsp:include</code>包含页面，但与上面的include指令不同，这里不是插入jsp代码，而是在运行后插入这段代码的应答。在转发或包含时，使用<code>jsp:param</code>传递参数。</p><h1 id="jsp的内置对象">jsp的内置对象</h1><ul><li><strong>application对象</strong>将信息保存在服务器中，直到服务器关闭。application对象中保存的信息在整个应用中有效。</li><li><strong>session对象</strong>是由服务器自动创建的与用户请求相关的对象。服务器为每个用户都生成一个session对象，用于保存该用户的信息，跟踪用户的操作状态。session对象内部使用Map类来保存数据，因此保存数据的格式为Key-value。session对象的value可以为复杂的对象类型，而不仅仅局限于字符串类型。<strong>内置对象session通过<code>setAttribute()</code>函数把数据以key-value形式写入保存，通过<code>getAttribute()</code>函数把保存的数据读取出来。JSP页面使用Session内置对象时，需要在JSP文件头部用<code>&lt;%@page session=&quot;true&quot; %&gt;</code>把Session属性设置为true。</strong></li><li><strong>request对象</strong>是javax.servlet.httpServletRequest类型的对象，代表客户端的请求信息，主要用于接受通过HTTP协议传送到服务器的数据。作用域为一次请求。</li><li><strong>response对象</strong>代表对客户端的响应，将JSP容器处理过的对象传回到客户端。response对象只在JSP页面内有效。</li><li><strong>page对象</strong>代表JSP本身，只在JSP页面内合法。类似于Java中的this。</li><li><strong>pageContext对象</strong>的作用是取得任何范围的参数，通过它可以获取JSP页面的out、request、reponse、session、application等对象。pageContext对象的创建和初始化都是由容器来完成的，在JSP页面中可以直接使用pageContext对象。</li><li>out对象用于在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。。</li><li>config对象的主要作用是取得服务器的配置信息。通过pageConext对象的<code>getServletConfig()</code>方法可以获取一个config对象。</li><li>exception对象的作用是显示异常信息，在包含<code>isErrorPage=&quot;true&quot;</code>的页面中可以被使用。</li></ul><h1 id="javabean">JavaBean</h1><p>JavaBean是一种仅包含数据属性和对数据进行存取的函数的类。</p><h1 id="外部包">外部包</h1><p>JSP文件用到外部（第三方）JAR包时，应在web项目的web-inf目录下建立lib目录，把jar包复制到<code>web项目/web-inf目录/lib目录</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
MyEclipse的安装。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="JSP" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/JSP/"/>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>贰・自顶向下语法分析</title>
    <link href="http://yoursite.com/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%B4%B0%E3%83%BB%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%B4%B0%E3%83%BB%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</id>
    <published>2019-12-11T12:58:14.000Z</published>
    <updated>2019-12-11T12:58:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>肆・语义分析</title>
    <link href="http://yoursite.com/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%82%86%E3%83%BB%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/12/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%82%86%E3%83%BB%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/</id>
    <published>2019-12-11T12:58:14.000Z</published>
    <updated>2019-12-11T12:58:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a><h1 id="属性文法">属性文法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">E-&gt; TR&#123;R.in:&#x3D;T.val;E.val&#x3D;R.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">R-&gt; +TR&#39;&#123;R&#39;.in:&#x3D;R.in+T.val;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">R-&gt; -TR&#39;&#123;R&#39;.in:&#x3D;R.in-T.val;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">R-&gt; epsilon&#123;R.val:&#x3D;R.in&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">T-&gt; num&#123;T.val:&#x3D;lexval(num)&#125;</span></pre></td></tr></table></figure><h1 id="翻译模式">翻译模式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">E-&gt; T&#123;R.in:&#x3D;T.val&#125;R&#123;E.val&#x3D;R.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">R-&gt; +T&#123;R&#39;.in:&#x3D;R.in+T.val&#125;R&#39;&#123;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">R-&gt; -T&#123;R&#39;.in:&#x3D;R.in-T.val&#125;R&#39;&#123;R.val:&#x3D;R&#39;.val&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">R-&gt; epsilon&#123;R.val:&#x3D;R.in&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">T-&gt; num&#123;T.val:&#x3D;lexval(num)&#125;</span></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ParseE</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    Tval=ParseT();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    Rval=ParseR(Tval);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    Print(Rval);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ParseR</span><span class="params">(<span class="keyword">int</span> in)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(lookahead==<span class="string">'+'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        MatchToken(<span class="string">'+'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        Tval=ParseT();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        Rval=ParseR(in+Tval);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(lookahead==<span class="string">'-'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        MatchToken(<span class="string">'-'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        Tval=ParseT();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        Rval=ParseR(in-Tval);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        Rval=in;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> Rval;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ParseT</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    if(lookahead=='num')</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> num;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        error();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h1 id="属性文法翻译模式的左递归消除">属性文法/翻译模式的左递归消除</h1><h1 id="四元式的生成">四元式的生成</h1><p>有C片段如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">a=x,b=y,c=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">1</span>)c=c*a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    b=b/<span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    a=a*a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>要获得它的四元式代码，首先将具有复杂含义的语句展开:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">    a=x;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    b=y;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    c=<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">begin</span>:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> b&lt;=<span class="number">0</span> <span class="keyword">goto</span> <span class="built_in">end</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> b%<span class="number">2</span> != <span class="number">1</span> <span class="keyword">goto</span> nxt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    c=c*a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">nxt:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    b=b/<span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    a=a*a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">goto</span> <span class="built_in">begin</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">end</span>:</span></pre></td></tr></table></figure><p>容易得到四元式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">01 &#x3D; ,x,&#x2F;,a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">02 &#x3D; ,y,&#x2F;,b</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">03 &#x3D; ,1,&#x2F;,c</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">04 &lt;&#x3D;,b,0,11</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">05 % ,b,2,t</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">06 !&#x3D;,t,1,8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">07 * ,c,a,c</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">08 &#x2F; ,b,2,b</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">09 * ,a,a,a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">10 go,&#x2F;,&#x2F;,4</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>贰・词法分析</title>
    <link href="http://yoursite.com/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E5%A3%B9%E3%83%BB%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E5%A3%B9%E3%83%BB%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/</id>
    <published>2019-12-10T12:58:14.000Z</published>
    <updated>2019-12-10T12:58:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center></center><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>〇・编译原理总论</title>
    <link href="http://yoursite.com/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E3%80%87%E3%83%BB%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2019/12/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E3%80%87%E3%83%BB%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2019-12-10T11:46:15.000Z</published>
    <updated>2019-12-10T11:46:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>编译程序的基本组成与相关概念。</center><a id="more"></a><h1 id="编译程序的功能">编译程序的功能</h1><p>把高级语言翻译为等价的低级语言。</p><h1 id="编译程序的组成">编译程序的组成</h1><p>编译程序接受一个字符流的源程序的输入。</p><p>字符流送<strong>词法分析模块</strong>进行词法<strong>分析</strong>。词法分析模块将从左至右扫描字符流，由词法规则识别出最小的语法单位即<strong>单词</strong>，将其转换为编译程序内部的符号表示，得到单词流。</p><p>单词流送送<strong>语法分析模块</strong>进行语法<strong>分析</strong>。语法分析模块由语法规则识别语法结构，生成一种语法的内部表示，如语法树、三元组或四元组等。同时检查语法正确性。</p><p>前面得到的语法结构送<strong>语义分析模块</strong>和<strong>中间代码生成模块</strong>进行语义<strong>分析</strong>与<strong>综合</strong>，进行静态语法检查、变量类型的确定与检查等，并生成中间代码。</p><p>以上模块称为编译程序的前端。</p><p>中间代码送<strong>中间代码优化模块</strong>，得到优化后的中间代码。</p><p>以上模块为中端。</p><p>优化后的中间代码送<strong>目标代码生成模块</strong>和<strong>目标代码优化模块</strong>，生成目标代码。</p><p>以上模块为后端。</p><p>除以上模块外，还有<strong>符号表管理模块</strong>，全程收集每个名字的各种属性；<strong>错误处理模块</strong>，负责报告错误并尝试从错误中恢复。</p><h1 id="遍">“遍”</h1><p>编译程序中有个叫“遍”或者“趟”（passes或phases）的概念，指从头到尾扫描一遍某种代码形式，并将之转换到另一代码空间（包含代码和一些额外信息如符号表等）。</p><p>“遍”的概念使程序结构更清楚，把哪些功能做成一个遍之类。一个编译程序的结构组织取决于其对各“遍”的组织，例如是单遍还是多遍？多个遍是顺序执行（通常如此）还是并发执行？</p><h1 id="编译程序的伙伴程序">编译程序的伙伴程序</h1><h2 id="预处理程序">预处理程序</h2><p>将宏定义（<code>#define</code>）、支持文件（<code>#include</code>）等替换为更复杂的源程序扩展信息。</p><h2 id="汇编程序">汇编程序</h2><p>将编译程序给出的汇编代码转换为可重定位的机器语言程序。</p><h2 id="装入和连接程序">装入和连接程序</h2><p>为可重定位的机器语言程序装载执行时库，生成可执行程序。</p><h1 id="编译程序的相关程序">编译程序的相关程序</h1><p>高级语言分编译型和解释性，后者对应解释程序。编译程序读入源程序，输出目标程序，目标程序读入程序输入，输出结果。而解释程序读入源程序和程序输入，输出结果。它不产生目标程序文件、翻译一句执行一句，执行时解释程序依旧在守护，也就是不区分翻译与执行。常用于虚拟机。</p><h1 id="文法">文法</h1><p>文法<code>G[S]</code>是一个四元组<code>(非终结符集合,终结符集合,重写规则集合,属于非终结符集合的识别符号S)</code>。</p><h1 id="使用文法产生语言">使用文法产生语言</h1><p>一串字汇集（非终结符集合并终结符集合）符号由重写规则进行重写的过程叫推导。</p><p>由识别符能推导出来的符号串叫句型。如果这里的符号都是终结符，就叫句子。</p><p>一个文法描述的语言为其推导出的句子集合。两文法等价当且仅当其能推导出的句子集合相等。</p><p>给定一个文法，则可唯一地确定其语言；给定一语言，可不唯一地确定其文法。</p><h1 id="使用其它方式描述语言">使用其它方式描述语言</h1><p>正则表达式之类的方法。</p><h1 id="文法和语言的分类chomsky语言分类法">文法和语言的分类——Chomsky语言分类法</h1><ul><li>0型语言：没什么要求，基本是个文法生成的都是。等价于图灵机。</li><li>1型语言：在0型语言的基础上，其文法之任一产生式之右部式长度有限。等价于线性有界自动机。</li><li>2型语言：在1型语言的基础上，其文法之任一产生式之左部式仅有一非终结符。这意味着规约一个非终结符时无需考虑它前后是啥玩意，称为上下文无关文法。等价于下推自动机。</li><li>3型语言：在2型语言的基础上，所有产生式均形如<code>A-&gt;aB|a</code>或所有产生式均形如<code>A-&gt;Ba|a</code>，等价于有限状态自动机。</li></ul><h1 id="推导与语法树">推导与语法树</h1><p>最左或最右推导（每次推导均队最左或最右的非终结符应用重写规则）生成的句型叫最左或最右句型。反过来有最左最右规约。最早被研究的是最右推导，所以规范推导指的是这玩意；分析程序时都是从左往右读所以是先规约左边，所以规范规约指的是这玩意。</p><p>不管你咋推导，只要得到了同一个句子，那语法树就应该是一样的，否则说明这个句子有二义性，生成这个句子的文法就叫二义性文法。</p><p>不能仅根据文法本身判断它是否有二义性。</p><h1 id="句型分析与语法树">句型分析与语法树</h1><p>给定一个符号串，判断它是否是某个文法的句型，这个过程叫句型分析。</p><p>一般有两种技术：</p><ul><li>自顶向下：从识别符号出发，尝试推导出相同的符号串。问题在于，同一个左部符号可能有多个产生式，推导的时候该应用哪个？</li><li>自底向上：从输入串出发，尝试规约到识别符号。问题在于，同样的右部串可能可以规约到多个左部符号，规约到哪个？</li></ul><p>对一棵语法树，每一棵子树（与数据结构上不同，这里叶子不算子树）的叶子构成的串叫一个短语，这意味着它们能被规约到这棵子树的根的符号。只有一层的子树的叶子构成的串叫简单短语，这意味着一次规约就能把它规约到根的符号。最左的简单短语叫句柄，规范规约中将首先被规约。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
编译程序的基本组成与相关概念。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro Linux下配置DosBox+MASM汇编环境</title>
    <link href="http://yoursite.com/2019/11/24/%E6%88%8F%E6%B3%95/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEDosBox-MASM%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/11/24/%E6%88%8F%E6%B3%95/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEDosBox-MASM%E6%B1%87%E7%BC%96%E7%8E%AF%E5%A2%83/</id>
    <published>2019-11-24T08:14:56.000Z</published>
    <updated>2019-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191124_masm.png" /></p><center>坑待填</center><a id="more"></a><p>sudo pacman -S dosbox</p><p>mount c ~/Workspaces/MASM</p><p>MASM5.0，更高的版本需要Win行命令提示符环境才能运行</p><p>masm hw.asm</p><p>文件名长度不能超过8</p><p>link hw</p><p>hw</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191124_masm.png&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
坑待填
&lt;/center&gt;
    
    </summary>
    
    
      <category term="戏法" scheme="http://yoursite.com/categories/%E6%88%8F%E6%B3%95/"/>
    
    
      <category term="汇编" scheme="http://yoursite.com/tags/%E6%B1%87%E7%BC%96/"/>
    
      <category term="DosBox" scheme="http://yoursite.com/tags/DosBox/"/>
    
      <category term="MASM" scheme="http://yoursite.com/tags/MASM/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro Linux下使用opencv_traincascade</title>
    <link href="http://yoursite.com/2019/11/18/Manjaro-Linux%E4%B8%8B%E4%BD%BF%E7%94%A8opencv-traincascade/"/>
    <id>http://yoursite.com/2019/11/18/Manjaro-Linux%E4%B8%8B%E4%BD%BF%E7%94%A8opencv-traincascade/</id>
    <published>2019-11-18T08:34:19.000Z</published>
    <updated>2019-11-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191118_opencv_traincascade.jpg" /></p><center>使用opencv_traincascade训练实现车辆检测。</center><a id="more"></a><p>OpenCV中有个神奇的AdaBoost，通过读入一个xml即可识别出目标区域。此物中文名唤“级联分类器”，“级联”指它由简单分类器级联组成，通过所有分类器的区域即为目标区域。训练时通过对样本的一定操作可生成样本的Haar/LBP/HOG等特征，检测时遍历待识别图片各区域进行特征匹配。</p><h1 id="训练">训练</h1><h2 id="文件准备">文件准备</h2><p>训练文件夹的结构应当如下：</p><ul><li><训练文件夹><ul><li><code>data</code>（训练结果文件夹）</li><li><code>vec</code>（样本集文件夹）</li><li><code>bg</code>（背景集文件夹）</li><li><code>vec.bat</code>（样本集相关信息）</li><li><code>vec.vec</code>（样本集相关信息）</li><li><code>bg.txt</code>（背景集相关信息）</li><li><code>opencv_createsamples</code>（生成<code>pos.vec</code>的工具）</li><li><code>opencv_traincascade</code>（训练的工具）</li></ul></li></ul><p>其中这些东西的名字都可以变。</p><p>首先建立训练文件夹和三个子文件夹，并分别放入样本集图片和背景集图片。样本的大小大约应当几十见方，太大会爆栈；背景应当远大于训练图片，几百见方，且内容较复杂。这是因为程序将训练图片作为滑动窗口在背景上滑动来采集训练图像，如果无法采集到足够多的样本就会报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>错误。</p><p>关于样本集与背景集的比例，有帖子认为一比三是比较合适的，我理解是生活中没有样本的情况（背景）多于有样本，但如果给太多背景影响训练效率。</p><p>放好后在训练文件夹下进入终端，<code>ls ./bg/&gt;bg.txt</code>生成背景集相关信息，<code>ls ./vec/&gt;vec.bat</code>生成样本集相关信息。自动生成的文件最后有个空行需要删掉。有帖子指出这里的文件对换行格式也有要求，实测VSCode中的“LF”格式没问题。</p><p>此时生成的两个文件内应当是形如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">xxx.xxx</span></pre></td></tr></table></figure><p>将之改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx</span></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">bg&#x2F;xxx.xxx</span></pre></td></tr></table></figure><p>这是因为待会调用训练程序时无法指定图片地址，所以地址要在这两个文件中显式指出。</p><p>除此之外，还要指出样本图片（背景不需要）的该样本数目、起始坐标和表示样本宽高</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vec&#x2F;xxx.xxx 1 0 0 xx xx</span></pre></td></tr></table></figure><p>那两个工具在电脑里查找一下，通过anaconda装的就是在anaconda文件夹里某个角落，复制过去即可。</p><h2 id="创建样本">创建样本</h2><p><code>./opencv_createsamples -vec vec.vec -info vec.bat -bg bg.txt -w xx -h xx</code></p><p>注意图片尺寸要对，否则报<code>Error: Assertion failed (_img.rows * _img.cols == vecSize)</code>。</p><p>这里的工具是直接拉过来用的，配套环境可能跟不上。如果报错他想找个啥库找不到之类，以<code>libopencv_core.so.3.2</code>为例：</p><blockquote><p>Find the folder containing the shared library <code>libopencv_core.so.3.2</code>using the following command line. <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;sudo find &#x2F; -name&quot;libopencv_core.so.3.2*&quot;</span></pre></td></tr></table></figure> Then I got the result: <code>/usr/local/&gt;lib/libopencv_core.so.3.2</code>.</p><p>Create a file called <code>/etc/ld.so.conf.d/opencv.conf</code> and write to it the path to the folder where the binary is stored.For example, I wrote <code>/usr/local/lib/</code> to my opencv.conf file.</p><p>Run the command line as follows. <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo ldconfig -v</span></pre></td></tr></table></figure> Try to run the test binary again.</p></blockquote><p>生成<code>vec.vec</code>就是好了。</p><p>可能需要给工具一个执行权限。</p><h2 id="训练-1">训练</h2><p><code>./opencv_traincascade -data data -vec vec.vec -bg bg.txt -numPos xxx -numNeg xxx -numStages 20 -w xx -h xx -minHitRate 0.9999 -maxFalseAlarmRate 0.5 -mode ALL</code>，其中<code>numPos</code>和<code>numNeg</code>是每次训练使用的样本数量，而非你提供了多少样本。这个数量应当足够多（样本数应当大于10，否则报<code>Cascade classifier can’t be trained. Check the used training parameters.</code>），和提供的数量一样保持一比三，并且少于提供的样本数（否则报<code>Traincascade Error:Bad argument(Can not get new positive sample.The most possible reason is insufficient count of samples in given vec-file.</code>）；<code>numStage</code>是训练的级数，默认为20；<code>minHitRate</code>指“分类器的每一级希望得到最小检测率”，一般0.9999；<code>maxFalseAlarmRate</code>，最大虚警率，“影响弱分类器的阈值，表示每个弱分类器将负样本误分为正样本的比例”，一般默认值为0.5。还有其它贼多参数，用到再去查吧。</p><p>官方给的<code>numPos</code>和<code>numNeg</code>计算方法是<code>vec-file number &gt;= (numPos + (numStages-1) * (1 – minHitRate) * numPos) + S</code>。<code>vec-file number</code>是指提供的样本数。</p><p>训练过程中经常报<code>Train dataset for temp stage can not be filled. Branch training terminated.</code>，排除背景信息那个文本文档格式问题的话就是需要更多更大更复杂的背景的意思。</p><h1 id="检测">检测</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">xx = cv2.CascadeClassifier(&lt;xml路径&gt;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">xxx = xx.detectMultiScale(&lt;图片&gt;, scaleFactor=<span class="number">1.1</span>, minNeighbors=<span class="number">55</span>, minSize=(<span class="number">10</span>, <span class="number">10</span>),maxSize=(<span class="number">90</span>,<span class="number">90</span>),flags=cv2.CASCADE_SCALE_IMAGE)</span></pre></td></tr></table></figure><p><code>scaleFactor</code>指每次检测区域扩大多少，1.1就是每次扩大百分之十；<code>minNeighbors</code>大概意思是一个目标区域附近允许有多少目标区域——因为往往对同一个目标，程序会识别出许多临近的目标区域，看情况调调这个参数留一个就行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191118_opencv_traincascade.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
使用opencv_traincascade训练实现车辆检测。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="中医" scheme="http://yoursite.com/categories/%E4%B8%AD%E5%8C%BB/"/>
    
      <category term="分类器" scheme="http://yoursite.com/categories/%E4%B8%AD%E5%8C%BB/%E5%88%86%E7%B1%BB%E5%99%A8/"/>
    
    
      <category term="OpenCV" scheme="http://yoursite.com/tags/OpenCV/"/>
    
      <category term="AdaBoost" scheme="http://yoursite.com/tags/AdaBoost/"/>
    
      <category term="cascade" scheme="http://yoursite.com/tags/cascade/"/>
    
  </entry>
  
  <entry>
    <title>有关摆脱祸乱之源的尝试</title>
    <link href="http://yoursite.com/2019/11/11/%E5%85%B6%E5%AE%83/%E6%9C%89%E5%85%B3%E6%91%86%E8%84%B1%E7%A5%B8%E4%B9%B1%E4%B9%8B%E6%BA%90%E7%9A%84%E5%B0%9D%E8%AF%95/"/>
    <id>http://yoursite.com/2019/11/11/%E5%85%B6%E5%AE%83/%E6%9C%89%E5%85%B3%E6%91%86%E8%84%B1%E7%A5%B8%E4%B9%B1%E4%B9%8B%E6%BA%90%E7%9A%84%E5%B0%9D%E8%AF%95/</id>
    <published>2019-11-11T09:02:23.000Z</published>
    <updated>2019-12-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191111_atropos.jpg" /></p><center>早睡早起的那些事。</center><a id="more"></a><p>因为整天昏昏欲睡，玩Dota的同学称我为啥啥之主记不清了，刚刚查了下可能是叫祸乱之源？</p><p>知乎上有一些类似“如何保持精力旺盛”的问题，答者众，然而翻翻回答，要么是一些傻逼励志书的类似读书笔记的东西（这些书有一个算一个都是傻逼，引用这玩意的答主也是傻逼，有不同意见的请将本网址添加至<code>C:\WINDOWS\system32\drivers\etc\host</code>，自己搭博客写字的好处就是特么的不用管这些友善度），要么是一些莫名其妙似是而非八成就是为了推销保健品的科学术语使劲堆，还有就是分好几十条小tips每一条都令人无法理解这玩意有啥用的例如想着待会你要去吃个啥啥一直想吃的小点心然后你就精神了我觉得我想着待会就能去把你打一顿了比较有用点。</p><p>与其看网上这些编出来骗赞的“经验贴”，不如自己实验。毕竟就算真的是答主发自肺腑的经验之谈，由于人与人之间生活环境、个人身体条件巨大的差别恐怕也很难直接套用，有个答主说他找了女朋友就好了，一想woc真特么有道理，问题是国家不给发我去哪找，充一万话费送吗那我充十万。</p><h1 id="睡眠">1. 睡眠</h1><p>精力不好最大的表现就是昏昏欲睡，所以第一反应是研究睡眠。</p><h2 id="时间">1.1. 时间</h2><p>目前11点到2点间睡，具体没规律。典型的情况是11点半上床，十二点半或更晚些睡着——话说怎么知道自己是几点睡着的啊百度搜出来全是怎么知道自己电脑是32位还是64位。早晨会在上课前半小时起床，无论是几点的课。如果上午没课的话就11点到2点起，不一定。</p><p>如果上午没课睡到中午自然是没有午睡的，否则会有。时间大致是从回到宿舍睡到再不起就迟到，时间根据季节、课表可能从不到20分钟到3小时以上。</p><p>早晨或中午醒来后通常会感觉没睡够，大部分情况下会坚持不睡去上课也就慢慢清醒些，但如果决定趴倒接着睡的话睡他个两节课也无压力。所以必修课选睡选修课必睡——可能是在教室睡也可能是在宿舍，取决于教室与宿舍的距离。</p><h2 id="入睡情况">1.2. 入睡情况</h2><p>午觉通常能迅速睡着，晚上则大概率不可以。说起来我应该算是夜里精神的一类人，即使在全国大学生天文爱好者——勉强算是世界上最能熬夜的一批人——云集的活动里也是少数能连续通宵的……不过毕竟野外天冷，刺激肾上腺素分泌，而且鼓捣些器材啥的也不算废脑子，熬夜难度比不上修福报的程序员。</p><p>晚上临睡会刷B站，上床后入睡前没有玩手机的习惯，但通常会听些什么，郭德纲、唱间小姐姐直播、音声故事和ASMR都有听，主要是为了遮蔽舍友闹出的动静。大晚上的跟那洗衣服洗头也就算了，一会嘿嘿嘿嘿一会哈哈哈哈一会输钱了砸桌子的。</p><h2 id="计划">1.3. 计划</h2><p>睡午觉可能是导致晚上难以迅速入睡的重要原因，大约从高一或略微更早养成的这个习惯，考虑戒掉。其实从三五天前起就开始强制自己不睡午觉了——上课也不睡——目前感受不太好，尤其是下午的课，别说听课，连网络小说都看不太懂了，晚上会有好转，写写作业看看书的智力水平勉强能保持。再过一段时间看看。</p><p><strong>【W+1】</strong>好像现在影响不大了。但还是有影响而且想睡。试试中午看人文社科类的书。</p><p><strong>【W+3】</strong>这两周中午泡茶喝+刷B站，下午好多了。</p><p>不睡午觉的话晚上的睡眠时间可能需要相应增加。暂且尝试11点前出现在床上，如果不睡午觉达成了晚上可以快速入眠的目的的话就是可以睡7个半到八个小时，早晨早起些，把晚上刷B站放在早晨，也算是刺激刺激大脑。</p><p>另外有人整天讲什么蓝光什么褪黑素什么的，强烈怀疑是为了卖保健品。听说蓝色可以使人冷静而理性，所以码代码时把编辑器调成深蓝色背景，蓝色够多吧抑制褪黑素吧，照样困。</p><p><strong>【W+3】</strong>首长呼吁早睡早起，十点睡六点起那种的早。NB。</p><h1 id="饮食">2. 饮食</h1><h2 id="概况">2.1. 概况</h2><p>早餐10点吃（起得晚来不及只能抽课间），1点以后吃午餐（人少不用排队）。晚餐5点到7点间吃，内容都是食堂标配。</p><p>基本不喝牛奶，每天都吃水果。</p><h2 id="计划-1">2.2. 计划</h2><p>有一些人提到饮食的影响，尤其是具体到午睡时比较常见的说法是“中国人午餐吃米高碳水血糖高所以下午困”，早餐上的建议与之类似，也是高蛋白低碳水啥啥啥的。另外也有讨论高油盐、喝水少的影响的。</p><p>高碳水、高油盐这些问题几乎不可能解决，食堂里能顶饱的也就是米饭了，而肉类主要是炸鸡腿、炸鸡排、炸鸡块，少见的家常做法的肉通常比较咸。另外——某些人每顿饭都强调要低碳水、高蛋白——这是不把膳食指南放在眼里吗？</p><p>多喝水是容易做到的。另外可以一定程度上考虑早晨和中午时减少碳水摄入以期在下午获得更好的表现。</p><p><strong>【W+3】</strong>尝试早晨一杯（两勺）UCC117。</p><p><strong>【W+4】</strong>好像没什么卵用，可能还有反效果？百度说缺维B影响咖啡效果，抽空整一瓶试试。</p><p>考虑早餐分开两次在8点和10点吃茶鸡蛋，午餐以肉类为主，已屯三箱王光烧牛肉，晚餐照常。</p><p><strong>【W+1】</strong>午餐只吃肉胃受不了，挺难受的。王光烧牛肉的油冬天会冻成粉状，超级恶心。</p><p>保持吃水果的习惯，另外临睡加一包奶。</p><p>吃上的开销几乎不会增加。</p><h1 id="运动">3. 运动</h1><h2 id="概况-1">3.1. 概况</h2><p>通常不专门运动，但学校大，日常上课破万步。</p><h2 id="计划-2">3.2. 计划</h2><p>把每天晚上刷B站的时间用来跑步试试。</p><p><strong>【W+1】</strong>也不一定跑步，总之晚上不要娱乐，放在早晨起来不太清醒的时候加速清醒。</p><p><strong>【W+4】</strong>这几周几乎没达成这一条件，不过采取前几条措施睡眠已明显改善，说明所谓什么蓝光真的没啥影响。保护视力起见，争取早日养成睡前不玩手机的习惯。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191111_atropos.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
早睡早起的那些事。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/categories/%E5%85%B6%E5%AE%83/"/>
    
      <category term="柴米" scheme="http://yoursite.com/categories/%E5%85%B6%E5%AE%83/%E6%9F%B4%E7%B1%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟存储器</title>
    <link href="http://yoursite.com/2019/11/11/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    <id>http://yoursite.com/2019/11/11/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/</id>
    <published>2019-11-11T07:35:40.000Z</published>
    <updated>2019-11-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="" /></p><center>坑待填</center><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |5|5| |          |1|1|1|1| | |5|5|5|5|4|4|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |3|3| |          | |2|2|2| | |2|1|1|1|1|5|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|4| |          | | |3|3| | |3|3|2|2|2|2|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4|4|4|3|3|3|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">       1 2 3 4     5 6             +-----------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">                                                1 2 3 4 5 6</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"> +-----------------------+          +-----------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"> |1 2 3 4 1 2 5 1 2 3 4 5|          |1 2 3 4 1 2 5 1 2 3 4 5|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">++----------------------++         ++----------------------++</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">|1|1|1|4|4|4|5| | |3|3|3|          |1|1|1|1| | |1| | |1|1|5|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">| |2|2|2|1|1|1| | |1|4|4|          | |2|2|2| | |2| | |2|2|2|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">| | |3|3|3|2|2| | |2|2|5|          | | |3|3| | |5| | |5|4|4|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">+-----------------------+          | | | |4| | |4| | |3|3|3|</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">       1 2 3 4     5 6 7           +-----------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                                                1     2 3 4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  +-----------------------------------------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  |5  0  1  2  0  3  0  4  2  3  0  3  2  1  2  0  1  5  0  1       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">+-+---------------------------------------------------------+-------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">|51|51|51|21|  |20|01|00|21|  |20|31|21|20|  |01|  |00|  |  |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">|  |01|01|00|  |31|31|30|30|  |01|01|00|11|  |11|  |10|  |  |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">|  |  |11|10|  |10|10|41|41|  |41|41|40|40|  |40|  |51|  |  |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">          1     2  3  4  5     6  7  8  9     10    11</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
坑待填
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Struts2中Action的几种传值方式</title>
    <link href="http://yoursite.com/2019/11/07/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/11/07/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F/</id>
    <published>2019-11-07T12:09:33.000Z</published>
    <updated>2019-11-07T12:09:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191107_struts2trans.jpg" /></p><center>struts2中，传统的servlet中的request和response传递参数法仍可使用（但略有不同），并且增加了船新的传值方式。</center><a id="more"></a><h1 id="环境">0. 环境</h1><ul><li>Tomcat 9.0</li><li>MyEclipse 2017 ci10</li><li>Struts 2.5.20</li><li>Manjaro Linux 18.1.0</li><li>JDK 1.8u221</li></ul><h1 id="requestresponse">1. request/response</h1><blockquote><p>为避免与Servlet API耦合在一起，方便Action类做单元测试，Struts2对HttpServletRequest、HttpSession、ServletContext进行了封装，构造了三个Map对象来替代这三种对象。注意，这三个对象与Servlet API中的三个对象是相同的，即，在Action中放入Session中信息，在JSP页面中是可以读出来的。</p></blockquote><p>在Action类中引入上下文类ActionContext，使用<code>getContext()</code>实例化一个对象，就可以通过这个对象获取session和application的map对象，而ActionContext对象本身包含了request的map对象。</p><p>向它们中添加属性只需使用<code>put()</code>方法，若向request添加属性，只需向ActionContext对象中添加。</p><h1 id="getset">2. get/set</h1><p>之前带有传值的示例就是用的这种方式。在action类中定义与jsp页面中上传参数的东西同名的私有成员变量并生成get/set方法即可直接使用，贼方便。</p><p>这种方法的进阶版是传JavaBean——而不是一个个传数据。也非常简单，唯一需要注意的是jsp页面中上传参数的东西的name必须是<code>&lt;JavaBean的名字&gt;.名字</code>。</p><h1 id="示例">3. 示例</h1><p>一个学生登录的界面。用户在<code>index.jsp</code>填写表单，提交后跳转至欢迎界面，在欢迎界面显示输入的信息。</p><h2 id="index.jsp">3.1. index.jsp</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用JavaBean传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transJB"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.id"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.name"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.school"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"stud.pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"stud.mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"stud.mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>使用HttpServletRequest传递参数：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"transSERVLET"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"id"</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"school"</span>&gt;</span>学院<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"school"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pw"</span>&gt;</span>口令<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pw"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mail"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mail"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr></table></figure><h2 id="struts.xml">3.2. struts.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"TransTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transJB"</span> <span class="attr">class</span>=<span class="string">"transTest.JBtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succJB.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"transSERVLET"</span> <span class="attr">class</span>=<span class="string">"transTest.SERVLETtrans"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succSERVLET.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure><h2 id="transtest">3.3. transTest</h2><h3 id="servlettrans.java">3.3.1. SERVLETtrans.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SERVLETtrans</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        ActionContext ctx=ActionContext.getContext();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        Map&lt;String,Object&gt; application=ctx.getApplication();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        String id=request.getParameter(<span class="string">"id"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        String school = request.getParameter(<span class="string">"school"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        String pw =  request.getParameter(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        String mail =  request.getParameter(<span class="string">"mail"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"id: "</span> + id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"name: "</span> + name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"school: "</span> + school);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"pw: "</span> + pw);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"mail: "</span> + mail);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        application.put(<span class="string">"id"</span>,id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        application.put(<span class="string">"name"</span>,name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        application.put(<span class="string">"school"</span>,school);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        application.put(<span class="string">"pw"</span>,pw);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        application.put(<span class="string">"mail"</span>,mail);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="jbtrans.java">3.3.2. JBtrans.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> transTest.StudentBean;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JBtrans</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> StudentBean stud;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> StudentBean <span class="title">getStud</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> stud;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStud</span><span class="params">(StudentBean stud)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.stud = stud;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//public StudentBean stud = new StudentBean();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*System.out.println(stud.getName());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="comment">System.out.println(stud.getSchool());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">System.out.println(stud.getPw());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment">System.out.println(stud.getMail());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">System.out.println(stud.getId());*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="studentbean.java">3.3.3. StudentBean.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> transTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentBean</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String name,id,school,pw,mail;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.name = name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.id = id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSchool</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> school;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(String school)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.school = school;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPw</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> pw;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPw</span><span class="params">(String pw)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.pw = pw;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> mail;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMail</span><span class="params">(String mail)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.mail = mail;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="succjb和succservlet.jsp">3.4. succJB和succSERVLET.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">jb:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号&lt;s:property value="stud.id"/&gt;，&lt;s:property value="stud.school"/&gt;学院的&lt;s:property value="stud.name"/&gt;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是&lt;s:property value="stud.mail"/&gt;，口令是&lt;s:property value="stud.pw"/&gt;。&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">servlet:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &lt;h1&gt;欢迎你，学号$&#123;applicationScope.id&#125;，$&#123;applicationScope.school&#125;学院的$&#123;applicationScope.name&#125;同学！&lt;/h1&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &lt;p&gt;你登记的邮箱是$&#123;applicationScope.mail&#125;，口令是$&#123;applicationScope.pw&#125;。&lt;/p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191107_struts2trans.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
struts2中，传统的servlet中的request和response传递参数法仍可使用（但略有不同），并且增加了船新的传值方式。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/"/>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>Struts2中Action的几种Result</title>
    <link href="http://yoursite.com/2019/11/02/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8DResult/"/>
    <id>http://yoursite.com/2019/11/02/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/Struts2%E4%B8%ADAction%E7%9A%84%E5%87%A0%E7%A7%8DResult/</id>
    <published>2019-11-02T08:53:30.000Z</published>
    <updated>2019-11-02T08:53:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191102_struts2action.png" /></p><center>action跳转至页面、URL或另一个action。</center><a id="more"></a><p>Struts中调用Action后应当获得一个Result。它告诉Struts接下来该干啥。它的属性可以是以下类型：</p><ul><li>dispatcher：请求转发，用于整合JSP的结果类型。</li><li>redirect：请求重定向。值为一个请求URL。</li><li>redirect-action：请求重定向到action。值为定义的action的name。</li><li>plaintext：用于显示某个页面的源代码。</li><li>还有好多种不会的……</li></ul><h1 id="环境">0. 环境</h1><ul><li>Tomcat 9.0</li><li>MyEclipse 2017 ci10</li><li>Struts 2.5.20</li><li>Manjaro Linux 18.1.0</li><li>JDK 1.8u221</li></ul><h1 id="dispatcher">1. dispatcher</h1><p>如果在result标签中没有指定type，则默认是dispatcher类型。此时它指定一个视图资源——通常是JSP页面。</p><h1 id="redirect">2. redirect</h1><p>使用该type的action重定向到一个页面，另一个action或一个网址。</p><h1 id="redirect-action">3. redirect-action</h1><p>使用该type的action使用ActionMapperFactory提供的ActionMapper来重定向请求到另外一个action。与redirect相比，在使用上没有什么区别。</p><h1 id="测试">4. 测试</h1><h2 id="struts.xml中的packge">4.1. struts.xml中的packge</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"ActionTestPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2JSP"</span> <span class="attr">class</span>=<span class="string">"actionTest.JSPaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/succ.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"failed"</span>&gt;</span>/fail.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2URL"</span> <span class="attr">class</span>=<span class="string">"actionTest.URLaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>http://www.bing.com<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"action2ACT"</span> <span class="attr">class</span>=<span class="string">"actionTest.ACTaction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirectAction"</span>&gt;</span>action2URL<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure><h2 id="actiontest包">4.2. actionTest包</h2><h3 id="jspaction类">4.2.1. JSPaction类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSPaction</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String text;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(String text)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"JSPaction set text:"</span>+<span class="keyword">this</span>.text);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.text = text;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"JSPaction get text:"</span>+text);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> text;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="string">"hello world"</span>.equals(<span class="keyword">this</span>.text))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"JSPaction execute success."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"JSPaction execute failed."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"failed"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="urlaction类">4.2.2. URLaction类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLaction</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"URLaction execute success."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="actaction类">4.2.3. ACTaction类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> actionTest;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ACTaction</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"ACTaction return success."</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="jsp页面">4.3. JSP页面</h2><h3 id="index">4.3.1. index</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2JSP"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"text"</span>&gt;</span>Please enter hello world<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call JSP action"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2URL"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call URL action"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"action2ACT"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"call ACT action"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure><h3 id="succ和fail">4.3.2. succ和fail</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>success或者fial:get <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"text"</span>/&gt;</span> .<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr></table></figure><h1 id="带参数的重定向">5. 带参数的重定向</h1><h2 id="redirect-1">5.1. redirect&quot;</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect"</span>&gt;</span>/login.do?userId=$&#123;userId &#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure><h2 id="redirect-action-1">5.2. redirect-action&quot;：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span> <span class="attr">type</span>=<span class="string">"redirect-action"</span>&gt;</span>  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"actionName"</span>&gt;</span>login.do<span class="tag">&lt;/<span class="name">param</span>&gt;</span> 重定向action名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"userId"</span>&gt;</span>userId<span class="tag">&lt;/<span class="name">param</span>&gt;</span>带的参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191102_struts2action.png&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
action跳转至页面、URL或另一个action。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/"/>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>自底向上语法分析</title>
    <link href="http://yoursite.com/2019/10/28/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E5%8F%81%E3%83%BB%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/10/28/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E5%8F%81%E3%83%BB%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</id>
    <published>2019-10-28T11:54:06.000Z</published>
    <updated>2019-12-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191028_ZiDiXlUhYuFaFfXi.png" /></p><center>优先分析法和LR(0)、SLR(1)、LR(1)三种LR分析法。</center><a id="more"></a><h1 id="概述">概述</h1><h2 id="基本思想">基本思想</h2><p>从输入符号串出发，在每一分析步对相应句型中的某个简单短语进行归约。如果最终能归约到识别符号，则该输入符号串是相应文法的句子，否则就不是。</p><h2 id="基本问题">基本问题</h2><p>（假设句型分析过程中每个分析步都对最左的简单短语进行直接归约）如何找出句柄及把此句柄直接归约为哪个非终结符号。</p><h2 id="基本思路">基本思路</h2><ul><li>找出句柄<span class="math inline">\(u\)</span></li><li>找出规则<span class="math inline">\(U\rightarrow u\)</span></li><li>把<span class="math inline">\(u\)</span>直接归约成<span class="math inline">\(U\)</span></li></ul><h2 id="基本概念">基本概念</h2><p><strong>活前缀</strong>:<strong>右句型</strong>（最右推导可得到的句型）的<strong>前缀</strong>（如<code>abc</code>的前缀为<code>a</code>、<code>ab</code>、<code>abc</code>），而且其右端不会超过该句型的最右边<strong>句柄</strong>（句柄是和某个产生式右部匹配的字符串，可以把句柄归约成产生式左部的非终结符）的末端。</p><p>举例，设有文法<span class="math inline">\(G[E]\)</span>：</p><p><span class="math display">\[E\rightarrow E+E|E\times E\]</span></p><p><span class="math inline">\(E+E\times E\)</span>归约成<span class="math inline">\(E+E\)</span>，句柄是<span class="math inline">\(E\times E\)</span>，那么它的活前缀就是<span class="math inline">\(E\)</span>、<span class="math inline">\(E+\)</span>、<span class="math inline">\(E+E\)</span>、<span class="math inline">\(E+E\times\)</span>、<span class="math inline">\(E+E\times E\)</span>。</p><p>这里又可以分为两种情况：</p><p><strong>归态活前缀</strong>： 活前缀的尾部正好是句柄之尾，这时可以进行规约，规约之后又成为另一句型的活前缀。</p><p><strong>非归态活前缀</strong>：句柄尚未形成，需继续移入若干符号之后才能形成句柄。</p><h1 id="自底向上优先分析">自底向上优先分析</h1><h2 id="简单优先分析法">简单优先分析法</h2><p>如果可以确定所有符号的优先级，则只需按优先级顺序规约（当一个符号优先级高于它后面的符号时，向前匹配一个产生式右部进行规约）即可。如果一个文法其任意两个符号间最多只有一种优先关系成立并且所有产生式的右部均不相同，则这么做是可行的，这种文法称为<strong>简单优先文法</strong>。这种分析方式有时用在表达式的分析上，大部分时候不实用。</p><h2 id="算符优先分析法">算符优先分析法</h2><p>如果只确定终结符之间的关系，则可大大提高适用性，但这时的规约不再是规范的。想通过终结符规约，需要所有产生式右部均没有相邻的非终结符（满足此条件称为<strong>算符文法</strong>）且任一对终结符之间仅有大于、小于或等于一种优先关系存在（满足此条件称为<strong>算符优先文法</strong>）。</p><p>如果两个终结符出现在了同一个产生式右部，称他俩优先级相等，写作<span class="math inline">\(a\doteq b\)</span>（点在中间，不会打，下面所有符号同）。</p><p>有类似<span class="math inline">\(A\to \dots aB\ldots\)</span>的产生式且有<span class="math inline">\(B\Rightarrow^{+} \Rightarrow Cb\ldots\)</span>（<span class="math inline">\(C\)</span>可以为空）的<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>，这种要规约的话肯定是先把含<span class="math inline">\(b\)</span>的式子规约到<span class="math inline">\(B\)</span>再规约<span class="math inline">\(a\)</span>，所以称为<span class="math inline">\(a\)</span>的优先级小于<span class="math inline">\(b\)</span>，写作<span class="math inline">\(a\dot&lt; b\)</span>。</p><p>有类似<span class="math inline">\(A\to \dots Bb\ldots\)</span>的产生式且有<span class="math inline">\(B\Rightarrow^{+} \Rightarrow \ldots aC\)</span>（<span class="math inline">\(C\)</span>可以为空）的<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>，这种要规约的话肯定是先把含<span class="math inline">\(a\)</span>的式子规约到<span class="math inline">\(B\)</span>再规约<span class="math inline">\(b\)</span>，所以称为<span class="math inline">\(a\)</span>的优先级大于<span class="math inline">\(b\)</span>，写作<span class="math inline">\(a\dot&gt; b\)</span>。</p><p>以<span class="math inline">\(G[S]\)</span>为例：</p><p><span class="math display">\[\begin{aligned} &amp; S\rightarrow S;G|G\\&amp; G\rightarrow G(T)|H\\&amp; H\rightarrow a|(S)\\&amp; T\rightarrow T+S|S\end{aligned}\]</span></p><p>判断<span class="math inline">\(\doteq\)</span>关系，只需硬看产生式。这里可知<span class="math inline">\((\doteq )\)</span>和隐式的<span class="math inline">\(\# \doteq \#\)</span>。</p><p>判断<span class="math inline">\(\dot&lt;\)</span>关系，需先找到所有终结符后跟非终结符的情况，有<span class="math inline">\(;G\)</span>、<span class="math inline">\((T\)</span>、<span class="math inline">\((S\)</span>、<span class="math inline">\(+S\)</span>和隐式的<span class="math inline">\(\#S\)</span>、<span class="math inline">\(\#G\)</span>。这几个关系中，在前面的终结符的优先级小于后面的非终结符的<span class="math inline">\(FirstV_t\)</span>中元素，这里指的是产生式中的第一个终结符，而非可能产生的句子中的第一个终结符，与First集略有不同。</p><p><span class="math display">\[\begin{aligned} &amp;FirstV_t(S)=\{;\}+FirstV_t(G)=\{;\}+\{(\}+FirstV_t(H)=\{;\}+\{(\}+\{a,(\}=\{;,a,(\}\\&amp;FirstV_t(G)=\{a,(\}\\&amp;FirstV_t(H)=\{a,(\}\\&amp;FirstV_t(T)=\{+\}+FirstV_t(S)=\{+,;,a,(\}\end{aligned}\]</span></p><p>故:</p><ul><li><span class="math inline">\(;G\)</span>有<span class="math inline">\(;\dot&lt; FirstV_t(G)\)</span>；</li><li><span class="math inline">\((T\)</span>有<span class="math inline">\((\dot&lt; FirstV_t(T)\)</span>；</li><li><span class="math inline">\((S\)</span>有<span class="math inline">\((\dot&lt; FirstV_t(S)\)</span>；</li><li><span class="math inline">\(+S\)</span>有<span class="math inline">\(+\dot&lt; FirstV_t(S)\)</span>；</li><li><span class="math inline">\(\#S\)</span>有<span class="math inline">\(\#\dot&lt; FirstV_t(S)\)</span>；</li><li><span class="math inline">\(\#G\)</span>有<span class="math inline">\(\#\dot&lt; FirstV_t(G)\)</span>。</li></ul><p>判断<span class="math inline">\(\dot&gt;\)</span>关系，需先找到所有非终结符后跟终结符的情况，有<span class="math inline">\(S;\)</span>、<span class="math inline">\(G(\)</span>、<span class="math inline">\(T)\)</span>、<span class="math inline">\(S)\)</span>、<span class="math inline">\(T+\)</span>和隐式的<span class="math inline">\(G\#\)</span>。这几个关系中，在前面的非终结符的<span class="math inline">\(LastV_t\)</span>集中元素优先级大于后面的终结符，这里指的是产生式中的最后一个终结符，而非可能产生的句子中的第一个终结符，与Last集略有不同。</p><p><span class="math display">\[\begin{aligned} &amp;LastV_t(S)=\{;\}+LastV_t(G)=\{;\}+\{)\}+LastV_t(H)=\{;\}+\{)\}+\{a,)\}=\{;,a,)\}\\&amp;LastV_t(G)=\{a,)\}\\&amp;LastV_t(H)=\{a,)\}\\&amp;LastV_t(T)=\{+\}+LastV_t(S)=\{+,;,a,)\}\end{aligned}\]</span></p><p>故:</p><ul><li><span class="math inline">\(S;\)</span>有<span class="math inline">\(LastV_t(S)\dot&gt;;\)</span>；</li><li><span class="math inline">\(G(\)</span>有<span class="math inline">\(LastV_t(G)\dot&gt;(\)</span>；</li><li><span class="math inline">\(T)\)</span>有<span class="math inline">\(LastV_t(T)\dot&gt;)\)</span>；</li><li><span class="math inline">\(S)\)</span>有<span class="math inline">\(LastV_t(S)\dot&gt;)\)</span>；</li><li><span class="math inline">\(G\#\)</span>有<span class="math inline">\(LastV_t(G)\dot&gt;\#\)</span>；</li><li><span class="math inline">\(T+\)</span>有<span class="math inline">\(LastV_t(T)\dot&gt;+\)</span>；</li></ul><p>将这些关系构建为一张表：</p><table><thead><tr class="header"><th></th><th>;</th><th>(</th><th>)</th><th>+</th><th>a</th><th>#</th></tr></thead><tbody><tr class="odd"><td>;</td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td></tr><tr class="even"><td>(</td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\doteq\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td></tr><tr class="odd"><td>)</td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td></td><td><span class="math inline">\(\dot&gt;\)</span></td></tr><tr class="even"><td>+</td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td></tr><tr class="odd"><td>a</td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td><span class="math inline">\(\dot&gt;\)</span></td><td></td><td><span class="math inline">\(\dot&gt;\)</span></td></tr><tr class="even"><td>#</td><td><span class="math inline">\(\dot&lt;\)</span></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td><td></td><td><span class="math inline">\(\dot&lt;\)</span></td><td></td></tr></tbody></table><p>没有冲突，该文法是算符优先文法。</p><p>引入最左素短语概念以确定算符优先分析的句柄，素短语是一个包含终结符的短语，且不包含除自身外的其它素短语。最左素短语就是最左的没啥好说的。可以看出，我们可以通过每次规约最左素短语进行规约。在算符优先文法的输入串中，如果一个终结符的优先级大于它两边的终结符的优先级，则它（和它两边的非终结符，如果有）是素短语。故对于算符优先文法的输入串，每次规约最左的、优先级比两边的终结符大的终结符即可，例如<code>a;(a+a)</code>之于上面的文法：</p><table><thead><tr class="header"><th>步骤</th><th>句型</th><th>优先关系</th><th>最左素短语</th><th>规约</th></tr></thead><tbody><tr class="odd"><td>1</td><td><code>#a;(a+a)#</code></td><td><code>#&lt;a&gt;;&lt;(&lt;a&gt;+&lt;a&gt;)&gt;#</code></td><td>a</td><td>H</td></tr><tr class="even"><td>2</td><td><code>#H;(a+a)#</code></td><td><code>#&lt;;&lt;(&lt;a&gt;+&lt;a&gt;)&gt;#</code></td><td>a</td><td>H</td></tr><tr class="odd"><td>3</td><td><code>#H;(H+a)#</code></td><td><code>#&lt;;&lt;(&lt;+&lt;a&gt;)&gt;#</code></td><td>a</td><td>H</td></tr><tr class="even"><td>4</td><td><code>#H;(H+H)#</code></td><td><code>#&lt;;&lt;(&lt;+&gt;)&gt;#</code></td><td>T+S</td><td>T</td></tr><tr class="odd"><td>5</td><td><code>#H;(T)#</code></td><td><code>#&lt;;&lt;(=)&gt;#</code></td><td>(T)</td><td>S</td></tr></tbody></table><p>这一步把<code>(T)</code>规约到<code>S</code>。这里只要求形式相同，具体非终结符是哪个并不关心。</p><table><thead><tr class="header"><th>步骤</th><th>句型</th><th>优先关系</th><th>最左素短语</th><th>规约</th></tr></thead><tbody><tr class="odd"><td>6</td><td><code>#H;S#</code></td><td><code>#&lt;;&gt;#</code></td><td>H;S</td><td>S</td></tr><tr class="even"><td>7</td><td><code>#S#</code></td><td></td><td></td><td></td></tr></tbody></table><p>虽然接受了，但该字符串其实不是文法的句子。毕竟它不是规范的，难免。因此只适合表达式的分析。</p><h1 id="lr分析">LR分析</h1><h2 id="概述-1">概述</h2><p>LR(K)分析器包括总控程序和分析表。</p><p>总控程序根据不同的分析表决定下一步的处理动作。不同文法的总控程序相同，只是分析表不同。</p><p>分析表是LR(K)分析技术的核心，根据具体文法按某种规则构造，由分析动作表和转换表构成。</p><p>分析动作表<code>ACTION[S,y]</code>指明当状态<code>S</code>与向前看符号串<code>y</code>相匹配时所应采取的动作。包括：移进、归约、接受、出错 。</p><p>状态转换表<code>GOTO[S,U]</code>指明当状态<code>S</code>与非终结符号<code>U</code>相匹配时所转换到的下一状态。</p><h2 id="分析过程">分析过程</h2><ol type="1"><li>将初始状态S0与#压进分析栈</li><li>根据栈顶状态和当前输入符号查动作表进行以下工作<ul><li>移进(Si)：当前输入符号进符号栈,新的状态进状态栈,继续扫描.</li><li>归约(rj)：按某规则归约,若规则的右部长度n,则符号栈顶和状态栈顶n个元素同时退栈. 把归约后的左部符号进符号栈,查状态转换表,新的状态进状态栈.</li><li>接受(acc): 分析成功,结束.</li><li>出错(空白): 报告出错信息.</li></ul></li><li>重复(1),直到接受或出错为止.</li></ol><h2 id="lr0分析">LR(0)分析</h2><p>设有文法<span class="math inline">\(G[S]\)</span>：</p><p><span class="math display">\[\begin{aligned}&amp;(1)S\rightarrow A\\&amp;(2)S\rightarrow B\\&amp;(3)A\rightarrow aAb\\&amp;(4)A\rightarrow c\\&amp;(5)B\rightarrow aBb\\&amp;(6)B\rightarrow d\\\end{aligned}\]</span></p><p>为了确保起始符号不出现在产生式右部，并显式地表示EOF，增加一个起始符号S'，得到增广文法<span class="math inline">\(G&#39;[S&#39;]\)</span>：</p><p><span class="math display">\[\begin{aligned}&amp;(0)S&#39;\rightarrow S\#\\&amp;(1)S\rightarrow A\\&amp;(2)S\rightarrow B\\&amp;(3)A\rightarrow aAb\\&amp;(4)A\rightarrow c\\&amp;(5)B\rightarrow aBb\\&amp;(6)B\rightarrow d\\\end{aligned}\]</span></p><p>并引入一个“・”记号，这个记号之前的部分为已经读入（并且匹配）的部分，之后的部分为期望为读入的部分匹配的部分。为了便于识别，手写时将点记号写作“<span class="math inline">\(\Delta\)</span>”。</p><p>为了得到想要的两个表，需要先构建这个文法的自动机。</p><p>首先看起始状态，现在面对一个未知的串，期望其匹配G'，也就是未读入的部分匹配<span class="math inline">\(S\#\)</span>。将现在的状态称为<span class="math inline">\(S_0\)</span>，也就是：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td><td><span class="math inline">\(S\)</span></td><td></td></tr></tbody></table><p>既然期待<span class="math inline">\(S\)</span>，那左部符号为<span class="math inline">\(S\)</span>的产生式也可以被期待。加进去，就变成：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td><td><span class="math inline">\(S\)</span></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta A\)</span></td><td><span class="math inline">\(A\)</span></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta B\)</span></td><td><span class="math inline">\(B\)</span></td><td></td></tr></tbody></table><p>同理，都期待<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>了，那左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td><td><span class="math inline">\(S\)</span></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta A\)</span></td><td><span class="math inline">\(A\)</span></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta B\)</span></td><td><span class="math inline">\(B\)</span></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td><td><span class="math inline">\(a\)</span></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(A\rightarrow \Delta c\)</span></td><td><span class="math inline">\(c\)</span></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td><td><span class="math inline">\(a\)</span></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(B\rightarrow \Delta d\)</span></td><td><span class="math inline">\(d\)</span></td><td></td></tr></tbody></table><p>现在假设对每个项目，真的都读到了它的后继符号，那将进入新的状态。给它们起名字：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S&#39;\rightarrow \Delta S\)</span></td><td><span class="math inline">\(S\)</span></td><td><span class="math inline">\(S_1\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta A\)</span></td><td><span class="math inline">\(A\)</span></td><td><span class="math inline">\(S_2\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(S\rightarrow \Delta B\)</span></td><td><span class="math inline">\(B\)</span></td><td><span class="math inline">\(S_3\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td><td><span class="math inline">\(a\)</span></td><td><span class="math inline">\(S_4\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(A\rightarrow \Delta c\)</span></td><td><span class="math inline">\(c\)</span></td><td><span class="math inline">\(S_5\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td><td><span class="math inline">\(a\)</span></td><td><span class="math inline">\(S_4\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(B\rightarrow \Delta d\)</span></td><td><span class="math inline">\(d\)</span></td><td><span class="math inline">\(S_6\)</span></td></tr></tbody></table><p>对于两个后继为<span class="math inline">\(a\)</span>的，由于其都是“第一个读到<span class="math inline">\(a\)</span>”的情况，所以对应的下一个状态是相同的。</p><p>现在考虑<span class="math inline">\(S_1\)</span>。现在已经读入了<span class="math inline">\(S\)</span>（或者不能叫读入了，因为<span class="math inline">\(S\)</span>并不是一个终结符，不过意思是这么个意思……），所以<span class="math inline">\(\Delta\)</span>要放在<span class="math inline">\(S\)</span>后面，那就是后面没有没有待匹配的东西了，这时进行规约：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_1\)</span></td><td><span class="math inline">\(S&#39;\rightarrow S\Delta\)</span></td><td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td><td>END</td></tr></tbody></table><p><span class="math inline">\(S_2\)</span>和<span class="math inline">\(S_3\)</span>同理：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_2\)</span></td><td><span class="math inline">\(S\rightarrow A\Delta\)</span></td><td><span class="math inline">\(\#S\rightarrow A\)</span></td><td>END</td></tr><tr class="even"><td><span class="math inline">\(S_3\)</span></td><td><span class="math inline">\(S\rightarrow B\Delta\)</span></td><td><span class="math inline">\(\#S\rightarrow B\)</span></td><td>END</td></tr></tbody></table><p>对<span class="math inline">\(S_4\)</span>，已经读入了<span class="math inline">\(a\)</span>，对于<span class="math inline">\(A\rightarrow aAb\)</span>，期望看到<span class="math inline">\(A\)</span>；对于<span class="math inline">\(B\rightarrow aBb\)</span>，期望看到<span class="math inline">\(B\)</span>，所以左部符号为<span class="math inline">\(A\)</span>和<span class="math inline">\(B\)</span>的产生式也可以被期待——注意此时的<span class="math inline">\(\Delta\)</span>在右部式的最左，而不是<span class="math inline">\(a\)</span>后，因为这个期待的<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>还没被读取：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(A\rightarrow a\Delta Ab\)</span></td><td><span class="math inline">\(A\)</span></td><td><span class="math inline">\(S_7\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(B\rightarrow a\Delta Bb\)</span></td><td><span class="math inline">\(B\)</span></td><td><span class="math inline">\(S_8\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(A\rightarrow \Delta aAb\)</span></td><td><span class="math inline">\(a\)</span></td><td><span class="math inline">\(S_4\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(A\rightarrow \Delta c\)</span></td><td><span class="math inline">\(c\)</span></td><td><span class="math inline">\(S_5\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(B\rightarrow \Delta aBb\)</span></td><td><span class="math inline">\(a\)</span></td><td><span class="math inline">\(S_4\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(B\rightarrow \Delta d\)</span></td><td><span class="math inline">\(d\)</span></td><td><span class="math inline">\(S_6\)</span></td></tr></tbody></table><p>这里头两个项目时已经读入了<span class="math inline">\(a\)</span>，期待<span class="math inline">\(A\)</span>或<span class="math inline">\(B\)</span>，是新状态；之后的是已有的状态。</p><p>对于<span class="math inline">\(S_5\)</span>和<span class="math inline">\(S_6\)</span>，当读到期待的符号后后面就没了，期待EOF：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_5\)</span></td><td><span class="math inline">\(A\rightarrow c\Delta\)</span></td><td><span class="math inline">\(\#A\rightarrow c\)</span></td><td>END</td></tr><tr class="even"><td><span class="math inline">\(S_6\)</span></td><td><span class="math inline">\(B\rightarrow d\Delta\)</span></td><td><span class="math inline">\(\#B\rightarrow d\)</span></td><td>END</td></tr></tbody></table><p>对于<span class="math inline">\(S_7\)</span>和<span class="math inline">\(S_8\)</span>，当读到期待的符号后再后还有得读，又多了两种状态：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_7\)</span></td><td><span class="math inline">\(A\rightarrow aA\Delta b\)</span></td><td><span class="math inline">\(b\)</span></td><td><span class="math inline">\(S_9\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_8\)</span></td><td><span class="math inline">\(B\rightarrow aB\Delta b\)</span></td><td><span class="math inline">\(b\)</span></td><td><span class="math inline">\(S_{10}\)</span></td></tr></tbody></table><p>对于<span class="math inline">\(S_9\)</span>和<span class="math inline">\(S_10\)</span>，当读到期待的符号后期待EOF：</p><table><thead><tr class="header"><th>状态</th><th>项目</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_9\)</span></td><td><span class="math inline">\(A\rightarrow aAb\Delta\)</span></td><td><span class="math inline">\(\#A\rightarrow aAb\)</span></td><td>END</td></tr><tr class="even"><td><span class="math inline">\(S_10\)</span></td><td><span class="math inline">\(B\rightarrow aBb\Delta\)</span></td><td><span class="math inline">\(\#B\rightarrow aBb\)</span></td><td>END</td></tr></tbody></table><p>这样所有的状态都分析完了。整合一下这个表，就是：</p><table style="width:100%;"><colgroup><col style="width: 3%" /><col style="width: 73%" /><col style="width: 8%" /><col style="width: 14%" /></colgroup><thead><tr class="header"><th>状态</th><th>项目集</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(\{\\S&#39; \rightarrow \Delta S\\S\rightarrow \Delta A\\S\rightarrow \Delta B\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td><td><span class="math inline">\(S\\A\\B\\a\\c\\a\\d\)</span></td><td><span class="math inline">\(S_1\\S_2\\S_3\\S_4\\S_5\\S_4\\S_6\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_1\)</span></td><td><span class="math inline">\(\{\\S&#39;\rightarrow S\Delta\\\}\)</span></td><td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td><td>END</td></tr><tr class="odd"><td><span class="math inline">\(S_2\)</span></td><td><span class="math inline">\(\{\\S\rightarrow A\Delta\\\}\)</span></td><td><span class="math inline">\(\#S\rightarrow A\)</span></td><td>END</td></tr><tr class="even"><td><span class="math inline">\(S_3\)</span></td><td><span class="math inline">\(\{\\S\rightarrow B\Delta\\\}\)</span></td><td><span class="math inline">\(\#S\rightarrow B\)</span></td><td>END</td></tr><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(\{\\A\rightarrow a\Delta Ab\\B\rightarrow a\Delta Bb\\A\rightarrow \Delta aAb\\A\rightarrow \Delta c\\B\rightarrow \Delta aBb\\B\rightarrow \Delta d\\\}\)</span></td><td><span class="math inline">\(A\\B\\a\\c\\a\\d\)</span></td><td><span class="math inline">\(S_7\\S_8\\S_4\\S_5\\S_4\\S_6\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_5\)</span></td><td><span class="math inline">\(\{\\A\rightarrow c\Delta\\\}\)</span></td><td><span class="math inline">\(\#A\rightarrow c\)</span></td><td>END</td></tr><tr class="odd"><td><span class="math inline">\(S_6\)</span></td><td><span class="math inline">\(\{\\B\rightarrow d\Delta\\\}\)</span></td><td><span class="math inline">\(\#B\rightarrow d\)</span></td><td>END</td></tr><tr class="even"><td><span class="math inline">\(S_7\)</span></td><td><span class="math inline">\(\{\\A\rightarrow aA\Delta b\\\}\)</span></td><td><span class="math inline">\(b\)</span></td><td><span class="math inline">\(S_9\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_8\)</span></td><td><span class="math inline">\(\{\\B\rightarrow aB\Delta b\\\}\)</span></td><td><span class="math inline">\(b\)</span></td><td><span class="math inline">\(S_10\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_9\)</span></td><td><span class="math inline">\(\{\\A\rightarrow aAb\Delta\\\}\)</span></td><td><span class="math inline">\(\#A\rightarrow aAb\)</span></td><td>END</td></tr><tr class="odd"><td><span class="math inline">\(S_{10}\)</span></td><td><span class="math inline">\(\{\\B\rightarrow aBb\Delta\\\}\)</span></td><td><span class="math inline">\(\#B\rightarrow aBb\)</span></td><td>END</td></tr><tr class="even"><td>END</td><td></td><td></td><td></td></tr></tbody></table><p>这样就获得了这个文法的自动机。为了方便程序查找在啥状态下读到啥时该做啥，需要构建分析表。</p><p>当位于状态<span class="math inline">\(S_0\)</span>时，下一位可能的符号有<span class="math inline">\(a\)</span>，<span class="math inline">\(b\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>和<span class="math inline">\(\#\)</span>。由自动机知此时下一位若为<span class="math inline">\(a\)</span>，<span class="math inline">\(c\)</span>，<span class="math inline">\(d\)</span>是符合规则的。因此若下一位是<span class="math inline">\(a\)</span>则移进（shift）一位（就是把<span class="math inline">\(S_0,a\)</span>入分析栈，读入的指针右移一位）并转换到到<span class="math inline">\(S_4\)</span>，<span class="math inline">\(c\)</span>则<span class="math inline">\(S_5\)</span>，<span class="math inline">\(d\)</span>则<span class="math inline">\(S_6\)</span>。</p><table><thead><tr class="header"><th>状态</th><th><span class="math inline">\(a\)</span></th><th><span class="math inline">\(b\)</span></th><th><span class="math inline">\(c\)</span></th><th><span class="math inline">\(d\)</span></th><th><span class="math inline">\(\#\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td>s4</td><td></td><td>s5</td><td>s6</td><td></td></tr></tbody></table><p>也就是从这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">|S0      |x       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>变成这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |...a...                           |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">|        |        |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">|S4      |a       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">|S0      |x       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">|...     |...     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>当位于状态<span class="math inline">\(S_1\)</span>时，如果遇到<span class="math inline">\(\#\)</span>就是分析完了，称之为“acc(ept)”，其它情况不符合自动机。</p><table><thead><tr class="header"><th>状态</th><th><span class="math inline">\(a\)</span></th><th><span class="math inline">\(b\)</span></th><th><span class="math inline">\(c\)</span></th><th><span class="math inline">\(d\)</span></th><th><span class="math inline">\(\#\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_1\)</span></td><td></td><td></td><td></td><td></td><td>acc</td></tr></tbody></table><p>当位于状态<span class="math inline">\(S_2\)</span>时，栈中的内容是<span class="math inline">\(A\)</span>，要进行规约（reduce）。</p><p>根据<span class="math inline">\(S_2\)</span>的规则，也就是规则1，<span class="math inline">\(A\)</span>规约后将变成<span class="math inline">\(S\)</span>。所以在表里填上“r1”表示根据规则1规约，并弹出被规约的内容，这里只有<span class="math inline">\(S_2,A\)</span>，规约后得到的非终结符是使用的规则的左部符号，到达栈顶状态遇到这一符号的状态。</p><table><thead><tr class="header"><th>状态</th><th><span class="math inline">\(a\)</span></th><th><span class="math inline">\(b\)</span></th><th><span class="math inline">\(c\)</span></th><th><span class="math inline">\(d\)</span></th><th><span class="math inline">\(\#\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_2\)</span></td><td>r1</td><td>r1</td><td>r1</td><td>r1</td><td>r1</td></tr></tbody></table><p>也就是由（这个例子中只有<span class="math inline">\(S_0\)</span>后继符号是<span class="math inline">\(S\)</span>，此时后继状态是<span class="math inline">\(S_1\)</span>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S2      |A       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>变成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |.......                           |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S1      |S       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>为方便查找，还要再搞一个将状态与非终结符联系起来的表，为表区分，之前的称为“ACTION”表，后者称为“GOTO”表。</p><table><thead><tr class="header"><th>状态</th><th><span class="math inline">\(S\)</span></th><th><span class="math inline">\(A\)</span></th><th><span class="math inline">\(B\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td>1</td><td></td><td></td></tr></tbody></table><p><span class="math inline">\(S_3\)</span>同样是要规约，要从<span class="math inline">\(B\)</span>规约到<span class="math inline">\(S\)</span>也就是按规则2:</p><table><thead><tr class="header"><th>状态</th><th><span class="math inline">\(a\)</span></th><th><span class="math inline">\(b\)</span></th><th><span class="math inline">\(c\)</span></th><th><span class="math inline">\(d\)</span></th><th><span class="math inline">\(\#\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_3\)</span></td><td>r2</td><td>r2</td><td>r2</td><td>r2</td><td>r2</td></tr></tbody></table><p>依此类推即可获得分析表。</p><p>这种分析方法的问题在于，一旦进入某个可以规约的状态，无论输入是什么都会规约。这可能导致错误的规约。</p><h2 id="slr1分析">SLR(1)分析</h2><p>对大部分文法，会出现移进与规约的冲突和规约与规约的冲突。</p><p>设有文法<span class="math inline">\(G[S]\)</span>：</p><p><span class="math display">\[\begin{aligned}&amp;(1)S\rightarrow A\\&amp;(2)A\rightarrow aAd\\&amp;(3)A\rightarrow aAb\\&amp;(4)A\rightarrow \epsilon\end{aligned}\]</span></p><p>写为<span class="math inline">\(G&#39;[S&#39;]\)</span>：</p><p><span class="math display">\[\begin{aligned}&amp;(0)S&#39;\rightarrow S\\&amp;(1)S\rightarrow A\\&amp;(2)A\rightarrow aAd\\&amp;(3)A\rightarrow aAb\\&amp;(4)A\rightarrow \epsilon\end{aligned}\]</span></p><p>构造自动机：</p><table style="width:100%;"><colgroup><col style="width: 2%" /><col style="width: 65%" /><col style="width: 19%" /><col style="width: 11%" /></colgroup><thead><tr class="header"><th>状态</th><th>项目集</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(\{\\S\rightarrow \Delta A\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta \\\}\)</span></td><td><span class="math inline">\(A\\a\\a\\\#A\rightarrow \epsilon\)</span></td><td><span class="math inline">\(S_1\\S_2\\S_2\\END\)</span></td></tr></tbody></table><p>可以发现这里面既有移进项又有规约项。这种情况就说这个文法不是LR(0)的。如果一个文法的自动机同时存在不止一个规约项目，它也不是LR(0)的。</p><p>继续分析：</p><table><colgroup><col style="width: 2%" /><col style="width: 70%" /><col style="width: 18%" /><col style="width: 8%" /></colgroup><thead><tr class="header"><th>状态</th><th>项目集</th><th>后继符号</th><th>后继状态</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td><span class="math inline">\(\{\\S&#39;\rightarrow \Delta S\\S\rightarrow \Delta A\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta \\\}\)</span></td><td><span class="math inline">\(S\\A\\a\\a\\\#A\rightarrow \epsilon\)</span></td><td><span class="math inline">\(1\\2\\3\\3\\END\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_1\)</span></td><td><span class="math inline">\(\{\\S&#39;\rightarrow S\Delta\\\}\)</span></td><td><span class="math inline">\(\#S&#39;\rightarrow S\)</span></td><td><span class="math inline">\(END\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_2\)</span></td><td><span class="math inline">\(\{\\S\rightarrow A\Delta\\\}\)</span></td><td><span class="math inline">\(\#S\rightarrow A\)</span></td><td><span class="math inline">\(END\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_3\)</span></td><td><span class="math inline">\(\{\\A\rightarrow a\Delta Ad\\A\rightarrow a\Delta Ab\\A\rightarrow \Delta aAd\\A\rightarrow \Delta aAb\\A\rightarrow \epsilon \Delta\\\}\)</span></td><td><span class="math inline">\(A\\A\\a\\a\\\#A\rightarrow \epsilon\)</span></td><td><span class="math inline">\(4\\4\\3\\3\\END\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td><span class="math inline">\(\{\\A\rightarrow aA\Delta d\\A\rightarrow aA\Delta b\\\}\)</span></td><td><span class="math inline">\(d\\b\)</span></td><td><span class="math inline">\(5\\6\)</span></td></tr><tr class="even"><td><span class="math inline">\(S_5\)</span></td><td><span class="math inline">\(\{\\A\rightarrow aAd\Delta\\\}\)</span></td><td><span class="math inline">\(\#A\rightarrow aAd\)</span></td><td><span class="math inline">\(END\)</span></td></tr><tr class="odd"><td><span class="math inline">\(S_6\)</span></td><td><span class="math inline">\(\{\\A\rightarrow aAb\Delta\\\}\)</span></td><td><span class="math inline">\(\#A\rightarrow aAb\)</span></td><td><span class="math inline">\(END\)</span></td></tr></tbody></table><p>除上述冲突外无其它冲突。冲突的<span class="math inline">\(A\)</span>的Follow集和这里的两个<span class="math inline">\(a\)</span>无交集，故可以根据这个进行判断是移进还是规约，这种叫SLR(1)文法，因为根据下一个输入字符即可判断执行什么操作。之所以是SLR而不是LR，是因为它仅在冲突时进行判断，不冲突时仍然是不管输入啥都规约。这导致有时仍然会错误地规约。一个项目集中有两个规约的情况类似，考察两个左部符号的Follow集，没有交集的话也OK。</p><p>类似LR(0)地可获得分析表。唯一区别就是有些地方状态既可能要移进也可能要规约，而不是要规约一整行都是规约：</p><table><thead><tr class="header"><th>状态</th><th>a</th><th>b</th><th>d</th><th>#</th><th>A</th><th>S</th></tr></thead><tbody><tr class="odd"><td><span class="math inline">\(S_0\)</span></td><td>s3</td><td>r4</td><td>r4</td><td>r4</td><td>2</td><td>1</td></tr><tr class="even"><td><span class="math inline">\(S_1\)</span></td><td></td><td></td><td></td><td>acc</td><td></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_2\)</span></td><td>r1</td><td>r1</td><td>r1</td><td>r1</td><td></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_3\)</span></td><td>s3</td><td>r4</td><td>r4</td><td>r4</td><td>4</td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_4\)</span></td><td></td><td>s6</td><td>s5</td><td></td><td></td><td></td></tr><tr class="even"><td><span class="math inline">\(S_5\)</span></td><td>r2</td><td>r2</td><td>r2</td><td>r2</td><td></td><td></td></tr><tr class="odd"><td><span class="math inline">\(S_6\)</span></td><td>r3</td><td>r3</td><td>r3</td><td>r3</td><td></td><td></td></tr></tbody></table><p>以分析<code>ab#</code>为例，初始为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +---^------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |     |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |     +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>S0遇a，故入栈S3和a，指针后移：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>S3遇b，按规则(4)规约。规则(4)右部串长度为0，故弹出栈顶前0个元素。弹完栈顶是(S3,a)，规则(4)左部符号为A，故S3遇A，将S4和A入栈。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----^-----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |      |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |      +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S4      |A       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>S4遇b，入栈S6和b，指针后移。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +-----^----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |       +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S6      |b       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S4      |A       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">|S3      |a       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>S6遇#，按规则(3)规约。规则(3)右部串长度为3，故弹出栈顶三元素，弹出后栈顶为(S0,#)，规则(3)左部符号为A。S0遇A，入栈S2和A。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +----------------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">|status  |symble  | |   ab#                            |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+-----------------+ +-----^----------------------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">|        |        |       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">|        |        |       +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">|S2      |A       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">|S0      |#       |</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">+-----------------+</span></pre></td></tr></table></figure><p>S2遇#，按规则(1)规约，弹一对元素，S0遇S转S1，遇#，接受。</p><h2 id="lr1分析">LR(1)分析</h2><p>上面讲项目集规约与移进、规约与规约出现冲突时考察交集，那万一有呢？当时是通过比较Follow集，但Follow集只是个笼统的说法，一个非终结符的Follow集中的某个元素可能在某些句型中并不会出现。考虑在自动机的每一个产生式中标注其推导出的句型可能的后缀，当遇到可能遇到的后缀时才进行规约。这不止可以避免冲突，还可以避免误规约。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191028_ZiDiXlUhYuFaFfXi.png&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
优先分析法和LR(0)、SLR(1)、LR(1)三种LR分析法。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="深蓝" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/"/>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E6%B7%B1%E8%93%9D/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="编译原理" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
      <category term="语法分析" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>在MyEclipse中使用Struts2框架</title>
    <link href="http://yoursite.com/2019/10/24/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8Struts2%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2019/10/24/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/%E5%9C%A8MyEclipse%E4%B8%AD%E4%BD%BF%E7%94%A8Struts2%E6%A1%86%E6%9E%B6/</id>
    <published>2019-10-24T10:32:29.000Z</published>
    <updated>2019-10-24T10:32:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191024_struts.png" /></p><center>贼难配的环境。学委甚至到快结课才配好……</center><a id="more"></a><p>CSDN——尤其是CSDN论坛，是好东西，也是坏东西。里面有许许多多大神分享有用的经验，但更多的是半吊子误人子弟，给出一些过时的、没用的建议。小白面对茫茫多的信息只能一边望洋兴叹，祈祷下一个看到的解决方案能稍微粘点边；一边对遇到的每行代码、每条命令追根究底，努力摆脱NOOB的身份。</p><h1 id="环境">0. 环境</h1><ul><li>Tomcat 9.0</li><li>MyEclipse 2017 ci10</li><li>Struts 2.5.20</li><li>Manjaro Linux 18.1.0</li><li>JDK 1.8u221</li></ul><h1 id="struts2的下载">1. Struts2的下载</h1><p>在<code>http://struts.apache.org/download.cgi</code>下载zip包<code>struts-版本-min-lib.zip</code>和<code>struts-版本-all.zip</code>。</p><p>前者包含的Struts2所必须的最少的包，后者包含了所有的包和例程。</p><h1 id="新建项目与导包">2. 新建项目与导包</h1><p>新建一个动态Web项目——有人说这里对动态Web项目的版本有要求需要2.5，实测没有——然后例如取名为“Struts2_HelloWorld”。先不急着完成，去下一步勾选“Generate Web.xml 啥啥啥”那一项和“Generate index.jsp 啥啥啥”（这个缺省是勾选的）。前者将在WEB-INF下创建一个Web.xml，Struts2请求需要先通过其中定义的过滤器。有人说这里需要将“WebRoot”修改为“WebContent”，实测两者均可，估计改其它名也没影响。</p><p>将前面下载的<code>struts-版本-min-lib.zip</code>中的包丢到<code>WEB-INF/lib/</code>，选中这些包（选中的是包而不是文件夹lib），右键构建路径。随后工作空间栏中项目根目录下将出现一个“Web应用程序库”，里面显示这些包。不要导入ALL版的lib，因为这些包有一些冲突，最简单的冲突原因例如如果两个包中有同样路径的类，此时某包先加载，则后加载的包中同名的类无法加载，导致一些函数无法找到等。网上很多人都介绍了最小需求包集合，但不少都与官方的有出入。</p><p>如果包导多了，由于已经建立了依赖所以无法直接删除。在工作目录视图中右击项目根文件夹，选构建路径，配置构建路径，这里显示了所有已导入的包，移除想删的——或者所有的也行，再移除整个Web应用程序库。然后可以在lib文件夹下删除包，再重新导入即可。</p><h1 id="编写action">3. 编写Action</h1><p>在<code>src/</code>新建一个类，例如包名为“helloWorld.action”，类名为“HelloWorld”。在自动生成的类中添加一个<code>execute()</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"进入action。"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"success"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"赋值text。"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">"Hello World !"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>这里HelloWorld类并不需要继承什么东西，有<code>execute()</code>并返回一个String即可。这里希望执行action后跳转到的页面能够根据action的情况决定显示什么内容，而不是一个写死的jsp，所以加一个get函数，命名规则和JavaBean一样，跳转过去后struts2的<code>s:property</code>标签可以通过函数名找到这个函数从中获取值。多加一个<code>println()</code>便于判断是否成功进入action。</p><h1 id="编写页面">4. 编写页面</h1><p>这个测试例程将有两个页面，一个是主页，一个是执行action后将要跳转到的页面。主页已经生成好了，为<code>body</code>添加一个按钮：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"hello"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Say Hello to the World!"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure><p>用户按下这个按钮，将调用<code>hello.action</code>。</p><p>除此之外还需要在jsp第一行加上<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>，这句话指明了这个页面将使用struts2的标签，而且这些标签将在s之前。</p><p>另外再创建action将跳转到的页面，例如命名为helloworld.jsp，与index同样位于<code>WebRoot/</code>。</p><p>在body中添加<code>&lt;h1&gt;&lt;s:property value=&quot;text&quot;/&gt;&lt;/h1&gt;</code>，并在一开始添加<code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&gt;</code>。</p><h1 id="添加配置文件">5. 添加配置文件</h1><h2 id="struts.xml">5.1. struts.xml</h2><p><code>struts.xml</code>将URL、action类和jsp页面相关联。它规定了当收到某个URL请求时应当调用哪个类，并根据这个类的返回值决定跳转至哪个jsp页面。</p><p>可以从之前下载的<code>struts-版本-all.zip</code>中的<code>apps/</code>找一个例程，在其<code>WEB-INF/classes/</code>会有一个该文件。将该文件复制到项目的<code>src/</code>——或者什么其它地方，这个似乎无所谓，无论这个文件在项目的哪里IDE都会在<code>WEB-INF/classes/</code>下创建一个对应的配置文件。建议复制例程的该文件而不是自己编写，因为这样更不容易出错。</p><p>复制过来后将<code>&lt;struts&gt;&lt;/struts&gt;</code>中的内容修改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.devMode"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"HelloWorldPkg"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span>     </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">class</span>=<span class="string">"helloWorld.action.HelloWorld"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>/helloworld.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></pre></td></tr></table></figure><p>设置<code>struts.devMode</code>为true可以输出更多日志信息，HelloWorldPkg中的hello这个action规定：当URL为<code>&lt;网站地址&gt;/hello</code>时，调用<code>helloWorld.action</code>包中的<code>HelloWorld</code>类，根据<code>execute()</code>的返回值决定跳转；当返回值为<code>&quot;success&quot;</code>时跳转至<code>/helloworld.jsp</code>。</p><h2 id="web.xml">5.2. Web.xml</h2><p>新建项目时已经自动生成了这个文件。将<code>&lt;Web-app&gt;&lt;/Web-app&gt;</code>内的内容修改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Struts2_HelloWorld<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></pre></td></tr></table></figure><p>这一段内容指定index.jsp为welcome文件。然后配置了Struts2的过滤器来运行任何匹配模式/*的URL，即所有的URL都需要拦截后由Struts进行判断，如果程序决定要调用某个action，再由前面的<code>struts.xml</code>决定调用哪一个。这需要使用一个<code>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</code>类。注意在不同版本中这个类是不同的。</p><p>有帖子指出<code>welcome-file-list</code>必须放在最后。似乎这并不是必须的。</p><h2 id="log4j2.xml">5.3. log4j2.xml</h2><p>这个包似乎与日志生成有关，导入方法类似<code>struts.xml</code>，不导入的话会报错<code>ERROR StatusLogger Log4j2 could not find a logging implementation.</code>，但因为只是日志相关所以不影响使用。我导入了也会报错。可能是因为有依赖没搞好？先不管它。</p><h1 id="尾声">6. 尾声</h1><p>右击项目，运行方式-&gt;在服务器上运行即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191024_struts.png&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
贼难配的环境。学委甚至到快结课才配好……
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/Struts2/"/>
    
    
      <category term="JSP" scheme="http://yoursite.com/tags/JSP/"/>
    
      <category term="MyEclipse" scheme="http://yoursite.com/tags/MyEclipse/"/>
    
      <category term="Struts2" scheme="http://yoursite.com/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>编写一个注册页面并使用JS函数校验</title>
    <link href="http://yoursite.com/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%B9%B6%E4%BD%BF%E7%94%A8JS%E5%87%BD%E6%95%B0%E6%A0%A1%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%E5%B9%B6%E4%BD%BF%E7%94%A8JS%E5%87%BD%E6%95%B0%E6%A0%A1%E9%AA%8C/</id>
    <published>2019-10-11T12:09:01.000Z</published>
    <updated>2019-10-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_JSsubmit.jpg" /></p><center>实现了简单的参数传递与判断。不连接数据库。</center><a id="more"></a><p>首先新建一个Web Project，在WebRoot下新建一个html、一个js和一个css文件。将html自动生成的添加css文件的那段注释改成能用的，再添加<code>&lt;script type=&quot;text/javascript&quot; src=&quot;./js.js&quot;&gt;&lt;/script&gt;</code>引入js文件。</p><p>body中就是一个表格，action是跳转，单击时希望使用js文件中的函数进行校验。</p><p>在表单中加上<code>οnsubmit=&quot;return false;&quot;</code>可以阻止表单提交。但是对于如下的代码<code>οnsubmit=&quot;submitTest();&quot;</code>，如果提交表单时submitTest()返回false，实际情况是表单正常提交。原因在于如果这样写，相当于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    submitTest();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>而我们希望得到这样的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Form.prototype.onsubmit &#x3D; function() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    return submitTest();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"succ.jsp"</span> <span class="attr">name</span>=<span class="string">"form"</span> <span class="attr">onsubmit</span>=<span class="string">"return signIn();"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">""</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"name"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">onblur</span>=<span class="string">"checkName();"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">onfocus</span>=<span class="string">"clearName();"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"在此输入用户名"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_name"</span>&gt;</span>请输入用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"pw"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">onblur</span>=<span class="string">"checkPw();"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_pw"</span>&gt;</span>密码由六个或以上字符组成<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>=<span class="string">"required"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"repw"</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">onblur</span>=<span class="string">"checkRepw();"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"tip_repw"</span>&gt;</span>请确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex1"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"sex0"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">required</span>=<span class="string">"required"</span>/&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"PE"</span>&gt;</span>体育</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"music"</span>&gt;</span>音乐</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"chinese"</span>&gt;</span>文学</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span> <span class="attr">value</span>=<span class="string">"other"</span>&gt;</span>其他</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>出生年月<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"year"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1990"</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1991"</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1992"</span>&gt;</span>1992<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1993"</span>&gt;</span>1993<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1994"</span>&gt;</span>1994<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1995"</span>&gt;</span>1995<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1996"</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1997"</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1998"</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1999"</span>&gt;</span>1999<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2000"</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>年</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"month"</span> &gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"7"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"8"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"9"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"10"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"11"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"12"</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>月</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>个人简介<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"4"</span> <span class="attr">cols</span>=<span class="string">"25"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span> <span class="attr">class</span>=<span class="string">"bt"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr></table></figure><p><code>required=&quot;required&quot;</code>可以要求该项为必填，否则无法提交。select中无法使用该属性，可以使用<code>&lt;option selected=&quot;selected&quot;&gt;2000&lt;/option&gt;</code>设定默认选择的项。</p><p>onblur和onfocus分别在对象失去和获得焦点时调用函数，可以实时地提醒用户一些信息。</p><p>比如将检查是否提交的函数分为几个小部分，在用户填写表单各小部分对应的对象获得和失去焦点时就调用，即时地给出提醒：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value==<span class="string">"在此输入用户名"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value = <span class="literal">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkName</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value !=<span class="string">"在此输入用户名"</span>&amp;&amp;<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"你好，"</span>+<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_name'</span>).innerHTML=<span class="string">"请输入用户名"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value=<span class="string">"在此输入用户名"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)([0-9A-Za-z]*[\x00-\x2F\x3A-\x40\x5B-\xFF][0-9A-Za-z]*)&#123;2,&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"天呐这么复杂的密码你记得住？"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^(?=.&#123;6,16&#125;)[0-9A-Za-z]*[\x00-\x2f\x3A-\x40\x5B-\xFF][0-9A-Za-z]*$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这强度凑活吧……"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/^[0-9A-Za-z]&#123;6,16&#125;$/</span>.test(<span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>).value))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"这密码我一刻钟就能破解！"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'tip_pw'</span>).innerHTML=<span class="string">"密码由六至十六个字符组成"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkRepw</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pw = <span class="built_in">document</span>.getElementById(<span class="string">'pw'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> repw = <span class="built_in">document</span>.getElementById(<span class="string">'repw'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tip_repw = <span class="built_in">document</span>.getElementById(<span class="string">'tip_repw'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(pw.value == repw.value&amp;&amp;pw.value!=<span class="string">""</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">tip_repw.innerHTML=<span class="string">"√"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(repw.value==<span class="string">""</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">tip_repw.innerHTML=<span class="string">"请确认密码"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">tip_repw.innerHTML=<span class="string">"密码不一致"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">signIn</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!checkName())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"请检查用户名！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!checkPw())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"请检查密码！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!checkRepw())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"请重新确认密码！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>HTML DOM 定义了多种查找元素的方法，如果需要查找文档中的一个特定的元素，最有效的方法是 getElementById()。在写html时给需要被查找的元素一个id属性，为它指定一个（在文档中）唯一的名称，然后就可以用该id查找想要的元素，该函数返回元素对象。<strong>注意要用.value获取它的“值”</strong>，因为返回的只是标签，而想要的“值”是标签里的东西。而修改的话就是修改<code>innerHTML</code>也就是标签里面的html语句，另外还有一个<code>innerText</code>类似前者，但是把内容都当文本理解（有点类似赋值给value？）。例如添加<code>&lt;h1&gt;test&lt;\h1&gt;</code>，前者显示h1级别的<code>test</code>，后者显示<code>&lt;h1&gt;test&lt;\h1&gt;</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_JSsubmit.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
实现了简单的参数传递与判断。不连接数据库。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="JavaScript与jQuery" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro Linux下配置JS&amp;jQuery开发环境</title>
    <link href="http://yoursite.com/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJS-jQuery%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/10/11/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/Manjaro-Linux%E4%B8%8B%E9%85%8D%E7%BD%AEJS-jQuery%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2019-10-11T12:07:10.000Z</published>
    <updated>2019-10-11T12:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_spket.jpg" /></p><center>之前的JSP环境直接就可以拿来写JS,但是并没有语法提示等,因此需要装个插件解决这个问题。</center><a id="more"></a><p>javaScript是一种脚本语言。可以以<code>&lt;script&gt; code &lt;/script&gt;</code>的形式混合在HTML页面中编写动态网页。</p><h1 id="环境">0. 环境</h1><ul><li>MyEclipse 2017 Ci10</li><li>jquery-migrate-1.4.1.js</li><li>spket-1.6.23</li></ul><h1 id="安装spket">1. 安装spket</h1><p>spket是一个JS的IDE，但也可以作为eclipse或MyEclipse的插件使用。下载<code>https://spket.com/download.html</code>中的plugin版本得到一个zip，将其中两个文件夹直接与MyEclipse目录下同名文件夹合并即可。</p><p>为了让它可以对jQuery进行智能提示，还需为它指定jQuery的文件，在<code>https://jquery.com/download/</code>右击另存为uncompressed版本。网上说压缩过的min版本会各种报错。</p><h1 id="配置spket">2. 配置spket</h1><p>使用<code>.../&quot;MyEclipse 2017 CI&quot;/myeclipse -clean</code>启动MyEclipse。直接启动会报错，可能是因为插件缓存的缘故。注意因为MyEclipse 2017默认安装目录中间有空格所以要加引号。启动后在窗口-&gt;首选项-&gt;spket-&gt;JavaScript Profiles中new一个profile，比如取名为”jQuery“，点击Add Library，选择jQuery；再点击Add File，选择jQuery的<code>.js</code>。最后点Default。</p><p>在窗口-&gt;首选项–&gt;常规–&gt;编辑器–&gt;文件关联中将<code>*.js</code>的缺省编辑器设为“Spket JavaScript Editor”即可。</p><p>右键项目名称，点击Reload JavaScript Profile然后再打开JS文件（可能需要重启），应当会出现语法提示和智能补全。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191011_spket.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
之前的JSP环境直接就可以拿来写JS,但是并没有语法提示等,因此需要装个插件解决这个问题。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="表世界" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/"/>
    
      <category term="JavaScript与jQuery" scheme="http://yoursite.com/categories/%E8%A1%A8%E4%B8%96%E7%95%8C/JavaScript%E4%B8%8EjQuery/"/>
    
    
      <category term="MyEclipse" scheme="http://yoursite.com/tags/MyEclipse/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>《城市：天际线》中的有用模组</title>
    <link href="http://yoursite.com/2019/10/07/%E5%85%B6%E5%AE%83/%E3%80%8A%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%8B%E4%B8%AD%E7%9A%84%E6%9C%89%E7%94%A8%E6%A8%A1%E7%BB%84/"/>
    <id>http://yoursite.com/2019/10/07/%E5%85%B6%E5%AE%83/%E3%80%8A%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%8B%E4%B8%AD%E7%9A%84%E6%9C%89%E7%94%A8%E6%A8%A1%E7%BB%84/</id>
    <published>2019-10-07T12:49:21.000Z</published>
    <updated>2019-12-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191007_skylinemod.jpg" /></p><center>记录好用的《发际线》模组。感谢所有模组的作者！常年更新。</center><a id="more"></a><p>尽管即使打开蓝灯也无法在steam客户端和游戏内访问创意工房，但在浏览器中的订阅也可以立即生效。因此可以在游戏中打开游戏内浏览器，再将地址复制至浏览器进行订阅操作。</p><h1 id="影响建造的模组">影响建造的模组</h1><h2 id="fine-road-anarchy和fine-road-tool">fine road anarchy和fine road tool</h2><p>前者屏蔽道路的碰撞判定。是极重要的前置模组。后者 强化了道路编辑模式下那个调整每次抬升高度的功能，点开后分为三行，除第一行保留原有功能外，第二行允许强制道路类型，第三行四个功能分别为取消道路角度限制、智能弯曲道路、自动吸附和道路与其它元素的无冲突（例如开启后升级道路不会挤没建筑）。</p><h2 id="move-it">Move It</h2><p>启用该模组后将在右下角推土机的左边新增一个十字箭头样的按钮，提供了移动已安放物品的功能。</p><p>点开后从左至右共九个按钮。</p><p>前两个按钮是导入与导出，可以导入与导出当前选中的元素。导出似乎与主题相关，将导出的内容导入到不同主题的地图时，不兼容的建筑不会被导入（似乎是因为这个，有待继续测试，总之道路没问题，低密度住宅区没问题，会成为“历史性建筑”出现，太阳能发电站垃圾焚烧厂收费站电车站各种直升机中心没问题，而小学警局消防局等和商业区等都无法导入）。之后两个选项是地形跟随与辅助线，前者控制在移动部分类型元素如房屋时其高度是否跟随地形变化，后者开启时为道路等提供角度为90°的整倍时的吸附。</p><p>之后的四个选项提供点选择（可使用shift多选）、区域选择、复制和删除的功能。其中复制可以使用ctrl+c，并支持ctrl+z撤销，区域选择功能提供了大量完善的分类功能，且可使用类似Ps中吸管的类型选定工具。</p><p>最后一个上三角图标提供了大量有用功能。从下往上数第一个柱状图一样的图标，先选中一个建筑或道路节点等，再选中它，再选另一个元素，即可使前者与后者同高。选中一个元素后再点一下第二个长相与第一个类似的图标就可以使它的高度恢复贴地状态（注意，对高架等使用此功能会使路面和柱子全部贴地，但不影响通行）。选中一段路的所有点和段后再点一下第三个像线性拟合一样的图标后再点击某两个节点，则选中道路的角度将与两点连线与地面之夹角相同。选中一些建筑后点击第四个五边形图标或第五个闪电形图标再点击其中或另外的一建筑，可使所有被选中建筑朝向被点击建筑的方向，区别在于前者的旋转中心为各建筑中心，后者为整体的中心。选中后点击第六个图标则可打乱方向。选中一些元素后点击上数第一个图标再点一个线性元素可实现镜面复制。</p><p>另外贴合右侧边缘处还提供了两个视图。</p><h2 id="network-extentions-2">network extentions 2</h2><p>提供更多道路种类。例如公交车道与人行道。尤其人行道可做成低级道路避免车辆抄近道。</p><h2 id="ploppable-rico">Ploppable RICO</h2><p>RICO指的是住宅、商业等四个区那种会生长的建筑（Residential住宅、Industrial工业、Commerical商业、Office办公，首字母RICO）的一种创意工房版本。启用此模组后会在工具栏右侧出现一个新的左绿右黄下蓝的图标，在创意工房订阅了“RICO”之后可以从此处“噗通”出建筑。也可以从弹出的面板右上角的设置中添加游戏自带的建筑并设置其属性使之成为“RICO”，此操作重启后生效。</p><h2 id="plop-the-growables">Plop the Growables</h2><p>原本Find It只能放置“RICO”，该模组可让游戏自带的“Growables”可通过Find It放置。</p><h2 id="precision-engineering">Precision Engineering</h2><p>修路时按住shift显示更多参数。</p><h1 id="影响经营的模组">影响经营的模组</h1><h2 id="extra-landscaping-tools">extra landscaping tools</h2><p>在工具栏上预算图标右侧新增矿物和水体两个图标，可编辑矿物与水的分布。</p><h2 id="improved-public-transport-2">Improved Public Transport 2</h2><p>在查看公共交通面板时提供时速等信息。</p><h2 id="no-problem-notifications">No Problem Notifications</h2><p>作</p><h2 id="quay-anarchy">quay anarchy</h2><p>允许小河堤在任何地方建造。小河堤平整坡面很有用也很好看。</p><h2 id="prop-tree-anarchy">Prop &amp; Tree Anarchy</h2><p>作</p><h2 id="prop-line-tool-plt-valpha">Prop Line Tool [PLT] (vAlpha)</h2><p>作 摆放prop时可使用类似修路的工具进行线性摆放。</p><h2 id="prop-precision">Prop Precision</h2><p>变大变小</p><h2 id="procedural-objects">Procedural Objects</h2><p>变大变小</p><h2 id="prop-scaling-0.3-experimental-alpha">Prop Scaling 0.3 [Experimental ALPHA]</h2><p>允许贴在表面</p><h1 id="影响城展的模组">影响城展的模组</h1><h2 id="adaptive-prop-visibility-distance">Adaptive Prop Visibility Distance</h2><p>允许调整元素距离多远可见。</p><h2 id="dynamic-resolution-fixed-for-1.9">Dynamic Resolution (Fixed for 1.9!)</h2><p>动态抗拒齿。</p><h2 id="first-person-auto-walking">first person auto walking</h2><p>提供第一人称行走功能。</p><h2 id="lod-toggler-deprecated">LOD Toggler (deprecated)</h2><p>允许手动调整细节程度。封面图是“READY TO MELT YOUR GPU？”。</p><h1 id="影响外观的模组">影响外观的模组</h1><h2 id="network-skins">network skins</h2><p>提供道路皮肤。在道路编辑模式下会在右下角出现小窗口用以选择。</p><h2 id="road-options-road-colors-changer-和-painter">Road Options (Road Colors Changer ++) 和 Painter</h2><h2 id="relight">Relight</h2><p>作显示设置中“色彩矫正覆盖”中提供一些滤镜。</p><h2 id="theme-mixer">Theme Mixer</h2><p>在该模组的选项中可以修改每种元素使用那个主题的样式，只支持创意工房的主题。</p><h2 id="surface-painter">Surface Painter</h2><p>在工具栏右侧增加一个“地表工具”图标，允许涂画地表。譬如建筑之间的缝隙原本是草坪，就可以用它涂成水泥，变得更工业风，非常有用。</p><h1 id="方便操作的模组">方便操作的模组</h1><h2 id="loading-screen-mod">Loading Screen Mod</h2><p>加载时显示加载信息。可提供缺失资产的信息，可禁止部分资产的加载。</p><h2 id="automatic-bulldoze-v2">Automatic Bulldoze v2</h2><p>建筑废弃后自动拆除。</p><h2 id="find-it">Find It!</h2><p>在工具栏右侧提供一个放大镜图标用于搜索资产。</p><h2 id="more-beautification">More Beautification</h2><p>为铲子那个图标提供更多分栏。</p><h2 id="advanced-toolbar">Advanced Toolbar</h2><p>在左下方问号图标旁提供一个加号图标，可将下方道具栏展开后的状态由显示一行提升为三行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/191007_skylinemod.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
记录好用的《发际线》模组。感谢所有模组的作者！常年更新。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/categories/%E5%85%B6%E5%AE%83/"/>
    
      <category term="丧志" scheme="http://yoursite.com/categories/%E5%85%B6%E5%AE%83/%E4%B8%A7%E5%BF%97/"/>
    
      <category term="城市：天际线" scheme="http://yoursite.com/categories/%E5%85%B6%E5%AE%83/%E4%B8%A7%E5%BF%97/%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF/"/>
    
    
      <category term="城市：天际线" scheme="http://yoursite.com/tags/%E5%9F%8E%E5%B8%82%EF%BC%9A%E5%A4%A9%E9%99%85%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro Linux因显卡驱动无法进入图形界面之处理方法</title>
    <link href="http://yoursite.com/2019/09/30/%E6%88%8F%E6%B3%95/Manjaro-Linux%E5%9B%A0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8B%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/09/30/%E6%88%8F%E6%B3%95/Manjaro-Linux%E5%9B%A0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8B%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</id>
    <published>2019-09-30T08:40:32.000Z</published>
    <updated>2019-09-30T08:40:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190930_bumblebee.jpg" /></p><center>因尝试更换显卡驱动为nVIDIA 430xx导致重启后无法进入图形界面，只是黑屏并在屏幕左上角显示一个光标。</center><a id="more"></a><h1 id="环境">0. 环境</h1><ul><li>Manjaro Linux 18.1.0</li><li>video-hybrid-intel-nvidia-430xx-bumblebee VERSION 2019.08.24</li></ul><h1 id="进入tty界面">1. 进入tty界面</h1><p>tty，源于Teletypes，原指电传打字机，对于现在的电脑来讲可以叫终端。可以使用<code>w</code>查看当前使用的终端。在使用GNOME+GDM的manjaro下，共有6个tty。登录界面在tty1运行，登录成功后进入在tty2运行的图形界面（登录界面仍保持在tty1运行）。其余界面为文本界面。现在的问题在于由于显卡驱动问题无法进入tty2，因此只需在文字界面下解决驱动问题即可。</p><p>使用<code>ctrl+alt+Fx</code>可以切换到ttyx，现在切换到tty3，输入用户名，回车，密码，回车，即可进入tty3。</p><h1 id="修改语言配置">2. 修改语言配置</h1><p>tty3-6不能支持中文，而配置的语言是中文的，因此凡是中文会显示为方块。其实在输命令的时候没太大影响，但后面连Wifi的界面全是中文，所以要改成英文。</p><p>使用export命令可以修改语言，且仅对当次进入终端有效。</p><blockquote><p>Linux export 命令用于设置或显示环境变量。</p><p>在 shell 中执行程序时，shell 会提供一组环境变量。export 可新增，修改或删除环境变量，供后续执行的程序使用。export 的效力仅限于该次登陆操作。</p></blockquote><p>通过<code>export -p</code>可以查看当前的环境变量，有关语言的环境变量（也就是locale，也可以直接用<code>locale</code>查看，根据计算机用户所使用的语言、所在国家或地区以及当地的文化传统所定义的一个软件运行时的语言环境。locale的命名规则为<语言>_<地区>.<字符集编码>，如zh_CN.UTF-8，zh代表中文，CN代表大陆地区，UTF-8表示字符集）默认都是“zh_CN.UTF-8”，执行<code>export xxx=xxx</code>可以修改变量的值。</p><p>印象中当时是使用<code>export LC_ALL=en_US.UTF-8</code>和<code>export LANG=en_US.UTF-8</code>。这堆LC_xxx有一堆优先级规则，显而易见LC_ALL是老大。它是一个宏，如果该值设置了，则该值会覆盖所有LC_xxx的设置值。注意，LANG的值不受该宏影响。</p><p>【其它有关内容】</p><ul><li><code>locale -a</code>：查看本机可选的配置。可通过诸如<code>sudo locale-gen &quot;zh_CN.gbk&quot;</code>增加。</li><li>C和POSIX：默认配置，例如<code>export LC_ALL=C</code>。</li></ul><h1 id="连接wifi">3. 连接Wifi</h1><p>因为需要下载安装原本使用的驱动，所以先连Wifi。</p><p>一些Linux中连接Wlan专门有个界面，叫nmtui，即“Network Manager TextUI”，<code>nmtui</code>即可进入。</p><p>其中中间的三个选项，第一个是编辑保存的链接，第二个是进行连接。进去第二个等一会，扫描出来之后连上即可。</p><h1 id="更换驱动">4. 更换驱动</h1><p>manjaro提供了方便的驱动管理工具，叫mhwd，即“Manjaro Hardware Detection”，<code>mhwd</code>即可进入，<code>mhwd-tui</code>可进入TUI。在TUI中很方便地选择“Use nonfree graphics”就好了。更新引导<code>sudo mkinitcpio -P</code>即可。</p><h1 id="尾声">5. 尾声</h1><p>这个默认的闭源驱动是真的不错。</p><p>NVIDIA的Optimus（擎天柱）技术可让笔记本根据性能需要在英特尔集成显卡和NVIDIA独显之间自动切换（其实不是切换而是“是否开启独显”，显示一直都是由集显完成的，只是独立显卡按需渲染并传输给集成显卡显示功能），以达到节约能耗与平衡性能双需求，但此项技术仅仅支持Windows系统。</p><p>而默认的“video-hybrid-intel-nvidia-bumblebee”，也就是那个著名的把<code>rm -rf /usr/lib/nvidia-current/xorg/xorg</code>写成<code>rm -rf /usr /lib/nvidia-current/xorg/xorg</code>的软件，可以实现手动的切换。只需在命令前添加<code>optirun</code>即可指定该命令由独显执行。在Steam下，修改游戏属性中的高级启动选项为<code>optirun %command%</code>可指定游戏运行在独立显卡上。原本我的古墓丽影只能以720P全低特效运行，添加这一选项后可以1080P全最高特效丝般顺滑。可惜不知道为啥存档没能继承Windows上的……</p><p>不过Bumblebee不兼容Vulkan。可能可以通过“nvidia-xrun”解决，还未尝试。</p><p>最开始的时候在steam改高级选项后启动游戏，会闪一下steam的启动界面然后毫无反应。后来解决了，但是忘了怎么弄的了……果然好记性不如双飞燕……可能是一开始没有进行设置：</p><blockquote><p>In order to use Bumblebee, it is necessary to add your regular user to the bumblebee group:</p></blockquote><p>需要<code>gpasswd -a &lt;user&gt; bumblebee</code>。</p><p>使用<code>bumblebeed --version</code>查看bumblebee版本，<code>optirun nvidia-settings -c :8</code>以设置N卡，<code>optirun glxgears -info</code>进行测试，<code>vblank_mode=0 glxgears</code>查看关闭垂直同步后的帧数。</p><h1 id="后记">后记</h1><p>安装Manjaro后的第一次更新之后，再次出现了无法使用<code>optirun %command%</code>命令进入游戏的情况。从终端通过<code>optirun steam</code>进入游戏，则将以集显进入；通过<code>primusrun steam</code>进入，则报错“glXChooseVisual failed”。</p><p>尝试卸载显卡驱动重装，无效。尝试安装网上的驱动前置的东西<code>sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus</code>，无效。有说法认为报错原因是“libGL.so.1指向mesa和nvidia提供的模糊libGL”，因此删除这些（<code>sudo ldconfig -p | grep -i gl.so</code>中查看）指向mesa的.so即可，但我未找到指向mesa的.so。</p><p>最后的处理方案是<code>sudo systemctl disable bumblebeed.service</code>禁用了大黄蜂，安装了另一个管理软件<code>sudo pacman -S optimus-manager</code>并reboot后启用<code>systemctl enable optimus-manager.service</code>。该软件可<code>optimus-manager --switch nvidia</code>切换为N卡。但会注销，还是不如大黄蜂好用……</p><p>【第二天的更新】操，不能用，切完之后<code>optimus-manager --status</code>显示还是用的Intel，昨天断电了玩着卡还以为是断电的原因。似乎是因为GDM与之不兼容，还需要装兼容的版本。游戏啥的，戒了算了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1256194686.cos.ap-shanghai.myqcloud.com/190930_bumblebee.jpg&quot; /&gt;&lt;/p&gt;
&lt;center&gt;
因尝试更换显卡驱动为nVIDIA 430xx导致重启后无法进入图形界面，只是黑屏并在屏幕左上角显示一个光标。
&lt;/center&gt;
    
    </summary>
    
    
      <category term="戏法" scheme="http://yoursite.com/categories/%E6%88%8F%E6%B3%95/"/>
    
    
      <category term="Manjaro" scheme="http://yoursite.com/tags/Manjaro/"/>
    
      <category term="BumbleBee" scheme="http://yoursite.com/tags/BumbleBee/"/>
    
  </entry>
  
</feed>
